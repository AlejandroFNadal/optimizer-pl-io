{"version":3,"sources":["components/Models/Firebase.js","components/Models/index.js","components/LinearProgramation/Configuration/Restrictions/Restriction.js","components/LinearProgramation/Configuration/Restrictions/index.js","components/LinearProgramation/Configuration/Variables/Variable.js","components/LinearProgramation/Configuration/Variables/index.js","components/LinearProgramation/Configuration/index.js","components/LinearProgramation/Processing/Restriccion.js","components/LinearProgramation/Processing/FuncionObj.js","components/LinearProgramation/ReferencesList/index.js","components/LinearProgramation/Processing/index.js","components/LinearProgramation/Presentation/SimplexPresentation.js","components/LinearProgramation/Presentation/GraphicPresentation.js","components/LinearProgramation/Presentation/index.js","components/LinearProgramation/InSteps/index.js","components/NoLinealProgramation/index.js","components/LinearProgramation/index.js","components/Inicio/index.js","components/LinearProgramation/SinglePage/index.js","App.js","serviceWorker.js","index.js","components/LinearProgramation/logo.svg"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirebaseOptimizer","_this","this","Object","classCallCheck","pushTest","dbUsers","doc","set","setTest","then","ok","catch","err","getUserName","user","displayName","getModelsReference","uid","collection","deleteModel","modelId","delete","doSignInWithGoogle","auth","signInWithPopup","googleProvider","doSignOut","signOut","app","apps","length","initializeApp","console","log","logged","firestore","onAuthStateChanged","GoogleAuthProvider","ModalModels","props","possibleConstructorReturn","getPrototypeOf","call","saveNewModel","descModel","state","firebase","model","setState","saveMenu","signIn","logOut","info","toggle","handleClose","loadModel","setModel","id","openSaveModel","handleDesc","e","target","value","loadExampleModel","variables","xi","descripcion","coeficiente","restricciones","ri","coeficientes","eq","derecha","integer","method","objective","loading","models","_this2","loadig","authSubscription","dbSubscribe","onSnapshot","snapshot","forEach","push","data","description","_this3","_this$state","openSaveModelMenu","react_default","a","createElement","Col","Row","Input","required","valid","onChange","placeholder","className","sm","Button","color","outline","onClick","closeSaveModelMenu","loadExample","loginButton","tableModels","Table","responsive","striped","map","key","size","saveModel","modelTableWSpinner","Spinner","type","modalBody","modalFooter","Modal","isOpen","open","ModalHeader","ModalBody","ModalFooter","React","Component","Restriction","_props$restriccion","restriccion","InputGroup","InputGroupAddon","addonType","InputGroupText","name","aria-label","aria-describedby","handleChange","UncontrolledPopover","flip","trigger","placement","PopoverBody","Restrictions","handleChangeRes","desc","splice","restri","index","deleteRes","handleRestrictions","handleNewRes","filter","element","Restrictions_Restriction","Variable","_props$variable","variable","handleChanges","Variables","handleChangesVar","vari","deleteVar","handleVariables","Variables_Variable","Configuration","handleRestricciones","showModels","faltaDescrip","_this$props$status","status","variablesDescriptionsMin","va","restriccionesDescriptionsMin","re","lastStep","_this$props$status2","buttonsMethods","ButtonGroup","handleMethod","active","buttonsOptType","handleObjective","Fragment","Container","Card","CardHeader","CardBody","toggleInteger","PopoverHeader","CardTitle","Configuration_Variables","Configuration_Restrictions","Alert","Restriccion","cantVariables","diferencia","thisEq","botoneraMaxMin","handleCoefRes","disabled","inputsRestriccions","indx","UncontrolledTooltip","FuncionObj","variablesToFunction","handleCoefVar","toUpperCase","ReferencesList","listDescriptionsVarItems","array","item","ListGroupItem","Badge","listDescriptionsResItems","co","references","Collapse","ListGroup","Processing","event","_event$target","parseInt","_event$target2","Number","faltaCoe","verifQty","every","veriResQty","varsOperativas","restriccionesInput","Processing_Restriccion","LinearProgramation_ReferencesList","Processing_FuncionObj","SimplexPresentation","tablaDeRecursosFoot","cantUsoVar","variableId","tableBody","mapperAnalisisTable","result","tableResult","resultSetArray","entries","solutionSet","matrix","_tableau","indexByCol","varIndexByCol","variablesList","variablesPerIndex","variablesRealesList","el","isSlack","keys","includes","evaluation","_ref","_ref2","slicedToArray","slice","col","indCol","Math","abs","cardsVariablesRender","CardText","CardFooter","details","_this$props","elementosTabAnalisis","resultAnalisisCard","resultDetalleCard","randomColor","require","GraphicPresentation","updateState","elem","coefToValueZ","getCoeficientesToEv","referencias","getColorList","_this$getLinesAndExpr","getLinesAndExpressions","lines","expresiones","highestValueX","highestValueY","_this$getPoints","getPoints","points","convexPoints","optimMark","getOptimPoint","lineFunctional","getObjectiveFunctionLine","getTableResult","concat","coef","x","y","getFrac","real","Fraction","pow","toFixed","toString","arrayDeRestriccionesConLosDosCoef","max","apply","xNum","isInteger","yNum","Expression","multiply","expressRestri","add","restriEquation","Equation","tipo","yEqu","solveFor","xEqu","y0","relation","valY","valX","title","hue","luminosity","solSet","P","optimPoint","xMax","yMax","xPoint","yPoint","xExp","subtract","yExp","expFunObj","xVal","error","verifyPoint","point","verifyPointInPoints","verifyPointInRestrictions","some","pointL","calIzq","getPointFromExpXExpY","expX","expY","xRes","yRes","getPointFromExpCExpY","expC","expResultY","expResultX","getPointFromExpCExpX","getPointFromTwoExp","exp1","exp2","getPointFromTwoExpC","exp","pointX","getPointAxFromExpCenX","pointY","getPointAxFromExpCenY","getPointAxFromExpX","getPointAxFromExpY","calcAng","p","atan2","PI","possiblePoints","pointsList","toConsumableArray","sort","b","orderedPoints","_loop","minAngle","reduce","min","indNewPoint","findIndex","getAreaPointsForConvex","shift","slacksTitles","calcResult","calcSlacksValue","hidePoint","showPoint","mapperAreaSeries","es","opacity","mapperLinesSeries","areaGraph","graph","prevProps","_this$props2","onMouseLeave","pointer","width","height","fill","stroke","style","strokeWidth","strokeStyle","onValueMouseOver","onValueMouseOut","orientation","items","convertAppToModelForSolverPrimal","datosApp","optimize","opType","constraints","ints","newVari","res","Presentation","validateCoeficientes","_props$status","varsOperatives","restOperatives","calculateResults","solver","Solve","futureProps","printResults","feasible","bounded","Presentation_SimplexPresentation","Presentation_GraphicPresentation","InSteps","handleResult","step","barProg","finishButtonClick","modelsOpen","steps","stepName","component","stepProps","fluid","xs","md","src","logo","alt","Progress","animated","dist_default","progressbar","headerTextCenter","validate","previousButtonText","nextButtonText","nextButtonClasses","finishButtonText","Models_ModalModels","NoLinealProg","Jumbotron","href","LinearProgramation","react_router_dom","to","Inicio","tag","SinglePage","changes","LinearProgramation_Configuration","LinearProgramation_Processing","LinearProgramation_Presentation","NoLinearProgramation","NoLinealProgramation","Index","components_Inicio","App","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.c88e4f00.chunk.js","sourcesContent":["import app  from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyABNWz15l41jDB9CgrceCS-E7tJvI4qETQ\",\r\n    authDomain: \"optimizer-pl-io.firebaseapp.com\",\r\n    databaseURL: \"https://optimizer-pl-io.firebaseio.com\",\r\n    projectId: \"optimizer-pl-io\",\r\n    storageBucket: \"optimizer-pl-io.appspot.com\",\r\n    messagingSenderId: \"9328532745\",\r\n    appId: \"1:9328532745:web:a0869d1580b25836\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  export default class FirebaseOptimizer {\r\n    constructor() {\r\n      if (!app.apps.length ) {app.initializeApp(firebaseConfig)}\r\n      console.log('Initializando')\r\n      this.auth = app.auth();\r\n      this.logged = false;\r\n      this.user = {};\r\n      this.dbUsers = app.firestore().collection('users'); \r\n      this.auth.onAuthStateChanged( user => { if (user) {this.user=user; this.logged = true}else{this.user={}; this.logged=false}})\r\n      this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    }\r\n\r\n    \r\n  \r\n    // *** Auth API ***\r\n  \r\n    // doCreateUserWithEmailAndPassword = (email, password) =>\r\n    //   this.auth.createUserWithEmailAndPassword(email, password);\r\n  \r\n    // doSignInWithEmailAndPassword = (email, password) =>\r\n    //   this.auth.signInWithEmailAndPassword(email, password);\r\n    \r\n    pushTest = () => this.dbUsers.doc('test').set({'setTest':'Es un Test' }).then(ok=>ok).catch(err=>err)\r\n\r\n    getUserName = () => this.user.displayName;\r\n\r\n    getModelsReference = () => this.dbUsers.doc(this.user.uid).collection('models');\r\n\r\n    deleteModel = modelId => this.dbUsers.doc(this.user.uid).collection('models').doc(modelId).delete().then(ok=>ok).catch(err=>err)\r\n    \r\n    doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider)\r\n  \r\n    doSignOut = () => this.auth.signOut()\r\n\r\n  \r\n  }\r\n","import React from \"react\";\r\nimport FirebaseOptimizer from './Firebase';\r\nimport { Input, Button, Row, Col, Modal, ModalBody, ModalHeader, ModalFooter, Table, Spinner } from \"reactstrap\";\r\n  \r\n\r\nexport default class ModalModels extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.firebase = new FirebaseOptimizer();\r\n    this.state = { loading:false,logged:false, user:'', descModel:'',saveMenu:false , models:[]};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loadig:true})\r\n    this.authSubscription = this.firebase.auth.onAuthStateChanged( user => {\r\n      if( user ){\r\n        console.log('Logged');\r\n        this.setState({ logged: true, user:user.displayName });\r\n        this.dbSubscribe = this.firebase.getModelsReference().onSnapshot(snapshot => {\r\n          let models = [];\r\n    \r\n          snapshot.forEach(doc =>\r\n            models.push({ model:doc.data().model, description: doc.id }),\r\n          );\r\n          console.log(models);\r\n          this.setState({\r\n            models,\r\n            loading: false,\r\n          });\r\n        });\r\n        \r\n      }else{\r\n        this.dbSubscribe && this.dbSubscribe();\r\n        console.log('No Logged');\r\n        this.setState({ logged: false, user:'', models:[] });\r\n      }\r\n      \r\n    });\r\n      \r\n    \r\n   \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.authSubscription();\r\n    this.dbSubscribe && this.dbSubscribe();\r\n    this.setState({ logged:false, user:'', models:[] });\r\n  }\r\n\r\n  saveNewModel = () => {\r\n    let { descModel } = this.state;\r\n    if (descModel) {\r\n      this.firebase.getModelsReference().doc(descModel).set({'model':this.props.model})\r\n      .then(ok => this.setState({ descModel:'', saveMenu:false}))\r\n      .catch(err=> console.log(err));\r\n    }\r\n  }\r\n\r\n  signIn = () => this.firebase.doSignInWithGoogle().then( user => console.log('Signin'))\r\n\r\n  logOut = () => this.firebase.doSignOut().then( info => console.log('SignOut'))\r\n\r\n  toggle = () => this.props.handleClose()\r\n\r\n  loadModel = model => { this.props.setModel(model); this.toggle(); }\r\n\r\n  deleteModel = id => this.firebase.deleteModel(id)\r\n \r\n  openSaveModel = () => this.setState({saveMenu:!this.state.saveMenu})\r\n\r\n  handleDesc = (e) => this.setState({descModel:e.target.value})\r\n\r\n  loadExampleModel = () => {\r\n    let variables = [\r\n      { xi: 0, descripcion: \"Pantalones (u/día)\", coeficiente: 3 },\r\n      { xi: 1, descripcion: \"Camisas (u/día)\", coeficiente: 1 }\r\n    ];\r\n    let restricciones = [\r\n      { ri: 0, descripcion: \"Mano de obra (hs/día)\", coeficientes: [1, 1], eq: \"<=\", derecha: 8 },\r\n      { ri: 1, descripcion: \"Minimo de Produccion (u/día)\", coeficientes: [1, 6], eq: \">=\", derecha: 14 }\r\n    ];\r\n    let model = {\r\n      variables,\r\n      restricciones, \r\n      integer: false, \r\n      method: \"graph\", \r\n      objective: \"max\"\r\n    }\r\n    this.loadModel(model)\r\n  };\r\n  \r\n\r\n  render() {\r\n    let { logged ,user, descModel, saveMenu, models} = this.state;\r\n    \r\n    let openSaveModelMenu =  \r\n      <Col>\r\n        <Row><Input required valid={descModel.length!==0} onChange={this.handleDesc} value={descModel} placeholder='Descripcion del Modelo'/></Row>\r\n        <Row className='mt-2'><Col sm={8} className='text-center'><Button color=\"success\" outline onClick={this.saveNewModel}>Guardar Modelo Actual</Button></Col>\r\n      <Col sm={4} className='text-center'><Button color=\"danger\" outline onClick={this.openSaveModel}>Cancelar</Button></Col></Row></Col>\r\n    \r\n    let closeSaveModelMenu =\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} className='text-center'><Button color=\"success\" outline onClick={this.openSaveModel}>Nuevo Modelo</Button></Col>\r\n          <Col sm={6} className='text-center'><Button color=\"primary\" outline onClick={this.logOut}>Cerrar Session</Button></Col>\r\n        </Row>\r\n      </Col>    \r\n    \r\n    let loadExample = <Col sm={12} className='text-center'><Button color=\"warning\" outline onClick={this.loadExampleModel}>Cargar Modelo de Ejemplo</Button></Col>\r\n    \r\n    let loginButton = <Col sm={12} className='text-center'><Button color=\"primary\" outline onClick={this.signIn}>Iniciar Session Con Google</Button></Col>\r\n  \r\n    let tableModels = \r\n      <Col sm={12}>\r\n        <Table responsive striped>\r\n          <thead><tr><th>Descripcion</th><th></th><th></th></tr></thead>\r\n          <tbody>{models.map( model => <tr key={'M-M-'+model.description}><td>{model.description}</td><td className='btnSize'><Button size='sm' onClick={e => this.loadModel(model.model)}color='success'>Cargar</Button></td><td className='btnSize'><Button size='sm' onClick={e => this.deleteModel(model.description)} color='danger'>Eliminar</Button></td></tr>)}</tbody>\r\n        </Table>\r\n      </Col>\r\n\r\n    let saveModel = saveMenu ? openSaveModelMenu : closeSaveModelMenu;\r\n\r\n    let modelTableWSpinner = models.length ? tableModels : <Col className='text-center' sm={12}><Spinner type='grow' color='black'/></Col>\r\n    \r\n    let modalBody = logged ? modelTableWSpinner : loadExample \r\n    \r\n    let modalFooter = logged ? saveModel : loginButton\r\n    \r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.props.open} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Modelos {logged && ' de '+user}</ModalHeader>\r\n          <ModalBody><Row className='mx-auto w-100'>{ modalBody }</Row></ModalBody>\r\n          <ModalFooter><Row className='mx-auto w-100'>{ modalFooter }</Row></ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {InputGroupText,InputGroup, Input,InputGroupAddon,UncontrolledPopover,PopoverBody} from 'reactstrap';\r\n\r\nconst Restriction = props => {\r\n    let {ri,descripcion} = props.restriccion\r\n    \r\n    const handleChange = e => props.handleChange(ri,e.target.value)\r\n    return(\r\n        <InputGroup className=\"mt-1\" id={\"TTR\" + ri} key={\"RTD\" + ri}>\r\n\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\" + ri}</InputGroupText>\r\n        </InputGroupAddon>\r\n\r\n        <Input\r\n          name={ri}\r\n          placeholder=\"Descripcion de la Restriccion\"\r\n          aria-label=\"Descripcion\"\r\n          aria-describedby=\"restriccion\"\r\n          onChange={handleChange}\r\n          value={descripcion}/>\r\n\r\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"TTR\" + ri}>\r\n          <PopoverBody>Aquí debes ingresar qué representa la restricción en el modelo.</PopoverBody>\r\n        </UncontrolledPopover>\r\n\r\n      </InputGroup>)\r\n    \r\n}\r\n\r\nexport default Restriction;","import React from 'react';\r\nimport Restriction from './Restriction';\r\n\r\nconst Restrictions = props => {\r\n    \r\n    let {restricciones} = props;\r\n    \r\n    const deleteRes = ri => {\r\n        restricciones.splice(ri, 1)\r\n        restricciones.forEach( (restri,index) => restri.ri = index )\r\n    }\r\n    //Función que se encarga de manejar las modificaciones de restricciones.\r\n    const handleChangeRes = (ri,desc) => {\r\n        //Si el cambio es dejarla vacia entonces eliminamos la restriccion Sino, Almacenamos el valor\r\n        if (desc === '') { deleteRes(ri) }else{ restricciones[ri].descripcion = desc }\r\n        //pedimos al padre que almacene los cambios\r\n        props.handleRestrictions(restricciones);\r\n        //Llamamos a generar si corresponde nueva restriccion\r\n        handleNewRes();\r\n    };\r\n    //Función que se encarga de Añadir una restriccion si es necesario.\r\n    const handleNewRes = () => {\r\n        //Agregamos Tope de Restricciones\r\n        if(restricciones.length < 30 ){\r\n        //Contador de Rescciones sin descripciones.\r\n        let counterWitheRes = restricciones.filter(element => element.descripcion.length === 0).length;\r\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\r\n            if (counterWitheRes === 0) {\r\n            restricciones.push({\r\n                ri: restricciones.length,\r\n                descripcion: \"\",\r\n                coeficientes: [],\r\n                eq: \">=\",\r\n                derecha: \"\"\r\n            });\r\n            props.handleRestrictions(restricciones);\r\n            }\r\n        }\r\n        };\r\n    handleNewRes();\r\n    return restricciones.map( restri => <Restriction key={'RES-'+restri.ri} handleChange={handleChangeRes} restriccion={restri}/>)\r\n}\r\n\r\nexport default Restrictions;","import React from 'react';\r\nimport {InputGroupText,InputGroup, Input,InputGroupAddon,UncontrolledPopover,PopoverBody} from 'reactstrap';\r\n\r\nconst Variable = props => {\r\n    let {xi,descripcion} = props.variable\r\n    const handleChange = e => props.handleChanges(xi,e.target.value) \r\n    return(\r\n        <InputGroup className=\"mt-1\" id={\"XTT\" + xi} key={\"VTD\" + xi}>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText name=\"xi\" id=\"variable\">\r\n            {\"X\" + xi}\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input\r\n          name={xi}\r\n          placeholder=\"Descripcion de la Variable\"\r\n          aria-label=\"Descripcion\"\r\n          aria-describedby=\"variable\"\r\n          onChange={handleChange}\r\n          value={descripcion}\r\n        />\r\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"XTT\" + xi}>\r\n          <PopoverBody>Aquí debes ingresar qué representa la variable en el modelo.</PopoverBody>\r\n        </UncontrolledPopover>\r\n      </InputGroup>)\r\n    \r\n}\r\n\r\nexport default Variable;","import React from 'react';\r\nimport Variable from './Variable';\r\n\r\nconst Variables = props => {\r\n    let { variables,method } = props\r\n        //Función que se encarga de manejar las modificaciones en las variables.\r\n        const deleteVar = xi => {\r\n            if (variables.length > 2){\r\n                variables.splice(xi, 1)\r\n                variables.forEach( (vari,index) => vari.xi = index )\r\n            }else{\r\n                variables[xi].descripcion = ''\r\n            }\r\n        }\r\n        //Función que se encarga de manejar las modificaciones de restricciones.\r\n        const handleChangesVar = (xi,desc) => {\r\n            //Si el cambio es dejarla vacia entonces eliminamos la restriccion Sino, Almacenamos el valor\r\n            if (desc === '') { deleteVar(xi) }else{ variables[xi].descripcion = desc }\r\n            //pedimos al padre que almacene los cambios\r\n            props.handleVariables(variables);\r\n        };\r\n        //Función que se encarga de Añadir una Variable si es necesario.\r\n    const handleNewsVar = () => {\r\n        if (method === \"simplex\") {\r\n            if( variables.length < 20 ){\r\n                //Si el metodo es Simplex, se permite agregar más de dos variables.\r\n                let counterWitheVar = variables.filter(element => element.descripcion.length === 0).length;\r\n                //Si la cantidad de Variables Libres es igual a 0 se agrega una más.\r\n                if (counterWitheVar === 0) {\r\n                variables.push({ xi: variables.length, descripcion: \"\", coeficiente: \"\" });\r\n                props.handleVariables(variables);\r\n                }\r\n            }\r\n        } else {\r\n        //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que está de más.\r\n            if (variables.length > 2) {\r\n                variables.splice(2);\r\n                props.handleVariables(variables);\r\n            }\r\n        }\r\n    };\r\n    handleNewsVar();\r\n    return variables.map( variable => <Variable key={'VAR-'+variable.xi} handleChanges={handleChangesVar} variable={variable}/> )\r\n}\r\n\r\nexport default Variables;","import React from \"react\";\r\nimport { ButtonGroup, Button, Container, Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport { Alert, UncontrolledPopover, PopoverBody, PopoverHeader } from \"reactstrap\";\r\nimport Restrictions from \"./Restrictions\";\r\nimport Variables from \"./Variables\";\r\n\r\nclass Configuration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { faltaDescrip: \"\" };\r\n  }\r\n\r\n  //Función que permite validar si se ingresaron todos los cambios correspondientes en la etapa\r\n  isValidated() {\r\n    let { variables, restricciones } = this.props.status;\r\n    let variablesDescriptionsMin = variables.filter(va => va.descripcion !== \"\");\r\n    let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !== \"\");\r\n    if ((variablesDescriptionsMin.length > 1) & (restriccionesDescriptionsMin.length > 0)) {\r\n      this.props.lastStep(1);\r\n      this.setState({ faltaDescrip: \"\" });\r\n      return true;\r\n    } else if (variablesDescriptionsMin.length < 2) {\r\n      this.setState({ faltaDescrip: \"Se necesitan como mínimo dos variables\" });\r\n    } else if (restriccionesDescriptionsMin.length < 1) {\r\n      this.setState({ faltaDescrip: \"Se necesita como mínimo una restricción\" });\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  //Funcion que se encarga de traspasar los cambios al padre\r\n  handleRestrictions = restricciones => this.props.handleRestricciones(restricciones)\r\n  \r\n  //Funcion que se encarga de traspasar los cambios al padre\r\n  handleVariables = variables => this.props.handleVariables(variables)\r\n  \r\n  //Modelos\r\n  showModels = () => this.props.showModels()\r\n\r\n  render() {\r\n    //Obtenemos de las props, las varaibles y restricciones.\r\n    let {variables,restricciones,method } = this.props.status;\r\n\r\n    let buttonsMethods = (\r\n      <ButtonGroup id=\"ButtUtil\">\r\n        <Button\r\n          outline\r\n          onClick={ () => this.props.handleMethod(\"graph\")}\r\n          active={this.props.status.method === \"graph\"}\r\n          color=\"primary\">\r\n          Gráfico\r\n        </Button>\r\n        <Button\r\n          outline\r\n          onClick={ () => this.props.handleMethod(\"simplex\")}\r\n          active={this.props.status.method === \"simplex\"}\r\n          color=\"primary\">\r\n          Simplex\r\n        </Button>\r\n      </ButtonGroup>\r\n    );\r\n    let buttonsOptType = (\r\n      <ButtonGroup>\r\n        <Button\r\n          outline\r\n          onClick={() => this.props.handleObjective(\"max\")}\r\n          active={this.props.status.objective === \"max\"}\r\n          color=\"primary\"\r\n        >\r\n          Maximizar\r\n        </Button>\r\n        <Button\r\n          outline\r\n          onClick={() => this.props.handleObjective(\"min\")}\r\n          active={this.props.status.objective === \"min\"}\r\n          color=\"primary\"\r\n        >\r\n          Minimizar\r\n        </Button>\r\n      </ButtonGroup>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <h3>Comenzamos configurando nuestro modelo</h3>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardInteger\">\r\n                <PopoverBody>Esta función activa o desactiva la Programacion Lineal Entera.</PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardInteger\" className=\"mt-2 mx-auto\">\r\n                <CardHeader>Programación entera</CardHeader>\r\n                <CardBody>\r\n                  <Button\r\n                    outline\r\n                    color={this.props.status.integer ? \"success\" : \"danger\"}\r\n                    onClick={() => this.props.toggleInteger()}\r\n                  >\r\n                    {this.props.status.integer ? \"Activa\" : \"Inactiva\"}\r\n                  </Button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardModel\">\r\n                <PopoverBody>\r\n                  En esta seccion usted podra almacenar en la base de datos los modelos deseados, realizando el registro con su cuenta de Google.\r\n                </PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardModel\" className=\"mt-2 mx-auto\">\r\n                <CardHeader>Gestion de Modelos</CardHeader>\r\n                <CardBody>\r\n                  <Button color=\"warning\" outline onClick={this.showModels}>\r\n                    Modelos\r\n                  </Button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardUtil\">\r\n                <PopoverBody>\r\n                  Aquí debes seleccionar el método de cálculo y visualización de los resultados.\r\n                </PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardUtil\" className=\"mt-3 mx-auto\">\r\n                <CardHeader>Método a utilizar</CardHeader>\r\n                <CardBody>{buttonsMethods}</CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardOpt\">\r\n                <PopoverBody>\r\n                  Y aquí el tipo de optimizacion que deseas realizar: si deseas maximizar o minimizar la\r\n                  función.\r\n                </PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardOpt\" className=\"mt-3 mx-auto\">\r\n                <CardHeader>Tipo de optimización</CardHeader>\r\n                <CardBody>{buttonsOptType}</CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardVariables\">\r\n              <PopoverHeader>Variables</PopoverHeader>\r\n              <PopoverBody>\r\n                Aquí debes ingresar las variables que formarán parte del modelo, las mismas son de carga\r\n                dinámica.\r\n              </PopoverBody>\r\n            </UncontrolledPopover>\r\n            <Card outline color=\"secondary\" id=\"CardVariables\" className=\"w-100 mt-3 mx-auto\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Variables</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody><Variables method={method} handleVariables={this.handleVariables} variables={variables}/></CardBody>\r\n            </Card>\r\n          </Row>\r\n          <Row>\r\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardRestri\">\r\n              <PopoverHeader>Restricciones</PopoverHeader>\r\n              <PopoverBody>\r\n                Aquí debes ingresar las restricciones que formarán parte del modelo, éstas también son de\r\n                carga dinámica.\r\n              </PopoverBody>\r\n            </UncontrolledPopover>\r\n            <Card outline color=\"secondary\" id=\"CardRestri\" className=\"w-100 mt-3 mx-auto\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Restricciones</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody><Restrictions handleRestrictions={this.handleRestrictions} restricciones={restricciones}/></CardBody>\r\n            </Card>\r\n          </Row>\r\n          {this.state.faltaDescrip !== \"\" && (\r\n            <Row className=\"mt-3\">\r\n              <Alert className=\"mx-auto\" color=\"danger\">\r\n                {this.state.faltaDescrip}\r\n              </Alert>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Configuration;\r\n","import React from 'react';\r\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup,UncontrolledTooltip} from 'reactstrap';\r\n\r\nconst Restriccion = props => {\r\n    let {coeficientes} = props.restriccion;\r\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\r\n    if (coeficientes.length !== props.cantVariables) {\r\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \r\n        let diferencia = props.cantVariables - coeficientes.length;\r\n        if ( diferencia > 0 ) {\r\n            for (let index = 0; index < diferencia; index++) {\r\n                coeficientes.push('')       \r\n            }\r\n        }else {\r\n            coeficientes.splice(props.cantVariables)\r\n        }\r\n    }\r\n\r\n    let thisEq = props.restriccion.eq;\r\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\r\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \r\n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \r\n                                        value='<='>{'<='}</Button>\r\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \r\n                                        disabled \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \r\n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \r\n                                        value='='>{'='}</Button>\r\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \r\n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \r\n                                        value='>='>{'>='}</Button>\r\n                                </ButtonGroup>);\r\n    let inputsRestriccions = coeficientes\r\n    .map((coeficiente,indx) => \r\n        <React.Fragment key={'divCi'+indx}>\r\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\r\n                type=\"number\"\r\n                name={indx}\r\n                placeholder=\"Coefiente\"\r\n                className=\"InputCoeficiente\"\r\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\r\n                value={coeficiente}\r\n                />\r\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\r\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\r\n            </InputGroupAddon>\r\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\r\n        </React.Fragment>\r\n            \r\n    )\r\n\r\n    return(\r\n        <Card key={'CR'+props.restriccion.ri} id={'CR'+props.restriccion.ri}>\r\n            <UncontrolledTooltip flip={false} key={'TTCR'+props.restriccion.ri} placement='auto' target={'CR'+props.restriccion.ri}>\r\n            {'Aqui debes ingresar los coeficiente de '+props.restriccion.descripcion}\r\n            </UncontrolledTooltip>\r\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\r\n            <CardBody className=\"p-0 my-1 mx-auto\">\r\n                <InputGroup key={'RT'+props.restriccion.ri}>\r\n                    {inputsRestriccions}\r\n                    {botoneraMaxMin}\r\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\r\n                            type=\"number\"\r\n                            name={'derecha'}\r\n                            placeholder=\"Coe\"\r\n                            className=\"InputCoeficiente\"\r\n                            aria-label=\"Coe\"\r\n                            aria-describedby=\"restriccion\"\r\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\r\n                            value={props.restriccion.derecha}/>\r\n                </InputGroup>\r\n            </CardBody>\r\n        </Card>)\r\n    \r\n}\r\n\r\nexport default Restriccion;","import React from 'react';\r\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, UncontrolledTooltip } from 'reactstrap'\r\n\r\n\r\nconst FuncionObj = props => {\r\n    let {variables} = props\r\n    let variablesToFunction = variables\r\n    .filter(vari => vari.descripcion !== '')\r\n    .map( (vari,index) => \r\n        <React.Fragment key={'divIF'+index}>\r\n            <UncontrolledTooltip flip={false} key={'TTV'+index} placement='auto' target={'IF'+index}>\r\n            {'Aqui debes ingresar el coeficiente de '+vari.descripcion}\r\n            </UncontrolledTooltip>\r\n            <Input key={'IF'+index}\r\n                    id={'IF'+index}\r\n                        type='number'\r\n                        name={vari.xi}\r\n                        placeholder=\"Coef\"\r\n                        className=\"InputCoeficiente\"\r\n                        aria-label=\"Coeficiente\"\r\n                        aria-describedby=\"coe\"\r\n                        onChange={ e => props.handleCoefVar(e)}\r\n                        value={vari.coeficiente}\r\n                        />\r\n            <InputGroupAddon key={'ADDIF'+index} addonType=\"append\">\r\n                <InputGroupText key={'IFD'+index}>{\"X\"+vari.xi}</InputGroupText>\r\n            </InputGroupAddon>\r\n            {index < variables.filter(vari => vari.descripcion !== '').length-1 && <InputGroupText key={'+IF'+index}>+</InputGroupText>}\r\n        </React.Fragment>) \r\n\r\n    return(\r\n            <InputGroup key={'INPUTFUNCIONAL'}>\r\n                {variablesToFunction}\r\n                <InputGroupText className='mx-1' key='IFOPT'>{' => '+props.objective.toUpperCase()}</InputGroupText>\r\n            </InputGroup>\r\n    \r\n    ) \r\n}\r\n\r\nexport default FuncionObj;","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Col,\r\n  Collapse,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge\r\n} from \"reactstrap\";\r\n\r\nclass ReferencesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { references: false };\r\n  }\r\n\r\n  listDescriptionsVarItems = array =>\r\n    array\r\n      .filter(item => item.descripcion !== \"\")\r\n      .map(item => (\r\n        <ListGroupItem key={\"DLGIV\" + item.xi} className=\"text-left\">\r\n          <Badge>{\"X\" + item.xi}</Badge>\r\n          {\" \" + item.descripcion}\r\n          <Badge className='float-right'>{'C: '+item.coeficiente}</Badge>\r\n        </ListGroupItem>\r\n      ));\r\n\r\n  listDescriptionsResItems = array =>\r\n    array\r\n      .filter(item => item.descripcion !== \"\")\r\n      .map(item => (\r\n        <ListGroupItem key={\"DLGIR\" + item.ri} className=\"text-left\">\r\n          <Badge>{\"R\" + item.ri}</Badge>\r\n          {\" \" + item.descripcion}\r\n          <Badge className='float-right'>{item.coeficientes.map((co,indx) => co+' X'+indx+' ') + ' '+item.eq+' '+item.derecha}</Badge>\r\n        </ListGroupItem>\r\n      ));\r\n\r\n  render() {\r\n    //Obtenemos las propiedades del Super\r\n    let { variables } = this.props;\r\n    let { restricciones } = this.props;\r\n\r\n    return (\r\n      <Card outline color=\"secondary\" className=\"w-100 mt-3\">\r\n        <CardHeader>\r\n          <Row>\r\n            <Col className=\"text-left\">\r\n              <CardTitle>\r\n                <h4>Referencias</h4>\r\n              </CardTitle>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                outline\r\n                size=\"sm\"\r\n                onClick={() => this.setState({ references: !this.state.references })}\r\n                color={!this.state.references ? \"success\" : \"danger\"}\r\n              >\r\n                {!this.state.references ? \"Ver referencias\" : \"Ocultar referencias\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <Collapse isOpen={this.state.references}>\r\n          <CardBody>\r\n            <h5 className=\"text-center\">Variables:</h5>\r\n            <ListGroup>{this.listDescriptionsVarItems(variables)}</ListGroup>\r\n            <h5 className=\"text-center mt-5\">Restricciones:</h5>\r\n            <ListGroup>{this.listDescriptionsResItems(restricciones)}</ListGroup>\r\n          </CardBody>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReferencesList;\r\n","import React from \"react\";\r\nimport { Container, Row, Card, CardBody, CardHeader, CardTitle, Alert } from \"reactstrap\";\r\nimport Restriccion from \"./Restriccion\";\r\nimport FuncionObj from \"./FuncionObj\";\r\nimport ReferencesList from \"../ReferencesList\";\r\n\r\nclass Processing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { faltaCoe: \"\" };\r\n  }\r\n\r\n  isValidated() {\r\n    //Verificando si los coeficientes de las variables y las restricciones no son nulos\r\n    let verifQty = this.props.status.variables\r\n      .filter(va => va.descripcion !== \"\")\r\n      .every(va => va.coeficiente !== \"\");\r\n    let veriResQty = this.props.status.restricciones\r\n      .filter(re => re.descripcion !== \"\")\r\n      .every(re => re.coeficientes.every(co => co !== \"\") && re.derecha !== \"\");\r\n    if (verifQty && veriResQty) {\r\n      console.log(verifQty+'dff:'+veriResQty);\r\n      \r\n      this.props.lastStep(2);\r\n      this.setState({ faltaCoe: \"\" });\r\n      return true;\r\n    } else {\r\n      let faltaCoe;\r\n      faltaCoe = veriResQty\r\n        ? \"Falta algun coeficiente del Funcional\"\r\n        : \"Falta algun coeficiente en las Restricciones\";\r\n      this.setState({ faltaCoe });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //En el siguiente handler, se toma del input de una variable en particular el coeficiente.\r\n  handleCoefVar = event => {\r\n    let { value, name } = event.target;\r\n    if (value) {\r\n      let { variables } = this.props.status;\r\n      variables[name].coeficiente = parseInt(value);\r\n      this.props.handleVariables(variables);\r\n      console.log(this.props.status.variables);\r\n    }\r\n  };\r\n\r\n  handleCoefRes = (event, ri) => {\r\n    let { name, value } = event.target;\r\n    let { restricciones } = this.props.status;\r\n    console.log(\"En la Res:\" + ri + \", en el campo:\" + name + \",con el valor:\" + value);\r\n\r\n    switch (name) {\r\n      case \"derecha\":\r\n        restricciones[ri].derecha = Number(value);\r\n        break;\r\n      case \"eq\":\r\n        restricciones[ri].eq = value;\r\n        break;\r\n      default:\r\n        restricciones[ri].coeficientes[name] = Number(value);\r\n        break;\r\n    }\r\n    console.log(restricciones);\r\n    this.props.handleRestricciones(restricciones);\r\n  };\r\n\r\n  render() {\r\n    //Obtenemos las propiedades del Super\r\n    let { variables } = this.props.status;\r\n    let { restricciones } = this.props.status;\r\n    let varsOperativas = variables.filter(va => va.descripcion !== \"\").length;\r\n\r\n    //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\r\n\r\n    let restriccionesInput = restricciones\r\n      .filter(item => item.descripcion !== \"\")\r\n      .map((restriccion, index) => (\r\n        <Restriccion\r\n          className=\"mt-1\"\r\n          key={\"R\" + index}\r\n          handleCoefRes={this.handleCoefRes}\r\n          cantVariables={varsOperativas}\r\n          restriccion={restriccion}\r\n        />\r\n      ));\r\n\r\n    return (\r\n      <>\r\n        <h3>Cargamos los datos de nuestro modelo</h3>\r\n        <Container>\r\n          <Row>\r\n            <ReferencesList variables={variables} restricciones={restricciones} />\r\n          </Row>\r\n          <Row>\r\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Función objetivo</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody className=\"mx-auto\">\r\n                <FuncionObj\r\n                  variables={variables}\r\n                  handleCoefVar={this.handleCoefVar}\r\n                  objective={this.props.status.objective}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n          <Row>\r\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Restricciones</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody>{restriccionesInput}</CardBody>\r\n            </Card>\r\n          </Row>\r\n          {this.state.faltaCoe !== \"\" && (\r\n            <Row className=\"mt-3\">\r\n              <Alert className=\"mx-auto\" color=\"danger\">\r\n                {this.state.faltaCoe}\r\n              </Alert>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Processing;\r\n","import React from 'react';\r\nimport {Card,CardTitle,CardBody,CardText,CardHeader,Table,CardFooter,Row,Col,Button,Collapse} from 'reactstrap';\r\nimport ReferencesList from '../ReferencesList'\r\n\r\nclass SimplexPresentation extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        this.state={details:false}\r\n    }\r\n\r\n    //Funcion que en base al uso de una variable, devuelve una tabla con los recursos utilizados\r\n    tablaDeRecursosFoot = (cantUsoVar,variableId) => {\r\n        let {restricciones} = this.props;\r\n        let tableBody = restricciones.filter(item => item.descripcion!== '')\r\n        //Realizamos calculos\r\n        .map( restri => \r\n            <tr key={'TdeV'+variableId+'R'+restri.ri}><td>{'R'+restri.ri}</td><td>{cantUsoVar*restri.coeficientes[variableId]}</td>\r\n            <td>{restri.derecha-(cantUsoVar*restri.coeficientes[variableId])}</td></tr>)\r\n        return(<Table size='sm' responsive>\r\n            <thead><tr><th>Recurso</th><th>Usado</th><th>Diferencia</th></tr></thead>\r\n            <tbody>{tableBody}</tbody>\r\n        </Table>)\r\n\r\n    }\r\n\r\n    mapperAnalisisTable = (result) => {\r\n        //El array al cucal enviamos los resultados procesados\r\n        let tableResult=[];\r\n        //Obtenemos el Set de Resultados con Formato [key,value]\r\n        let resultSetArray =  Object.entries(result.solutionSet);\r\n        //Obtenemos la matriz del simplex reducida\r\n        let matrix = result._tableau.matrix;\r\n        //Obtenemos los indices de cada columna\r\n        let indexByCol = result._tableau.varIndexByCol;\r\n        //Obtenemos la Lista de Variables Slack y Reales\r\n        let variablesList = result._tableau.variablesPerIndex\r\n        //Obtenemos la Lista de Variables Reales\r\n        let variablesRealesList = result._tableau.variablesPerIndex.filter(el => !el.isSlack);\r\n        //Contamos la Cantidad de elementos en la fila de resultados (van a ser cero por ser simplex reducido)\r\n        let itemsinCero = matrix[0].length - 1;\r\n        //Obtenemos cuales son las variables que no estan en el set de resultados (van a ser cero)\r\n        let varsEnCero = variablesRealesList.filter( vari => !Object.keys(result.solutionSet).includes(vari.id) )\r\n        //La cantidad de columnas en la fila de resultados - la cantidad de variables nulas, me devuelven la cantidad de slacks\r\n        let slacksEnCero = itemsinCero - varsEnCero.length;\r\n\r\n        //Procesamos INFO\r\n\r\n        //Primer elemento de la Tabla, el Optimo.\r\n        tableResult.push({name:'Optimo',item:'',value:result.evaluation});\r\n        //Procesamos todos los elementos a producir (result Set)\r\n        resultSetArray.forEach( ([key,value]) => tableResult.push({name:'Producir',item:'X'+key, value}) )\r\n        //Procesamos el uso de los recursos, es decir, los elementos extras de la Fila de Resultados(Matriz)\r\n        if (resultSetArray.length < matrix.length-1) {\r\n            console.log('hola');\r\n        }\r\n\r\n        //Procesamos los Costo de Oportunidad y los Valores Marginales\r\n        matrix[0].slice(1)\r\n                .forEach( (col,indCol) => {\r\n                    //Creamos un nuevo item.\r\n                    let item= {name:'',item:'',value:''};\r\n                    //Verificamos si es Slack o Variable Real\r\n                    if (variablesList[indexByCol[indCol+1]].isSlack){\r\n                        item.name = 'Valor Marginal';\r\n                        item.item = 'R'+indexByCol[indCol+1];\r\n                        item.value = Math.abs(col);\r\n                    }else{\r\n                        item.name = 'Costo de Oportunidad';\r\n                        item.item = 'X'+variablesList[indexByCol[indCol+1]].id;\r\n                        item.value = Math.abs(col);\r\n                    }\r\n                    \r\n                    //Empujamos el item a la tabla de resultados\r\n                    tableResult.push(item)})\r\n            \r\n        return tableResult\r\n    }\r\n\r\n    cardsVariablesRender = (variables,result) => variables\r\n                                                    .filter(vari => vari.descripcion !== '')\r\n                                                    .map( vari => \r\n                                                                <Card key={'C-V-'+vari.xi} outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                                                                    <CardHeader><CardTitle>{'Variable: X'+vari.xi}</CardTitle></CardHeader>    \r\n                                                                    <CardBody>\r\n                                                                        <Row><CardText>{\r\n                                                                            result.solutionSet[vari.xi] ? \r\n                                                                            'Se recomienda producir '+result.solutionSet[vari.xi]+' unidades':\r\n                                                                            'No se recomienda la produccion'}\r\n                                                                            {' de '+vari.descripcion}</CardText>\r\n                                                                        </Row>\r\n                                                                        <Row></Row> \r\n                                                            \r\n                                                                    </CardBody>\r\n                                                                    <CardFooter>\r\n                                                                        <CardText>Tabla de Recursos:</CardText>\r\n                                                                        {result.solutionSet[vari.xi] ? \r\n                                                                        this.tablaDeRecursosFoot(result.solutionSet[vari.xi],vari.xi):'Sin Consumo de Recursos'}\r\n                                                                    </CardFooter>\r\n\r\n                                                                </Card>)\r\n\r\n\r\n    render () {\r\n        //Obtenemos el resultado almacenado\r\n        //Obtenemos las Variables desde las props\r\n        let {variables, restricciones,result} = this.props;\r\n        \r\n    \r\n        //Obtenemos  la informacion para la tabla de Analisis\r\n        let itemsTabAnalisis = this.mapperAnalisisTable(result);     \r\n        //Renderizamos el Tablero de analisis\r\n        let elementosTabAnalisis = itemsTabAnalisis.map( (item, index) => <tr key={'T-A-'+index}><td>{item.name}</td><td>{item.item}</td><td>{item.value}</td></tr>);\r\n        // \r\n        let resultAnalisisCard = \r\n                        <Card outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                            <CardHeader><CardTitle><h4>Tablero de Analisis</h4></CardTitle></CardHeader>\r\n                            <CardBody>\r\n                                <Table>\r\n                                    <thead><tr><th></th><th>Elemento</th><th>Valor</th></tr></thead>\r\n                                    <tbody>\r\n                                        {elementosTabAnalisis}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n        let resultDetalleCard = <Card outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                                <CardHeader>\r\n                                    <Row>\r\n                                        <Col className=\"text-left\"><CardTitle><h5>Detalle de Variables Y Recursos:</h5></CardTitle></Col>\r\n                                        <Col><Button outline size='sm'\r\n                                            onClick={() => this.setState({details:!this.state.details})} \r\n                                            color={!this.state.details ? 'success':'danger'}>{!this.state.details ? 'Ver Detalles':'Ocultar Detalles'}</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardHeader>\r\n                                <Collapse isOpen={this.state.details}>\r\n                                    <CardBody>\r\n                                        {this.cardsVariablesRender(variables,result)}\r\n                                    </CardBody>\r\n                                </Collapse>\r\n                            </Card>\r\n        return(\r\n                <CardBody>\r\n                    <Row>{resultAnalisisCard}</Row>\r\n                    <Row><ReferencesList variables={variables} restricciones={restricciones}/></Row>\r\n                    <Row>{resultDetalleCard}</Row>\r\n                </CardBody>)\r\n    }\r\n}\r\n\r\nexport default SimplexPresentation;","import React from 'react';\r\nimport {CardBody, Card, CardHeader,CardFooter,Table,Row,Col,CardTitle,Button} from 'reactstrap';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines,LineSeries, AreaSeries, VerticalGridLines,MarkSeries,DiscreteColorLegend,Hint} from 'react-vis';\r\nimport {Expression, Equation,Fraction} from 'algebra.js';\r\nimport ReferencesList from '../ReferencesList';\r\nvar randomColor = require('randomcolor');\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GraphicPresentation extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        this.state={lineFunctional:[],convexPoints:[],tableResult:'',optimMark:[],points:[],lines:[],referencias:[],value:null,areaGraph:false}\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ( this.props.graph ){\r\n            this.updateState()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if ( prevProps !== this.props ){\r\n            if ( this.props.graph ){\r\n                this.updateState()\r\n            }\r\n        }\r\n    }\r\n\r\n    updateState = () =>{\r\n        let {variables,restricciones,result} = this.props\r\n        //Filtramos las restricciones y variables que no fueron filtradas antes.\r\n        restricciones = restricciones.filter(elem => elem.descripcion!=='');\r\n        variables = variables.filter(elem => elem.descripcion!=='');\r\n        //Obtenemos los coeficientes a evaluar en el Z\r\n        let coefToValueZ = this.getCoeficientesToEv(variables)\r\n        //Obtenemos la paleta de colores.\r\n        let referencias = this.getColorList(restricciones);\r\n        //Obtenemos las Lineas y las Expresiones\r\n        let {lines,expresiones,highestValueX,highestValueY} = this.getLinesAndExpressions(restricciones);\r\n        //Obtenemos los Puntos de marca general\r\n        let {points,convexPoints} = this.getPoints(restricciones,expresiones,result,highestValueX,highestValueY)    \r\n        //Obtenemos el Punto Optimo\r\n        let optimMark = []\r\n        if( Object.entries(result).length ){ optimMark = [this.getOptimPoint(result)]}\r\n        //Obtenemos la Recta del Funcional.\r\n        // console.log('Maximos X:'+highestValueX+', Y:e'+highestValueY);\r\n        let lineFunctional = this.getObjectiveFunctionLine(variables,optimMark[0],highestValueX,highestValueY);\r\n        // console.log(lineFunctional);\r\n        //Obtenemos la Tabla de resultados.\r\n        let tableResult = this.getTableResult(optimMark.concat(points),coefToValueZ,restricciones)\r\n        //Almacenamos el Estado.\r\n        this.setState({referencias,lines,points,optimMark,convexPoints,lineFunctional,tableResult});\r\n    }\r\n\r\n    getCoeficientesToEv =  variables => {\r\n        let coef={x:0,y:0};\r\n        coef.x = variables[0].coeficiente;\r\n        coef.y = variables[1].coeficiente;\r\n        return coef\r\n    }\r\n\r\n\r\n    getLinesAndExpressions = restricciones => {\r\n        const getFrac = real => new Fraction(Math.pow(10,(real - real.toFixed()).toString().length - 2)*real, Math.pow(10,(real - real.toFixed()).toString().length - 2)) \r\n        //Tipos de Expresiones: 0: Constante en X; 1: Constante en Y; 2: Recta con pendiente.\r\n        let expresiones = [];\r\n        let arrayDeRestriccionesConLosDosCoef =  restricciones.filter(el=> ( el.coeficientes[0] > 0 && el.coeficientes[1] > 0) )\r\n        let highestValueY = Math.max.apply(Math,arrayDeRestriccionesConLosDosCoef.map( restri => (restri.derecha / restri.coeficientes[1])));\r\n        let highestValueX = Math.max.apply(Math,arrayDeRestriccionesConLosDosCoef.map( restri => (restri.derecha / restri.coeficientes[0])));\r\n        // console.log('Ymax: '+highestValueY+' Xmax:'+highestValueX);\r\n        \r\n        let lines = restricciones.map( restri => {\r\n      \r\n\r\n            let xNum = !Number.isInteger(Number(restri.coeficientes[0])) ? getFrac(Number(restri.coeficientes[0])):Number(restri.coeficientes[0]);\r\n\r\n            let yNum = !Number.isInteger(Number(restri.coeficientes[1])) ? getFrac(Number(restri.coeficientes[1])):Number(restri.coeficientes[1]);\r\n \r\n            //Si posee ambos coeficientes entoces es una recta con pendiente.\r\n            if ( xNum !== 0  &&  yNum!== 0) {\r\n                let x = new Expression('x').multiply(xNum);\r\n                let y = new Expression('y').multiply(yNum);\r\n                let expressRestri = new Expression().add(x).add(y);  \r\n                let restriEquation = new Equation(expressRestri,restri.derecha)\r\n                expresiones.push({restriEquation,tipo:2})\r\n                let yEqu = (new Equation(restriEquation.solveFor('x'),0)).solveFor('y');\r\n                let xEqu = (new Equation(restriEquation.solveFor('y'),0)).solveFor('x');\r\n                //Analizamos pendientes positivas y negativas\r\n                if (xEqu >= 0 && yEqu >= 0) {\r\n                    //Si es Pendiente negativa tenemos que corta en los puntos +x y +y\r\n                    if (restri.eq === '>=') {\r\n                        return([{x:0,y:yEqu,y0:highestValueY},{x:xEqu,y:0,y0:highestValueY},{x:highestValueX,y:0,y0:highestValueY}])\r\n                    }else{\r\n                        return([{x:0,y:yEqu},{x:xEqu,y:0}])\r\n                    }\r\n                    \r\n                }else{\r\n                    //Si es Pendiente positiva solo corta en +x o en +y\r\n                    if(yEqu >= 0){\r\n                        //Si corta en +y , entonces calculamos el punto para el grafico en +x\r\n                        let relation = Math.abs(yEqu/xEqu)\r\n                        let valY = yEqu+highestValueX*relation\r\n                        //Si el valor calculado para Y es menor al maximo, lo llevamos hasta alli y actualizamos el Xmax\r\n                        if (valY < highestValueY){\r\n                            valY = highestValueY\r\n                            highestValueX = (highestValueY-yEqu)/relation\r\n                            // console.log('NewXMAX: '+highestValueX);\r\n                        }else{\r\n                            highestValueY = valY            \r\n                            // console.log('NewYMAX: '+highestValueY);\r\n                        }\r\n                        return([{x:0,y:yEqu},{x:highestValueX,y:valY}])\r\n                    }else{\r\n                        if (xEqu >= 0) {\r\n                            //Si corta en +x , entonces calculamos el punto para el grafico en +y\r\n                            let relation = Math.abs(xEqu/yEqu)\r\n                            let valX = xEqu+highestValueY*relation\r\n                            //Si el valor calculado para Y es menor al maximo, lo llevamos hasta alli y actualizamos el YMax\r\n                            if (valX < highestValueX){\r\n                                valX = highestValueX\r\n                                highestValueY = (highestValueX-xEqu)/relation\r\n                                // console.log('NewYMAX: '+highestValueY);\r\n                            }else{\r\n                                highestValueX = valX\r\n                                // console.log('NewXMAX: '+highestValueX);\r\n                            }\r\n                            // console.log(xEqu+' '+yEqu);\r\n                            return([{x:xEqu,y:0},{x:valX,y:highestValueY}])\r\n                        }\r\n                    }\r\n                }\r\n            }else {\r\n                //Sino, es una constante.\r\n                if (xNum !== 0) {\r\n                    //Constante en X\r\n                    let x = new Expression('x').multiply(xNum);\r\n                    let restriEquation = new Equation(x,restri.derecha)\r\n                    expresiones.push({restriEquation,tipo:0})\r\n                    let xEqu = restriEquation.solveFor('x');\r\n                    if (xEqu >= 0 ){\r\n                        return([{x:xEqu,y:0},{x:xEqu,y:highestValueY}])\r\n                    }\r\n                }else {\r\n                    //Constante en Y\r\n                    let y = new Expression('y').multiply(yNum);\r\n                    let restriEquation = new Equation(y,restri.derecha)\r\n                    expresiones.push({restriEquation,tipo:1})\r\n                    let yEqu = restriEquation.solveFor('y')\r\n                    if ( yEqu >= 0) {\r\n                        return([{x:0,y:yEqu},{x:highestValueX,y:yEqu}])\r\n                    }               \r\n                } \r\n            }\r\n        })\r\n        // console.log('MAXS:'+highestValueX+'y:'+highestValueY);\r\n        \r\n        return { lines,expresiones,highestValueX,highestValueY }\r\n    }\r\n\r\n    getColorList = restricciones => restricciones.map( restri => Object({title: 'R'+restri.ri+' Tipo:'+restri.eq, color: randomColor({hue: 'random',luminosity: 'ligth'})}))\r\n\r\n    getOptimPoint = solSet => {\r\n        console.log('Generating Optim Point');\r\n        //Analizamos el Punto Optimo.\r\n        if ( solSet['0'] && solSet['1'] ) {return{x:Number(solSet['0']).toFixed(2),y:Number(solSet['1']).toFixed(2),P:'0 - OPTIMO'}\r\n        }else if ( solSet['0'] ) {return{x:Number(solSet['0']).toFixed(2),y:(0).toFixed(2),P:'0 - OPTIMO'}\r\n        }else { return{x:(0).toFixed(2),y:Number(solSet['1']).toFixed(2),P:'0 - OPTIMO'}}\r\n    }\r\n\r\n    getObjectiveFunctionLine = (variables,optimPoint,xMax,yMax) => {\r\n        console.log('Getting OF Line');\r\n        //Funcion que devuelve una Fraccion de Algebra.js a partir de un numero real.\r\n        const getFrac = real => new Fraction(Math.pow(10,(real - real.toFixed()).toString().length - 2)*real, Math.pow(10,(real - real.toFixed()).toString().length - 2)) \r\n        if (optimPoint){\r\n            try {\r\n                if (variables[0].coeficiente !== 0  && variables[1].coeficiente !== 0) {\r\n\r\n                    let xPoint = !Number.isInteger(Number(optimPoint.x)) ? getFrac(Number(optimPoint.x)):Number(optimPoint.x);\r\n\r\n                    let yPoint = !Number.isInteger(Number(optimPoint.y)) ? getFrac(Number(optimPoint.y)):Number(optimPoint.y);\r\n               \r\n                    let xExp = new Expression('x').subtract(xPoint).multiply(variables[0].coeficiente);\r\n                    let yExp = new Expression('y').subtract(yPoint).multiply(variables[1].coeficiente);\r\n                    \r\n                    let expFunObj = new Equation(new Expression().add(xExp).add(yExp),0);  \r\n          \r\n                    let xEqu = (new Equation(expFunObj.solveFor('y'),0)).solveFor('x');\r\n\r\n                    let yEqu = (new Equation(expFunObj.solveFor('x'),0)).solveFor('y');\r\n        \r\n                    //Analizamos pendientes positivas y negativas\r\n                    // console.log('Result Y: '+yEqu.toString());\r\n                    // console.log('yMax: '+yMax);\r\n                    // console.log('Result X: '+xEqu.toString());\r\n                    // console.log('xMax: '+xMax);\r\n                    //Analizamos los Puntos\r\n                    if (xEqu >= 0 && yEqu >=0){\r\n                        \r\n                            if (xEqu > xMax && yEqu > yMax) {\r\n                                let yRelation = (xEqu/yEqu)\r\n                                let xRelation = (yEqu/xEqu)\r\n                                let xVal = xEqu - yMax/xRelation\r\n                                let yVal = yEqu - xMax/yRelation\r\n                                return [{x:xMax,y:yVal},{x:xVal,y:yMax}]\r\n                            }else if (xEqu <= xMax && yEqu <= yMax) {\r\n                                return [{x:xEqu,y:0},{x:0,y:yEqu}]\r\n                            }else if (xEqu > xMax){\r\n                                    let yRelation = (xEqu/yEqu)\r\n                                    let yVal = yEqu - xMax/yRelation\r\n                                    return [{x:xMax,y:yVal},{x:0,y:yEqu}]\r\n                                }else{\r\n                                    let xRelation = (yEqu/xEqu)\r\n                                    let xVal = xEqu - yMax/xRelation\r\n                                    return [{x:xEqu,y:0},{x:xVal,y:yMax}]\r\n                                }\r\n                    }else if ( xEqu < 0 && yEqu < 0 ) {\r\n                        // console.log('Los dos Neg');\r\n                        return [{x:xEqu,y:0},{x:0,y:yEqu}]\r\n                    }else if ( xEqu >= 0 ) {\r\n                        // console.log('Solo xEqu pos');\r\n                        if (xEqu > xMax){\r\n                            let yRelation = (xEqu/yEqu)\r\n                            let yVal = yEqu - xMax/yRelation\r\n                            return [{x:xMax,y:yVal},{x:0,y:yEqu}]\r\n                        }else{\r\n                            let xRelation = (yEqu/xEqu)\r\n                            let xVal = xEqu - yMax/xRelation\r\n                            if (xVal > xMax){\r\n                                // console.log('Caso XVal > xMax');\r\n                                \r\n                                let xRelation = Math.abs(yEqu/xEqu)\r\n                                let yVal = xMax*xRelation + yEqu\r\n                                return [{x:xEqu,y:0},{x:xMax,y:yVal}]\r\n                            }else{\r\n                                // console.log('Caso Comun');            \r\n                                return [{x:xEqu,y:0},{x:xVal,y:yMax}]\r\n                            }    \r\n                        }\r\n                    }else{\r\n                        // console.log('Solo yEqu pos')\r\n                        if (yEqu > yMax){\r\n                            console.log('Caso pendiente de desarrollo, Que hacemos? damos mas altura para mostrar la recta?');\r\n                            return []\r\n                        }else{\r\n                            let yRelation = Math.abs(yEqu/xEqu)\r\n                            let xVal = yRelation * (yMax - yEqu)\r\n                            if (xVal > xMax){\r\n                                console.log('Caso PENDIENTE DE VERIFICACION XVal > xMAx');\r\n                                let xRelation = Math.abs(xEqu/yEqu)\r\n                                let yVal = xMax*xRelation + yEqu\r\n                                return [{x:xEqu,y:0},{x:xMax,y:yVal}]\r\n                            }else{\r\n                                // console.log('Caso Comun');            \r\n                                return [{x:0,y:yEqu},{x:xVal,y:yMax}]\r\n                            }    \r\n                        }\r\n                    }\r\n                }else if( variables[0].coeficiente !== 0) {\r\n                    // console.log('Sin puendiente, Constante en X'); \r\n                    //Constante en X\r\n                    \r\n                    let xPoint = !Number.isInteger(Number(optimPoint.x)) ? getFrac(Number(optimPoint.x)):Number(optimPoint.x);\r\n                    let xExp = new Expression('x').subtract(xPoint).multiply(variables[0].coeficiente);   \r\n                    let xEqu = (new Equation(xExp,0)).solveFor('x');\r\n                   \r\n                    if (xEqu >= 0 ){\r\n                        return([{x:xEqu,y:0},{x:xEqu,y:yMax}])\r\n                    }     \r\n                }else{\r\n\r\n                    // console.log('Sin pendiente, Constante en Y');\r\n                    //Constante en Y\r\n                    let yPoint = !Number.isInteger(Number(optimPoint.y)) ? getFrac(Number(optimPoint.y)):Number(optimPoint.y);\r\n                    let yExp = new Expression('y').subtract(yPoint).multiply(variables[1].coeficiente);\r\n                    let yEqu = (new Equation(yExp,0)).solveFor('y');\r\n                    if (yEqu >= 0 ){\r\n                        return([{x:0,y:yEqu},{x:xMax,y:yEqu}])\r\n                    }     \r\n                }\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n                return [] \r\n            }\r\n\r\n        }else return []      \r\n    }\r\n\r\n    getPoints = (restricciones,expresiones,solSet,xMax,yMax) => {\r\n        console.log('Getting Points');\r\n        //Definimos las Funciones necesarias para el buen funcionamiento de esta Funcion.\r\n\r\n        const getAreaPointsForConvex = points => {\r\n            //Funcion que calcula el Angulo entre dos puntos.\r\n            const calcAng = (point,p) => Math.atan2(point.y - p.y, point.x - p.x) * 180 / Math.PI + 180;\r\n            //Precargamos puntos que podrian definir el convexo.\r\n            let possiblePoints = [{x:0,y:0},{x:xMax,y:yMax},{x:Number(points[0].x),y:0},{x:0,y:Number(points[0].y)},{x:xMax,y:Number(points[0].y)},{x:Number(points[0].x),y:xMax}]            \r\n            //Obtenemos la lista de puntos\r\n            let pointsList = [...points];\r\n            //Verificamos puntos que podrian definir el convexo.\r\n            possiblePoints.forEach( p => (verifyPoint(p,restricciones,points)) && pointsList.push(p) ) \r\n            //Nos aseguramos de tomar el punto que este en el extremo derecho.\r\n            pointsList.sort((a,b) => a.x<b.x ? 1:-1);\r\n            //Creamos nuestra Output\r\n            let orderedPoints = [];\r\n            let point = pointsList[0];\r\n            orderedPoints.push(point)\r\n            pointsList.splice(0,1) \r\n            while ( pointsList.length ) {\r\n                //Encuentra el punto que tiene el angulo minimo\r\n                let minAngle = pointsList.reduce( (min,p) => calcAng(point,p) < min ? calcAng(point,p) : min, 361);\r\n                if (minAngle < 361) {\r\n                    let indNewPoint = pointsList.findIndex(p => calcAng(point,p) === minAngle);\r\n                    point = pointsList[indNewPoint]\r\n                    orderedPoints.push(point)\r\n                    pointsList.splice(indNewPoint,1)           \r\n                } else { \r\n                    console.log('Cant find any Angle');\r\n                    break}\r\n            }\r\n            orderedPoints.push(orderedPoints[0])\r\n            return orderedPoints\r\n        }\r\n        \r\n        //Funcion que se encarga de realizar las verificaciones correspondientes para agregar un punto o no.\r\n        const verifyPoint = (point, restricciones, points) => {\r\n            if (point.x >= 0 && point.y >= 0 ){\r\n                if ( !verifyPointInPoints(point,points) ) {\r\n                    if ( verifyPointInRestrictions(point,restricciones) ) { return true } else return false\r\n                }else return false\r\n            }else return false\r\n        }\r\n\r\n        //Funcion que se encarga de Verificar si un punto ya se encuentra en la lista de puntos (o ya fue verificado antes).\r\n        const verifyPointInPoints = (point,points) => points.some( pointL => (pointL.x === point.x.toFixed(2) && pointL.y === point.y.toFixed(2)) )\r\n        \r\n        //Funcion que se encarga de verificar que un punto cumpla con todas las Restricciones.\r\n        const verifyPointInRestrictions = (point,restricciones) => restricciones.every( restri => {\r\n                    let calIzq = (restri.coeficientes[0]*point.x + restri.coeficientes[1]*point.y);\r\n                    if( restri.eq === '>=' ) {\r\n                        // console.log('P:('+point.x +','+point.y+') :'+calIzq+' >='+ restri.derecha );                        \r\n                        return ( calIzq >= restri.derecha ) \r\n                    }else { \r\n                        // console.log('P:('+point.x +','+point.y+') :'+calIzq+' <='+ restri.derecha );                        \r\n                        return ( calIzq <= restri.derecha )} \r\n                })\r\n        // Funcion que devuelve un punto verificado y que corta en un Eje.\r\n        const getPointAxFromExpCenX = ( exp ) => {       \r\n            //Obtenemos el Corte sobre el Eje-Y\r\n            let expResultX = Number((new Equation(exp.solveFor('y'),0)).solveFor('x'));\r\n            if ( expResultX >= 0 ) {\r\n                //Generamos el Punto en X\r\n                let point = {x:expResultX,y:0,P:points.length}\r\n                //Verificamos el punto en X con las Restricciones.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point} \r\n            }\r\n        };\r\n        // Funcion que devuelve un punto verificado y que corta en un Eje.\r\n        const getPointAxFromExpCenY = ( exp ) => {       \r\n            //Obtenemos el Corte sobre el Eje-Y\r\n            let expResultY = Number((new Equation(exp.solveFor('x'),0)).solveFor('y'));\r\n            if ( expResultY >= 0 ) {\r\n                //Generamos el Punto en Y\r\n                let point = {x:0,y:expResultY,P:points.length}\r\n                //Verificamos el punto en Y con las Restricciones.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point} \r\n            }   \r\n        };\r\n        const getPointAxFromExpY = ( expY ) => {\r\n            //Obtenemos el Corte sobre el Eje-Y\r\n            let expResultY = Number(expY.solveFor('y'));\r\n            if ( expResultY >= 0 ) {\r\n                //Generamos el Punto en Y\r\n                let point = {x:0,y:expResultY,P:points.length}\r\n                //Verificamos el punto en Y con las Restricciones.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point} \r\n            }\r\n            \r\n        };\r\n        const getPointAxFromExpX = (expX) => {\r\n            //Obtenemos Cortes sobre el Eje-X\r\n            let expResultX = Number(expX.solveFor('x'));\r\n            if ( expResultX >= 0 ) {\r\n                //Generamos el Punto en X\r\n                let point = {x:expResultX,y:0,P:points.length}\r\n                //Verificamos el punto en X con las Restricciones.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point} \r\n            } \r\n        }\r\n        //Funcion que devuelve un punto verificado con una Expresion en X y otra en Y\r\n        const getPointFromExpXExpY = ( expX,expY ) => {\r\n            let xRes = Number(expX.solveFor('x'));\r\n            let yRes = Number(expY.solveFor('y'));\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( xRes >= 0  && yRes >= 0 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:xRes,y:yRes,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point} \r\n            }\r\n        };\r\n        //Funcion que devuelve un punto verificado con una Expresion Completa y otra en Y\r\n        const getPointFromExpCExpY = ( expC,expY ) => {\r\n            // console.log('EXP C y Recta Y');\r\n            let expResultY = Number(expY.solveFor('y'));\r\n            let expResultX = Number((new Equation(expC.solveFor('y'),expY.solveFor('y'))).solveFor('x'));\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( expResultX >= 0  && expResultY >= 0 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:expResultX,y:expResultY,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point} \r\n            }\r\n        };\r\n        //Funcion que devuelve un punto verificado con una Expresion Completa y otra en X\r\n        const getPointFromExpCExpX = ( expC,expX ) => {\r\n            // console.log('EXP C y Recta X');\r\n            let expResultX = Number(expX.solveFor('x'));\r\n            let expResultY = Number((new Equation(expC.solveFor('x'),expX.solveFor('x'))).solveFor('y'));\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( expResultX >= 0  && expResultY >= 0 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:expResultX,y:expResultY,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point}\r\n            } \r\n        };\r\n        //Funcion que devuelve un punto verificado con dos Expresion Completas.\r\n        const getPointFromTwoExpC = (exp1,exp2) => {\r\n            let expResultX = Number((new Equation(exp1.restriEquation.solveFor('y'),exp2.restriEquation.solveFor('y'))).solveFor('x'));\r\n            let expResultY = Number((new Equation(exp1.restriEquation.solveFor('x'),exp2.restriEquation.solveFor('x'))).solveFor('y'));\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( expResultX >= 0  && expResultY >= 0 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:expResultX,y:expResultY,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){\r\n                    point.x=point.x.toFixed(2)\r\n                    point.y=point.y.toFixed(2)\r\n                    return point}\r\n                } \r\n        };\r\n        //Funcion que devuelve Un punto de Dos Expresiones\r\n        const getPointFromTwoExp = (exp1,exp2) => {\r\n            try {\r\n                //Verificamos los Tipos\r\n                if ( exp1.tipo === 2 && exp2.tipo === 2 ) {\r\n                    //Caso de que son dos rectas Completas\r\n                    return getPointFromTwoExpC(exp1,exp2)  \r\n                }else if( exp1.tipo === 2){\r\n                    //La primera es Recta completa y la otra o solo de X o solo de Y\r\n                    if( exp2.tipo === 0) { return getPointFromExpCExpX(exp1.restriEquation,exp2.restriEquation) \r\n                    }else return getPointFromExpCExpY(exp1.restriEquation,exp2.restriEquation)\r\n                }else if( exp2.tipo === 2 ){\r\n                    //La seguna es la Recta completa entonces la otra es o solo de X o solo de Y\r\n                    if( exp1.tipo === 0) { return getPointFromExpCExpX(exp2.restriEquation,exp1.restriEquation)\r\n                    }else return getPointFromExpCExpY(exp2.restriEquation,exp1.restriEquation)\r\n                }else if (exp1.tipo === 0){\r\n                    //Si la primera es una recta Solo de X y la otra puede ser de Y\r\n                    if( exp2.tipo === 1) { return getPointFromExpXExpY(exp1.restriEquation,exp2.restriEquation) }\r\n                }else{\r\n                    //Si la Primera es una recta solo de Y y la otra puede ser de X\r\n                    if( exp2.tipo === 0) { return getPointFromExpXExpY(exp2.restriEquation,exp1.restriEquation) }\r\n                }  \r\n            } catch (error) {\r\n                console.log(error);     \r\n            }\r\n            \r\n        };\r\n        \r\n        //Limpiamos nuestro array de Puntos\r\n        let points = [];\r\n        \r\n        //El primer punto que obtenemos es el Optimo, ya que deseamos que no se repita.\r\n        if ( Object.entries(solSet).length ){ points.push(this.getOptimPoint(solSet)) }\r\n        \r\n\r\n        //Analizamos las Rectas que cortan en los Ejes o Rectas sin pendiente.\r\n        expresiones.forEach( exp => {\r\n            if (exp.tipo === 2) {\r\n                //Si es Completa Corta en los dos Ejes\r\n                let pointX = getPointAxFromExpCenX(exp.restriEquation);\r\n                if (pointX) { points.push(pointX) }\r\n                let pointY = getPointAxFromExpCenY(exp.restriEquation)\r\n                if (pointY) { points.push(pointY) }\r\n            }else if(exp.tipo === 0){\r\n                //Solo Corta en X\r\n                let point = getPointAxFromExpX(exp.restriEquation);\r\n                if (point) { points.push(point) }\r\n\r\n            }else{\r\n                //Solo corta en Y\r\n                let point = getPointAxFromExpY(exp.restriEquation);\r\n                if (point) { points.push(point) }\r\n            }\r\n        })\r\n\r\n        //Analizamos los cortes de las Rectas de Restricciones.\r\n        expresiones.forEach( exp1 => {\r\n            //Validamos cada unas de las Rectas con las demas.\r\n            expresiones.forEach( exp2 => {\r\n                //Verificamos que no sea la misma recta.\r\n                if( exp1 !== exp2 ) {\r\n                    let point = getPointFromTwoExp(exp1,exp2);\r\n                    if (point) {points.push(point)}\r\n                } \r\n            })\r\n        });\r\n\r\n        //Obtenemos la secuencia de puntos que define nuestro Convexo.\r\n        let convexPoints = getAreaPointsForConvex(points);\r\n        // console.log('Puntos:');\r\n        // console.log(convexPoints);\r\n        //Debemos eliminar el punto optimo para que no se imprima en las marcas simples.\r\n        if( Object.entries(solSet).length ){ points.shift() }\r\n        return {points,convexPoints}\r\n    }\r\n\r\n    //Funcion que se encarga de devolverme la tabla.\r\n    getTableResult = (points,coeficientes,restricciones) =>{\r\n        console.log('Drawing Table Results');    \r\n        const calcSlacksValue = point => {\r\n            return restricciones.map( restri => <td key={'S-C-'+point.P+'-'+restri.ri}>{(Math.abs(restri.coeficientes[0]*point.x+restri.coeficientes[1]*point.y - restri.derecha)).toFixed(2)}</td>)\r\n        }\r\n        const calcResult = point =>{return (Math.abs(coeficientes.x*point.x + coeficientes.y*point.y)).toFixed(2)}\r\n        let slacksTitles = restricciones.map(restri => <th key={'S-T-'+restri.ri}>{'S'+restri.ri}</th>)\r\n        return( <Table>\r\n                    <thead><tr><th>Punto</th><th>Resultado</th><th>X0</th><th>X1</th>{slacksTitles}</tr></thead>\r\n                    <tbody>{points.map(point => <tr key={'T-P-'+point.P}><td>P:{point.P}</td><td>{calcResult(point)}</td><td>{point.x}</td><td>{point.y}</td>{calcSlacksValue(point)}</tr>)}</tbody>\r\n                </Table>)\r\n    }\r\n       \r\n     \r\n    //Funcion que encarga de ocultar la descripcion del punto.  \r\n    hidePoint = () => this.setState({value: null})\r\n\r\n    //Funcion que se encarga de mostrar la descripcion del punto.\r\n    showPoint = value => this.setState({ value })\r\n\r\n\r\n    mapperAreaSeries = (lines,referencias) => \r\n        lines.map((data,index) => <AreaSeries key={'L-S-A'+index} opacity={0.3} color={referencias.length > 0 ?referencias[index].color:'red'} data={data}/>)\r\n    \r\n    mapperLinesSeries = (lines,referencias) => \r\n    lines.map((data,index) => <LineSeries key={'L-S-L'+index} color={referencias.length > 0 ?referencias[index].color:'red'} data={data}/>)\r\n\r\n\r\n    render () {\r\n        let {variables,restricciones} = this.props\r\n        let {referencias,lines,value,points,optimMark,convexPoints,lineFunctional,areaGraph,tableResult} = this.state;\r\n        return( \r\n        <CardBody>\r\n            <Card outline color='secondary'>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col className=\"text-left\"><CardTitle><h4>Grafico:</h4></CardTitle></Col>\r\n                        <Col><Button outline size='sm'\r\n                            onClick={() => this.setState({areaGraph:!this.state.areaGraph})} \r\n                            color={!this.state.areaGraph ? 'success':'danger'}>{!this.state.areaGraph ? 'Ver Sombra de Restricciones':'Ocultar Sombra de Restricciones'}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Row className='mx-auto'>\r\n                        <XYPlot onMouseLeave={() => this.setState({pointer: null})} width={500} height={500}>\r\n                            <HorizontalGridLines/>\r\n                            <VerticalGridLines/>\r\n                            <XAxis title='Variable X0' />\r\n                            <YAxis  title='Variable X1'/>\r\n\r\n                            {areaGraph && this.mapperAreaSeries(lines,referencias)}\r\n                            \r\n                            {this.mapperLinesSeries(lines,referencias)}\r\n\r\n                            <AreaSeries fill='green' stroke='#fffff' style={{strokeWidth: 0}} opacity={0.6} data={convexPoints}/>\r\n\r\n                            <LineSeries color='red' strokeStyle='dashed' data={lineFunctional}/>\r\n                            \r\n                            <MarkSeries onValueMouseOver={this.showPoint} onValueMouseOut={this.hidePoint}\r\n                                        color={'blue'} opacity={0.7} data={points}/>\r\n                            \r\n                            <MarkSeries onValueMouseOver={this.showPoint} onValueMouseOut={this.hidePoint}\r\n                                        color={'green'} data={optimMark}/>\r\n                            {value && <Hint value={value} />}\r\n\r\n                        </XYPlot>\r\n                    </Row>\r\n                    <Row className='mx-auto'><DiscreteColorLegend orientation=\"horizontal\" items={referencias}/></Row>\r\n                    <Row><ReferencesList variables={variables} restricciones={restricciones}/></Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {tableResult}\r\n                </CardFooter>\r\n            </Card>\r\n        </CardBody> )\r\n    }\r\n}\r\n\r\nexport default GraphicPresentation;","import React from \"react\";\r\nimport { Card, CardTitle, CardHeader } from \"reactstrap\";\r\nimport solver from \"javascript-lp-solver\";\r\nimport SimplexPresentation from \"./SimplexPresentation\";\r\nimport GraphicPresentation from \"./GraphicPresentation\";\r\n\r\nlet convertAppToModelForSolverPrimal = datosApp => {\r\n  //Obtenemos los Datos de la aplicacion\r\n  let { restricciones, variables, objective, integer } = datosApp;\r\n  variables = variables.filter(item => item.descripcion !== \"\");\r\n  restricciones = restricciones.filter(item => item.descripcion !== \"\");\r\n  //Precargamos el Modelo\r\n  let model = { optimize: \"coeficiente\", opType: \"\", constraints: {}, variables: {}, ints: {} };\r\n\r\n  //Tratamos el objetivo\r\n  model.opType = objective;\r\n\r\n  //Verificamos si se desea PL Entera\r\n  if (integer) {\r\n    variables.forEach(vari => (model.ints[vari.xi] = 1));\r\n  }\r\n  //Tratamos las Variables\r\n  variables.forEach(vari => {\r\n    //Generamos una nueva Variable\r\n    let newVari = {};\r\n    newVari.coeficiente = vari.coeficiente;\r\n    restricciones.forEach(restri => (newVari[\"r\" + restri.ri] = restri.coeficientes[vari.xi]));\r\n    // console.log(newVari);\r\n    model.variables[vari.xi] = newVari;\r\n  });\r\n  //Tratamos las Restricciones\r\n  restricciones.forEach(restri => {\r\n    if (restri.eq === \">=\") {\r\n      let res = {};\r\n      res.min = restri.derecha;\r\n      model.constraints[\"r\" + restri.ri] = res;\r\n    } else {\r\n      let res = {};\r\n      res.max = restri.derecha;\r\n      model.constraints[\"r\" + restri.ri] = res;\r\n    }\r\n  });\r\n\r\n  return model;\r\n};\r\n\r\nclass Presentation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { result: false , details: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let result = false ;\r\n    if ( this.validateCoeficientes(this.props) ){\r\n      console.log('Validado..');\r\n      result = this.calculateResults();\r\n    }\r\n    console.log(result);\r\n    this.setState({ result })\r\n  }\r\n\r\n  componentWillReceiveProps(futureProps) {\r\n    if (this.props !== futureProps) {\r\n      let result = false ;\r\n      if ( this.validateCoeficientes(futureProps) ){\r\n        console.log('Validado..');\r\n        result = this.calculateResults();\r\n      }\r\n      console.log(result);\r\n      this.setState({ result })\r\n    }\r\n  }\r\n\r\n   //Funcion que Valida si es posible operar con los datos ingresados\r\n   validateCoeficientes = props => {\r\n    console.log('Validando..');\r\n    let {variables, restricciones } = props.status;\r\n    //Verificando si los coeficientes de las variables y las restricciones no son nulos\r\n    let varsOperatives = variables.filter(va => va.descripcion !== \"\");\r\n    let verifQty = varsOperatives.length ? varsOperatives.every(va => va.coeficiente !== \"\") : false; \r\n    let restOperatives = restricciones.filter(re => re.descripcion !== \"\");\r\n    let veriResQty = restOperatives.length ? restOperatives.every(re => re.coeficientes.every(co => co !== \"\") && re.derecha !== \"\"):false;\r\n    return (verifQty && veriResQty) ? true : false;\r\n  };\r\n\r\n  //Funcion de Calculo del modelo.\r\n  calculateResults = () => {\r\n    console.log('Calculating..');  \r\n    //Convertimos la App en Modelo para Solver.js\r\n    let model = convertAppToModelForSolverPrimal(this.props.status);\r\n\r\n    //solver.js soluciona y nos devuelve\r\n    return solver.Solve(model, false, true);\r\n  };\r\n\r\n  render() {\r\n    //Obtenemos el resultado almacenado\r\n    let { result } = this.state;\r\n    let printResults;\r\n    console.log('Factible?:'+result.feasible);\r\n    if ( result.feasible ) {\r\n      //Obtenemos las Variables desde las props\r\n      let { variables, restricciones, method } = this.props.status;\r\n      if (method === \"simplex\") {\r\n        if (result.bounded) {\r\n            printResults = <SimplexPresentation variables={variables} restricciones={restricciones} result={result} />\r\n          } \r\n      }else{\r\n            printResults = <GraphicPresentation\r\n                variables={variables}\r\n                restricciones={restricciones}\r\n                graph={result.feasible}\r\n                result={ result.bounded ? result.solutionSet : {} }\r\n              />\r\n        }\r\n      }\r\n      \r\n    return (\r\n      <>\r\n        <Card outline color=\"info\" className=\"w-100 mt-3 mx-auto\">\r\n          <CardHeader>\r\n            <CardTitle>\r\n              <h3>\r\n                {result.feasible\r\n                  ? result.bounded ? \"El resultado óptimo de la función objetivo es: \" + result.evaluation\r\n                    : \"Solucion no Acotada\"\r\n                  : \"Solución no Factible\" }\r\n              </h3>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          {result.feasible && printResults}\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Presentation;\r\n","import React from \"react\";\r\nimport { Container, Col, Row, Progress } from \"reactstrap\";\r\nimport ModalModels from \"../../Models\"\r\nimport ReactWizard from \"react-bootstrap-wizard\";\r\nimport Configuration from \"../Configuration\";\r\nimport Processing from \"../Processing\";\r\nimport Presentation from \"../Presentation\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass InSteps extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      model:{\r\n        variables: [{ xi: 0, descripcion: \"\", coeficiente: \"\" }, { xi: 1, descripcion: \"\", coeficiente: \"\" }],\r\n        restricciones: [{ ri: 0, descripcion: \"\", coeficientes: [], eq: \">=\", derecha: \"\" }],\r\n        method: \"graph\",\r\n        objective: \"max\",\r\n        integer: false\r\n      }, \r\n      result: false,\r\n      barProg: 33,\r\n      modelsOpen:false\r\n    };\r\n  }\r\n  //Esta función maneja el cambio en las restricciones\r\n  handleRestricciones = restricciones => {\r\n    let { model } = this.state;\r\n    model.restricciones = restricciones;\r\n    this.setState({ model, result: false });\r\n  };\r\n  //Esta función maneja el cambio en las variables\r\n  handleVariables = variables => {\r\n    let { model } = this.state;\r\n    model.variables = variables;\r\n    this.setState({ model, result: false });\r\n  };\r\n  //Esta función maneja el cambio del metodo\r\n  handleMethod = method => {\r\n    let { model } = this.state;\r\n    model.method = method;\r\n    this.setState({ model, result: false });\r\n  };\r\n  //Esta función maneja el cambio del objetivo de optimización\r\n  handleObjective = objective => {\r\n    let { model } = this.state;\r\n    model.objective = objective;\r\n    this.setState({ model, result: false });\r\n  };\r\n  toggleInteger = () => {\r\n    let { model } = this.state;\r\n    model.integer = !model.integer;\r\n    this.setState({ model, result: false });\r\n\r\n  }\r\n  //Esta función guarda el resultado (inutilizada por el momento)\r\n  handleResult = result => this.setState({ result });\r\n\r\n  //Esta función habilita el cálculo en el último paso\r\n  lastStep = step => {\r\n    if (step === 2) {\r\n      this.setState({ barProg: 100 });\r\n    } else {\r\n      this.setState({ barProg: 66 });\r\n    }\r\n  };\r\n\r\n  finishButtonClick = result => {\r\n    console.log(\"En algún momento va a imprimir resultados\");\r\n  };\r\n\r\n  showModels = () => this.setState({modelsOpen:!this.state.modelsOpen})\r\n\r\n  setModel = model => this.setState({ model })\r\n\r\n  render() {\r\n    let { modelsOpen,model} = this.state\r\n    var steps = [\r\n      // this step hasn't got a isValidated() function, so it will be considered to be true\r\n      {\r\n        stepName: \"Configuración del Modelo\",\r\n        component: Configuration,\r\n        stepProps: {\r\n          status: model,\r\n          loadExampleModel: this.loadExampleModel,\r\n          handleMethod: this.handleMethod,\r\n          handleVariables: this.handleVariables,\r\n          handleRestricciones: this.handleRestricciones,\r\n          lastStep: this.lastStep,\r\n          toggleInteger: this.toggleInteger,\r\n          handleObjective: this.handleObjective,\r\n          showModels:this.showModels\r\n        }\r\n      },\r\n      {\r\n        stepName: \"Detalles del Modelo\",\r\n        component: Processing,\r\n        stepProps: {\r\n          status: model,\r\n          handleVariables: this.handleVariables,\r\n          lastStep: this.lastStep,\r\n          handleRestricciones: this.handleRestricciones\r\n        }\r\n      },\r\n      {\r\n        stepName: \"Presentación de los Resultados\",\r\n        component: Presentation,\r\n        stepProps: {\r\n          status: model,\r\n          handleResult: this.handleResult,\r\n          lastStep: this.lastStep\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <Container fluid className=\"App\">\r\n        <Row className=\"\">\r\n          <Col xs={12} md={6} className=\"mx-auto\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\r\n            <Progress animated color=\"blue\" value={this.state.barProg} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6} className=\"my-4 mx-auto\">\r\n            <ReactWizard\r\n              steps={steps}\r\n              title=\"Programación Lineal\"\r\n              progressbar\r\n              headerTextCenter\r\n              validate\r\n              color=\"blue\"\r\n              previousButtonText=\"Volver\"\r\n              nextButtonText=\"Siguiente\"\r\n              nextButtonClasses=\"bg-primary\"\r\n              finishButtonText=\"Imprimir Resultados\"\r\n              finishButtonClick={this.finishButtonClick}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row><ModalModels open={modelsOpen} model={model} setModel={this.setModel} handleClose={this.showModels}/></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InSteps;\r\n","import React from 'react';\r\nimport { Button, Jumbotron, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst NoLinealProg = () => {\r\n    return(\r\n    <Container fluid className=\"App\">\r\n      <Row className=\"\">\r\n        <Col xs={12} md={6} className=\"mx-auto my-5\">\r\n          <Jumbotron className=\"\">\r\n            <Row>\r\n              <h2>La Programación No-Lineal aún no está disponible.</h2>\r\n            </Row>\r\n            <Row>\r\n                <a href='/'><Button className=\"fluid-left\">Volver</Button></a>\r\n            </Row>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    )\r\n    };\r\nexport default NoLinealProg;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Jumbotron, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst LinearProgramation = () =>{\r\n    return(\r\n        <Container fluid className=\"App\">\r\n        <Row className=\"\">\r\n            <Col xs={12} md={6} className=\"mx-auto my-5\">\r\n                <Jumbotron>\r\n                    <Row>\r\n                        <h2 className=\"mx-auto\">¡Bien!, Ahora Seleccione una Modalidad de Trabajo.</h2>\r\n                    </Row>\r\n                    <Row className=\"mt-3 mx-auto\">\r\n                        <Col>\r\n                            <Link to={\"/LinearProgramation/InSteps\"}>\r\n                                <Button size='lg' outline color=\"success\">Guiado por Pasos</Button>\r\n                            </Link>\r\n                                \r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3 mx-auto\">\r\n                        <Col>\r\n                            <Link to={\"/LinearProgramation/SinglePage\"} >\r\n                                <Button size='lg' outline color=\"success\">En Unica Pagina</Button>\r\n\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Jumbotron>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default LinearProgramation;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Jumbotron, Container, Row, Col, ButtonGroup, UncontrolledTooltip } from \"reactstrap\";\r\n\r\nconst Inicio = () =>{\r\n    return(\r\n        <Container fluid className=\"App\">\r\n        <Row className=\"\">\r\n            <Col xs={12} md={6} className=\"mx-auto my-5\">\r\n                <Jumbotron>\r\n                    <Row>\r\n                        <h2 className=\"mx-auto\">¡Bienvenido! Seleccione una opción.</h2>\r\n                    </Row>\r\n                    <Row className=\"mt-3 mx-auto\">\r\n                        <Col>\r\n                            <Link to={\"/LinearProgramation\"}>\r\n                            <Button size='lg' outline color=\"success\">Programación Lineal </Button>\r\n\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3 mx-auto\">\r\n                        <Col>\r\n                        <Link to={\"/NoLinearProgramation\"}>\r\n                            <Button size='lg' outline color=\"success\">Programación No Lineal </Button>\r\n                        </Link>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-5\">\r\n                        <h5>Colaboradores:</h5>\r\n                    </Row>\r\n                    <Row>\r\n                        <ButtonGroup className=\"mx-auto\">\r\n                            <UncontrolledTooltip target='btnce'>Cardozo, Edgar</UncontrolledTooltip>\r\n                            <Button id='btnce' outline tag=\"a\" href=\"https://github.com/EdgarCardozo\">\r\n                                CE\r\n                            </Button>\r\n                            <UncontrolledTooltip target='btndj'>Diaz, Julian</UncontrolledTooltip>\r\n                            <Button id='btndj' outline tag=\"a\" href=\"https://github.com/juliandiazok\">\r\n                                DJ\r\n                            </Button>\r\n                            <UncontrolledTooltip target='btnge'>Garcia, Emmanuel</UncontrolledTooltip>\r\n                            <Button id='btnge' outline tag=\"a\" href=\"https://github.com/egarcia1997\">\r\n                                GE\r\n                            </Button>\r\n                            <UncontrolledTooltip target='btnss'>Solis, Santiago</UncontrolledTooltip>\r\n                            <Button id='btnss' outline tag=\"a\" href=\"https://github.com/santisolis97\">\r\n                                SS\r\n                            </Button>\r\n                            <UncontrolledTooltip target='btnvi'>Vaernet, Ian</UncontrolledTooltip>\r\n                            <Button id='btnvi' outline tag=\"a\" href=\"https://github.com/ianv97\">\r\n                                VI\r\n                            </Button>\r\n                            <UncontrolledTooltip target='btnzs'>Zaracho Simonetto, Carlos Santino</UncontrolledTooltip>\r\n                            <Button id='btnzs' outline tag=\"a\" href=\"https://github.com/santinozaracho\">\r\n                                ZS\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                </Jumbotron>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Inicio;","import React from \"react\";\r\nimport { Container, Col, Row, Jumbotron} from \"reactstrap\";\r\nimport ModalModels from \"../../Models\"\r\nimport Configuration from \"../Configuration\";\r\nimport Processing from \"../Processing\";\r\nimport Presentation from \"../Presentation\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass SinglePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      model:{\r\n        variables: [{ xi: 0, descripcion: \"\", coeficiente: \"\" }, { xi: 1, descripcion: \"\", coeficiente: \"\" }],\r\n        restricciones: [{ ri: 0, descripcion: \"\", coeficientes: [], eq: \">=\", derecha: \"\" }],\r\n        method: \"graph\",\r\n        objective: \"max\",\r\n        integer: false\r\n      },\r\n      result: true,\r\n      modelsOpen:false\r\n    };\r\n  }\r\n\r\n  //Esta función maneja el cambio en las restricciones\r\n  handleRestricciones = restricciones => {\r\n    let { model } = this.state;\r\n    model.restricciones = restricciones;\r\n    this.setState({ model, changes: true });\r\n  };\r\n  //Esta función maneja el cambio en las variables\r\n  handleVariables = variables => {\r\n    let { model } = this.state;\r\n    model.variables = variables;\r\n    this.setState({ model, changes: true });\r\n  };\r\n  //Esta función maneja el cambio del metodo\r\n  handleMethod = method => {\r\n    let { model } = this.state;\r\n    model.method = method;\r\n    this.setState({ model, changes: true });\r\n  };\r\n  //Esta función maneja el cambio del objetivo de optimización\r\n  handleObjective = objective => {\r\n    let { model } = this.state;\r\n    model.objective = objective;\r\n    this.setState({ model, changes: true });\r\n  };\r\n  toggleInteger = () => {\r\n    let { model } = this.state;\r\n    model.integer = !model.integer;\r\n    this.setState({ model, changes: true });\r\n\r\n  }\r\n  //Esta función guarda el resultado (inutilizada por el momento)\r\n  handleResult = result => this.setState({ result });\r\n  //Esta función habilita el cálculo en el último paso\r\n  lastStep = step => console.log('Changes')\r\n  \r\n  finishButtonClick = result => console.log(\"En algún momento va a imprimir resultados\");\r\n\r\n  showModels = () => this.setState({modelsOpen:!this.state.modelsOpen});\r\n\r\n  setModel = model => this.setState({ model, changes:true });\r\n\r\n  render() {\r\n    let { modelsOpen, model, result } = this.state\r\n    console.log('PRESENTATION:'+result);\r\n    \r\n    return (\r\n      <Container fluid className=\"App\">\r\n        <Row className=\"\">\r\n          <Col xs={12} md={6} className=\"mx-auto\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\r\n            <Row>\r\n                <Jumbotron className='w-100'>\r\n                    <Configuration   status={model}\r\n                    handleMethod={this.handleMethod}\r\n                    handleVariables={this.handleVariables}\r\n                    handleRestricciones={this.handleRestricciones}\r\n                    lastStep={this.lastStep}\r\n                    toggleInteger={this.toggleInteger}\r\n                    handleObjective={this.handleObjective}\r\n                    showModels={this.showModels}/>\r\n                </Jumbotron>  \r\n            </Row>\r\n\r\n            <Row>\r\n                <Jumbotron className='w-100'>\r\n                    <Processing status={model} handleVariables={this.handleVariables}\r\n                    handleRestricciones={this.handleRestricciones} lastStep={this.lastStep}/>\r\n                </Jumbotron>\r\n                \r\n            </Row>\r\n\r\n            <Row>\r\n                <Jumbotron className='w-100'>\r\n                    <Presentation status={model} handleResult={this.handleResult} lastStep={this.lastStep}/>\r\n                </Jumbotron>\r\n            </Row>\r\n          \r\n          </Col>\r\n        </Row>\r\n        <Row><ModalModels open={modelsOpen} model={model} setModel={this.setModel} handleClose={this.showModels}/></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SinglePage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport InSteps from \"./components/LinearProgramation/InSteps\";\r\nimport NoLinealProg from \"./components/NoLinealProgramation\";\r\nimport LinearProgramation from './components/LinearProgramation'\r\nimport Inicio from \"./components/Inicio\";\r\nimport SinglePage from \"./components/LinearProgramation/SinglePage\";\r\n\r\n\r\nconst NoLinearProgramation = () => <NoLinealProg />;\r\n\r\nconst Index = () => <Inicio/>;\r\n\r\nconst App = () => \r\n    <Switch>\r\n      <Route exact path=\"/\" component={Index} />\r\n      <Route exact path=\"/LinearProgramation\" component={LinearProgramation} />\r\n      <Route exact path=\"/LinearProgramation/InSteps\" component={InSteps} />\r\n      <Route exact path=\"/LinearProgramation/SinglePage\" component={SinglePage} />\r\n      <Route exact path=\"/NoLinearProgramation\" component={NoLinearProgramation} />\r\n    </Switch>;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter} from \"react-router-dom\";\r\nimport './App.css';\r\nimport './index.css';\r\nimport 'react-vis/dist/style.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}