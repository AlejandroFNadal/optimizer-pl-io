{"version":3,"sources":["components/Configuration.js","components/elements/Restriccion.js","components/elements/FuncionObj.js","components/elements/ReferencesList.js","components/Processing.js","components/elements/SimplexPresentation.js","components/elements/GraphicPresentation.js","components/Presentation.js","components/LinealProg.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Configuration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerInputVar","event","_event$target","target","value","name","variables","status","xi","descripcion","splice","handleVariables","handleNewsVar","method","handlerInputRes","_event$target2","restricciones","ri","handleRestricciones","handleNewsRes","filter","element","length","push","coeficientes","eq","derecha","coeficiente","state","faltaDescrip","prevProps","_this$props$status","variablesDescriptionsMin","va","restriccionesDescriptionsMin","re","lastStep","setState","_this2","variablesARenderizar","map","variable","index","react_default","a","createElement","InputGroup","className","id","key","InputGroupAddon","addonType","InputGroupText","Input","placeholder","aria-label","aria-describedby","onChange","UncontrolledPopover","flip","trigger","placement","PopoverBody","restriccionesARenderizar","restriccion","buttonsMethods","ButtonGroup","Button","outline","onClick","handleMethod","active","color","buttonsOptType","handleObjective","objective","Fragment","Container","Row","Col","Card","CardHeader","CardBody","integer","toggleInteger","loadExampleModel","PopoverHeader","CardTitle","Alert","React","Component","Restriccion","cantVariables","diferencia","thisEq","botoneraMaxMin","e","handleCoefRes","disabled","inputsRestriccions","indx","type","UncontrolledTooltip","FuncionObj","variablesToFunction","vari","handleCoefVar","toUpperCase","ReferencesList","listDescriptionsVarItems","array","item","ListGroupItem","Badge","listDescriptionsResItems","references","size","Collapse","isOpen","ListGroup","Processing","parseInt","console","log","faltaCoe","verifQty","every","veriResQty","co","varsOperativas","restriccionesInput","elements_Restriccion","elements_ReferencesList","elements_FuncionObj","SimplexPresentation","tablaDeRecursosFoot","cantUsoVar","variableId","tableBody","restri","Table","responsive","mapperAnalisisTable","result","tableResult","resultSetArray","entries","solutionSet","matrix","_tableau","indexByCol","varIndexByCol","variablesList","variablesPerIndex","variablesRealesList","el","isSlack","keys","includes","evaluation","forEach","_ref","_ref2","slicedToArray","slice","col","indCol","Math","abs","cardsVariablesRender","CardText","CardFooter","details","_this$props","elementosTabAnalisis","resultAnalisisCard","resultDetalleCard","randomColor","require","GraphicPresentation","updateState","elem","referencias","getColorList","_this$getLinesAndExpr","getLinesAndExpressions","lines","expresiones","points","getPoints","optimMark","getOptimPoint","arrayDeRestriccionesConLosDosCoef","highestValueY","max","apply","highestValueX","x","Expression","multiply","y","expressRestri","add","restriEquation","Equation","tipo","yEqu","solveFor","xEqu","title","solSet","Number","toFixed","P","verifyPoint","point","verifyPointInPoints","verifyPointInRestrictions","some","pointL","calIzq","getPointFromExpXExpY","expX","expY","xRes","yRes","getPointFromExpCExpY","expC","expResultY","expResultX","getPointFromExpCExpX","getPointFromTwoExp","exp1","exp2","getPointFromTwoExpC","exp","pointX","pointInAxX","getPointAxFromExpCenX","pointY","pointInAxY","getPointAxFromExpCenY","getPointAxFromExpX","getPointAxFromExpY","shift","getTableResult","hidePoint","showPoint","mapperLinesSeries","data","es","coefToValueZ","graph","_this$state","onMouseLeave","pointer","width","height","onValueMouseOver","onValueMouseOut","opacity","orientation","items","concat","convertAppToModelForSolverPrimal","datosApp","model","optimize","opType","constraints","ints","newVari","res","min","Presentation","calculateResults","solver","Solve","printResults","feasible","bounded","elements_SimplexPresentation","elements_GraphicPresentation","LinealProg","handleResult","step","barProg","finishButtonClick","steps","stepName","component","stepProps","fluid","xs","md","src","logo","alt","Progress","animated","dist_default","progressbar","headerTextCenter","validate","previousButtonText","nextButtonText","nextButtonClasses","finishButtonText","LinealProgramacion","components_LinealProg","NoLinealProgramacion","Jumbotron","react_router_dom","to","Index","tag","href","App","basename","process","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7fafb68e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ButtonGroup, Button, Container, Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport {\r\n  Alert,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  UncontrolledPopover,\r\n  PopoverBody,\r\n  PopoverHeader\r\n} from \"reactstrap\";\r\n\r\nclass Configuration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { faltaDescrip: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleNewsRes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps !== this.props) {\r\n      this.handleNewsRes();\r\n      this.handleNewsVar(this.props.status.method);\r\n    }\r\n  }\r\n  //Función que permite validar si se ingresaron todos los cambios correspondientes en la etapa\r\n  isValidated() {\r\n    let { variables, restricciones } = this.props.status;\r\n    let variablesDescriptionsMin = variables.filter(va => va.descripcion !== \"\");\r\n    let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !== \"\");\r\n    if ((variablesDescriptionsMin.length > 1) & (restriccionesDescriptionsMin.length > 0)) {\r\n      this.props.lastStep(1);\r\n      this.setState({ faltaDescrip: \"\" });\r\n      return true;\r\n    } else if (variablesDescriptionsMin.length < 2) {\r\n      this.setState({ faltaDescrip: \"Se necesitan como mínimo dos variables\" });\r\n    } else if (restriccionesDescriptionsMin.length < 1) {\r\n      this.setState({ faltaDescrip: \"Se necesita como mínimo una restricción\" });\r\n    }\r\n    return false;\r\n  }\r\n  //Función que se encarga de manejar las modificaciones en las variables.\r\n  handlerInputVar = event => {\r\n    let { value, name } = event.target;\r\n    let { variables } = this.props.status;\r\n    //Asignamos Valor y reasignamos el indice\r\n    variables[name].xi = name;\r\n    variables[name].descripcion = value;\r\n    if (name > 1 && value === \"\") {\r\n      //Si la desc esta vacía eliminamos la variable\r\n      variables.splice(name, 1);\r\n    }\r\n    //Pasasamos al Padre los cambios realizados en la variable\r\n    this.props.handleVariables(variables);\r\n    //llamamos a la función que se encarga de generar nuevas variables.\r\n    this.handleNewsVar(this.props.status.method);\r\n  };\r\n  //Función que se encarga de manejar las modificaciones de restricciones.\r\n  handlerInputRes = event => {\r\n    let { value, name } = event.target;\r\n    let { restricciones } = this.props.status;\r\n    //Asignamos el nuevo cambio\r\n    restricciones[name].ri = name;\r\n    restricciones[name].descripcion = value;\r\n    if (value === \"\") {\r\n      //si el cambio es dejarla vacia entonces eliminamos la restriccion\r\n      restricciones.splice(name, 1);\r\n    }\r\n    //pedimos al padre que almacene los cambios\r\n    this.props.handleRestricciones(restricciones);\r\n    //Llamamos a generar si corresponde nueva restriccion\r\n    this.handleNewsRes();\r\n  };\r\n  //Función que se encarga de Añadir una restriccion si es necesario.\r\n  handleNewsRes = () => {\r\n    let { restricciones } = this.props.status;\r\n    //Contador de Rescciones sin descripciones.\r\n    let counterWitheRes = restricciones.filter(element => element.descripcion.length === 0).length;\r\n    //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\r\n    if (counterWitheRes === 0) {\r\n      restricciones.push({\r\n        ri: restricciones.length,\r\n        descripcion: \"\",\r\n        coeficientes: [],\r\n        eq: \">=\",\r\n        derecha: \"\"\r\n      });\r\n      this.props.handleRestricciones(restricciones);\r\n    }\r\n  };\r\n  //Función que se encarga de Añadir una Variable si es necesario.\r\n  handleNewsVar = method => {\r\n    let { variables } = this.props.status;\r\n    if (method === \"simplex\") {\r\n      //Si el metodo es Simplex, se permite agregar más de dos variables.\r\n      let counterWitheVar = variables.filter(element => element.descripcion.length === 0).length;\r\n      //Si la cantidad de Variables Libres es igual a 0 se agrega una más.\r\n      if (counterWitheVar === 0) {\r\n        variables.push({ xi: variables.length, descripcion: \"\", coeficiente: \"\" });\r\n        this.props.handleVariables(variables);\r\n      }\r\n    } else {\r\n      //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que está de más.\r\n      if (variables.length > 2) {\r\n        variables.splice(2);\r\n        this.props.handleVariables(variables);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Obtenemos de las props, las varaibles y restricciones.\r\n    let { variables } = this.props.status;\r\n    let { restricciones } = this.props.status;\r\n    // Generamos los inputs para las Variables\r\n    let variablesARenderizar = variables.map((variable, index) => (\r\n      <InputGroup className=\"mt-1\" id={\"XTT\" + index} key={\"VTD\" + index}>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText name=\"xi\" id=\"variable\">\r\n            {\"X\" + index}\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input\r\n          name={index}\r\n          placeholder=\"Descripcion de la Variable\"\r\n          aria-label=\"Descripcion\"\r\n          aria-describedby=\"variable\"\r\n          onChange={this.handlerInputVar}\r\n          value={variable.descripcion}\r\n        />\r\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"XTT\" + index}>\r\n          <PopoverBody>Aquí debes ingresar qué representa la variable en el modelo.</PopoverBody>\r\n        </UncontrolledPopover>\r\n      </InputGroup>\r\n    ));\r\n    //Generamos los imputs para las restricciones\r\n    let restriccionesARenderizar = restricciones.map((restriccion, index) => (\r\n      <InputGroup className=\"mt-1\" id={\"TTR\" + index} key={\"RTD\" + index}>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText name=\"ri\" id=\"restriccion\">\r\n            {\"R\" + index}\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input\r\n          name={index}\r\n          placeholder=\"Descripcion de la Restriccion\"\r\n          aria-label=\"Descripcion\"\r\n          aria-describedby=\"restriccion\"\r\n          onChange={this.handlerInputRes}\r\n          value={restriccion.descripcion}\r\n        />\r\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"TTR\" + index}>\r\n          <PopoverBody>Aquí debes ingresar qué representa la restricción en el modelo.</PopoverBody>\r\n        </UncontrolledPopover>\r\n      </InputGroup>\r\n    ));\r\n    let buttonsMethods = (\r\n      <ButtonGroup id=\"ButtUtil\">\r\n        <Button\r\n          outline\r\n          onClick={() => {\r\n            this.props.handleMethod(\"graph\");\r\n            this.handleNewsVar(\"graph\");\r\n          }}\r\n          active={this.props.status.method === \"graph\"}\r\n          color=\"primary\"\r\n        >\r\n          Gráfico\r\n        </Button>\r\n        <Button\r\n          outline\r\n          onClick={() => {\r\n            this.props.handleMethod(\"simplex\");\r\n            this.handleNewsVar(\"simplex\");\r\n          }}\r\n          active={this.props.status.method === \"simplex\"}\r\n          color=\"primary\"\r\n        >\r\n          Simplex\r\n        </Button>\r\n      </ButtonGroup>\r\n    );\r\n    let buttonsOptType = (\r\n      <ButtonGroup>\r\n        <Button\r\n          outline\r\n          onClick={() => this.props.handleObjective(\"max\")}\r\n          active={this.props.status.objective === \"max\"}\r\n          color=\"primary\"\r\n        >\r\n          Maximizar\r\n        </Button>\r\n        <Button\r\n          outline\r\n          onClick={() => this.props.handleObjective(\"min\")}\r\n          active={this.props.status.objective === \"min\"}\r\n          color=\"primary\"\r\n        >\r\n          Minimizar\r\n        </Button>\r\n      </ButtonGroup>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <h3>Comenzamos configurando nuestro modelo</h3>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardInteger\">\r\n                <PopoverBody>Esta función activa o desactiva la Programacion Lineal Entera.</PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardInteger\" className=\"mt-2 mx-auto\">\r\n                <CardHeader>Programación entera</CardHeader>\r\n                <CardBody>\r\n                  <Button\r\n                    outline\r\n                    color={this.props.status.integer ? \"success\" : \"danger\"}\r\n                    onClick={() => this.props.toggleInteger()}\r\n                  >\r\n                    {this.props.status.integer ? \"Activa\" : \"Inactiva\"}\r\n                  </Button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardModel\">\r\n                <PopoverBody>\r\n                  Esta función cargará un modelo predefinido con el objeto de probar el funcionamiento de la\r\n                  aplicación.\r\n                </PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardModel\" className=\"mt-2 mx-auto\">\r\n                <CardHeader>Modelo de ejemplo</CardHeader>\r\n                <CardBody>\r\n                  <Button color=\"warning\" outline onClick={this.props.loadExampleModel}>\r\n                    Cargar\r\n                  </Button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardUtil\">\r\n                <PopoverBody>\r\n                  Aquí debes seleccionar el método de cálculo y visualización de los resultados.\r\n                </PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardUtil\" className=\"mt-3 mx-auto\">\r\n                <CardHeader>Método a utilizar</CardHeader>\r\n                <CardBody>{buttonsMethods}</CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardOpt\">\r\n                <PopoverBody>\r\n                  Y aquí el tipo de optimizacion que deseas realizar: si deseas maximizar o minimizar la\r\n                  función.\r\n                </PopoverBody>\r\n              </UncontrolledPopover>\r\n              <Card outline color=\"secondary\" id=\"CardOpt\" className=\"mt-3 mx-auto\">\r\n                <CardHeader>Tipo de optimización</CardHeader>\r\n                <CardBody>{buttonsOptType}</CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardVariables\">\r\n              <PopoverHeader>Variables</PopoverHeader>\r\n              <PopoverBody>\r\n                Aquí debes ingresar las variables que formarán parte del modelo, las mismas son de carga\r\n                dinámica.\r\n              </PopoverBody>\r\n            </UncontrolledPopover>\r\n            <Card outline color=\"secondary\" id=\"CardVariables\" className=\"w-100 mt-3 mx-auto\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Variables</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody>{variablesARenderizar}</CardBody>\r\n            </Card>\r\n          </Row>\r\n          <Row>\r\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardRestri\">\r\n              <PopoverHeader>Restricciones</PopoverHeader>\r\n              <PopoverBody>\r\n                Aquí debes ingresar las restricciones que formarán parte del modelo, éstas también son de\r\n                carga dinámica.\r\n              </PopoverBody>\r\n            </UncontrolledPopover>\r\n            <Card outline color=\"secondary\" id=\"CardRestri\" className=\"w-100 mt-3 mx-auto\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Restricciones</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody>{restriccionesARenderizar}</CardBody>\r\n            </Card>\r\n          </Row>\r\n          {this.state.faltaDescrip !== \"\" && (\r\n            <Row className=\"mt-3\">\r\n              <Alert className=\"mx-auto\" color=\"danger\">\r\n                {this.state.faltaDescrip}\r\n              </Alert>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Configuration;\r\n","import React from 'react';\r\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup,UncontrolledTooltip} from 'reactstrap';\r\n\r\nconst Restriccion = props => {\r\n    let {coeficientes} = props.restriccion;\r\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\r\n    if (coeficientes.length !== props.cantVariables) {\r\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \r\n        let diferencia = props.cantVariables - coeficientes.length;\r\n        if ( diferencia > 0 ) {\r\n            for (let index = 0; index < diferencia; index++) {\r\n                coeficientes.push('')       \r\n            }\r\n        }else {\r\n            coeficientes.splice(props.cantVariables)\r\n        }\r\n    }\r\n\r\n    let thisEq = props.restriccion.eq;\r\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\r\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \r\n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \r\n                                        value='<='>{'<='}</Button>\r\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \r\n                                        disabled \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \r\n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \r\n                                        value='='>{'='}</Button>\r\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \r\n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \r\n                                        value='>='>{'>='}</Button>\r\n                                </ButtonGroup>);\r\n    let inputsRestriccions = coeficientes\r\n    .map((coeficiente,indx) => \r\n        <React.Fragment key={'divCi'+indx}>\r\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\r\n                type=\"number\"\r\n                name={indx}\r\n                placeholder=\"Coefiente\"\r\n                className=\"InputCoeficiente\"\r\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\r\n                value={coeficiente}\r\n                />\r\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\r\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\r\n            </InputGroupAddon>\r\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\r\n        </React.Fragment>\r\n            \r\n    )\r\n\r\n    return(\r\n        <Card key={'CR'+props.restriccion.ri} id={'CR'+props.restriccion.ri}>\r\n            <UncontrolledTooltip flip={false} key={'TTCR'+props.restriccion.ri} placement='auto' target={'CR'+props.restriccion.ri}>\r\n            {'Aqui debes ingresar los coeficiente de '+props.restriccion.descripcion}\r\n            </UncontrolledTooltip>\r\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\r\n            <CardBody className=\"p-0 my-1 mx-auto\">\r\n                <InputGroup key={'RT'+props.restriccion.ri}>\r\n                    {inputsRestriccions}\r\n                    {botoneraMaxMin}\r\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\r\n                            type=\"number\"\r\n                            name={'derecha'}\r\n                            placeholder=\"Coe\"\r\n                            className=\"InputCoeficiente\"\r\n                            aria-label=\"Coe\"\r\n                            aria-describedby=\"restriccion\"\r\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\r\n                            value={props.restriccion.derecha}/>\r\n                </InputGroup>\r\n            </CardBody>\r\n        </Card>)\r\n    \r\n}\r\n\r\nexport default Restriccion;","import React from 'react';\r\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, UncontrolledTooltip } from 'reactstrap'\r\n\r\n\r\nconst FuncionObj = props => {\r\n    let {variables} = props\r\n    let variablesToFunction = variables\r\n    .filter(vari => vari.descripcion !== '')\r\n    .map( (vari,index) => \r\n        <React.Fragment key={'divIF'+index}>\r\n            <UncontrolledTooltip flip={false} key={'TTV'+index} placement='auto' target={'IF'+index}>\r\n            {'Aqui debes ingresar el coeficiente de '+vari.descripcion}\r\n            </UncontrolledTooltip>\r\n            <Input key={'IF'+index}\r\n                    id={'IF'+index}\r\n                        type='number'\r\n                        name={vari.xi}\r\n                        placeholder=\"Coef\"\r\n                        className=\"InputCoeficiente\"\r\n                        aria-label=\"Coeficiente\"\r\n                        aria-describedby=\"coe\"\r\n                        onChange={ e => props.handleCoefVar(e)}\r\n                        value={vari.coeficiente}\r\n                        />\r\n            <InputGroupAddon key={'ADDIF'+index} addonType=\"append\">\r\n                <InputGroupText key={'IFD'+index}>{\"X\"+vari.xi}</InputGroupText>\r\n            </InputGroupAddon>\r\n            {index < variables.filter(vari => vari.descripcion !== '').length-1 && <InputGroupText key={'+IF'+index}>+</InputGroupText>}\r\n        </React.Fragment>) \r\n\r\n    return(\r\n            <InputGroup key={'INPUTFUNCIONAL'}>\r\n                {variablesToFunction}\r\n                <InputGroupText className='mx-1' key='IFOPT'>{' => '+props.objective.toUpperCase()}</InputGroupText>\r\n            </InputGroup>\r\n    \r\n    ) \r\n}\r\n\r\nexport default FuncionObj;","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Col,\r\n  Collapse,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge\r\n} from \"reactstrap\";\r\n\r\nclass ReferencesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { references: false };\r\n  }\r\n\r\n  listDescriptionsVarItems = array =>\r\n    array\r\n      .filter(item => item.descripcion !== \"\")\r\n      .map(item => (\r\n        <ListGroupItem key={\"DLGIV\" + item.xi} className=\"justify-content-between\">\r\n          <Badge>{\"X\" + item.xi}</Badge>\r\n          {\" \" + item.descripcion}\r\n        </ListGroupItem>\r\n      ));\r\n\r\n  listDescriptionsResItems = array =>\r\n    array\r\n      .filter(item => item.descripcion !== \"\")\r\n      .map(item => (\r\n        <ListGroupItem key={\"DLGIR\" + item.ri} className=\"justify-content-between\">\r\n          <Badge>{\"R\" + item.ri}</Badge>\r\n          {\" \" + item.descripcion}\r\n        </ListGroupItem>\r\n      ));\r\n\r\n  render() {\r\n    //Obtenemos las propiedades del Super\r\n    let { variables } = this.props;\r\n    let { restricciones } = this.props;\r\n\r\n    return (\r\n      <Card outline color=\"secondary\" className=\"w-100 mt-3\">\r\n        <CardHeader>\r\n          <Row>\r\n            <Col className=\"text-left\">\r\n              <CardTitle>\r\n                <h4>Referencias</h4>\r\n              </CardTitle>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                outline\r\n                size=\"sm\"\r\n                onClick={() => this.setState({ references: !this.state.references })}\r\n                color={!this.state.references ? \"success\" : \"danger\"}\r\n              >\r\n                {!this.state.references ? \"Ver referencias\" : \"Ocultar referencias\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <Collapse isOpen={this.state.references}>\r\n          <CardBody>\r\n            <h5 className=\"text-left\">Variables:</h5>\r\n            <ListGroup>{this.listDescriptionsVarItems(variables)}</ListGroup>\r\n            <h5 className=\"text-left mt-5\">Restricciones:</h5>\r\n            <ListGroup>{this.listDescriptionsResItems(restricciones)}</ListGroup>\r\n          </CardBody>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReferencesList;\r\n","import React from \"react\";\r\nimport { Container, Row, Card, CardBody, CardHeader, CardTitle, Alert } from \"reactstrap\";\r\nimport Restriccion from \"./elements/Restriccion\";\r\nimport FuncionObj from \"./elements/FuncionObj\";\r\nimport ReferencesList from \"./elements/ReferencesList\";\r\n\r\nclass Processing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { faltaCoe: \"\" };\r\n  }\r\n\r\n  isValidated() {\r\n    //Verificando si los coeficientes de las variables y las restricciones no son nulos\r\n    let verifQty = this.props.status.variables\r\n      .filter(va => va.descripcion !== \"\")\r\n      .every(va => va.coeficiente !== \"\");\r\n    let veriResQty = this.props.status.restricciones\r\n      .filter(re => re.descripcion !== \"\")\r\n      .every(re => re.coeficientes.every(co => co !== \"\") && re.derecha !== \"\");\r\n    if (verifQty && veriResQty) {\r\n      this.props.lastStep(2);\r\n      this.setState({ faltaCoe: \"\" });\r\n      return true;\r\n    } else {\r\n      let faltaCoe;\r\n      faltaCoe = veriResQty\r\n        ? \"Falta algun coeficiente del Funcional\"\r\n        : \"Falta algun coeficiente en las Restricciones\";\r\n      this.setState({ faltaCoe });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //En el siguiente handler, se toma del input de una variable en particular el coeficiente.\r\n  handleCoefVar = event => {\r\n    let { value, name } = event.target;\r\n    if (value) {\r\n      let { variables } = this.props.status;\r\n      variables[name].coeficiente = parseInt(value);\r\n      this.props.handleVariables(variables);\r\n      console.log(this.props.status.variables);\r\n    }\r\n  };\r\n\r\n  handleCoefRes = (event, ri) => {\r\n    let { name, value } = event.target;\r\n    let { restricciones } = this.props.status;\r\n    console.log(\"En la Res:\" + ri + \", en el campo:\" + name + \",con el valor:\" + value);\r\n\r\n    switch (name) {\r\n      case \"derecha\":\r\n        restricciones[ri].derecha = parseInt(value);\r\n        break;\r\n      case \"eq\":\r\n        restricciones[ri].eq = value;\r\n        break;\r\n      default:\r\n        restricciones[ri].coeficientes[name] = parseInt(value);\r\n        break;\r\n    }\r\n    console.log(restricciones);\r\n    this.props.handleRestricciones(restricciones);\r\n  };\r\n\r\n  render() {\r\n    //Obtenemos las propiedades del Super\r\n    let { variables } = this.props.status;\r\n    let { restricciones } = this.props.status;\r\n    let varsOperativas = variables.filter(va => va.descripcion !== \"\").length;\r\n\r\n    //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\r\n\r\n    let restriccionesInput = restricciones\r\n      .filter(item => item.descripcion !== \"\")\r\n      .map((restriccion, index) => (\r\n        <Restriccion\r\n          className=\"mt-1\"\r\n          key={\"R\" + index}\r\n          handleCoefRes={this.handleCoefRes}\r\n          cantVariables={varsOperativas}\r\n          restriccion={restriccion}\r\n        />\r\n      ));\r\n\r\n    return (\r\n      <>\r\n        <h3>Cargamos los datos de nuestro modelo</h3>\r\n        <Container>\r\n          <Row>\r\n            <ReferencesList variables={variables} restricciones={restricciones} />\r\n          </Row>\r\n          <Row>\r\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Función objetivo</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody className=\"mx-auto\">\r\n                <FuncionObj\r\n                  variables={variables}\r\n                  handleCoefVar={this.handleCoefVar}\r\n                  objective={this.props.status.objective}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n          <Row>\r\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-left\">\r\n                  <h4>Restricciones</h4>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardBody>{restriccionesInput}</CardBody>\r\n            </Card>\r\n          </Row>\r\n          {this.state.faltaCoe !== \"\" && (\r\n            <Row className=\"mt-3\">\r\n              <Alert className=\"mx-auto\" color=\"danger\">\r\n                {this.state.faltaCoe}\r\n              </Alert>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Processing;\r\n","import React from 'react';\r\nimport {Card,CardTitle,CardBody,CardText,CardHeader,Table,CardFooter,Row,Col,Button,Collapse} from 'reactstrap';\r\nimport ReferencesList from './ReferencesList'\r\n\r\nclass SimplexPresentation extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        this.state={details:false}\r\n    }\r\n\r\n    //Funcion que en base al uso de una variable, devuelve una tabla con los recursos utilizados\r\n    tablaDeRecursosFoot = (cantUsoVar,variableId) => {\r\n        let {restricciones} = this.props;\r\n        let tableBody = restricciones.filter(item => item.descripcion!== '')\r\n        //Realizamos calculos\r\n        .map( restri => \r\n            <tr key={'TdeV'+variableId+'R'+restri.ri}><td>{'R'+restri.ri}</td><td>{cantUsoVar*restri.coeficientes[variableId]}</td>\r\n            <td>{restri.derecha-(cantUsoVar*restri.coeficientes[variableId])}</td></tr>)\r\n        return(<Table size='sm' responsive>\r\n            <thead><tr><th>Recurso</th><th>Usado</th><th>Diferencia</th></tr></thead>\r\n            <tbody>{tableBody}</tbody>\r\n        </Table>)\r\n\r\n    }\r\n\r\n    mapperAnalisisTable = (result) => {\r\n        //El array al cucal enviamos los resultados procesados\r\n        let tableResult=[];\r\n        //Obtenemos el Set de Resultados con Formato [key,value]\r\n        let resultSetArray =  Object.entries(result.solutionSet);\r\n        //Obtenemos la matriz del simplex reducida\r\n        let matrix = result._tableau.matrix;\r\n        //Obtenemos los indices de cada columna\r\n        let indexByCol = result._tableau.varIndexByCol;\r\n        //Obtenemos la Lista de Variables Slack y Reales\r\n        let variablesList = result._tableau.variablesPerIndex\r\n        //Obtenemos la Lista de Variables Reales\r\n        let variablesRealesList = result._tableau.variablesPerIndex.filter(el => !el.isSlack);\r\n        //Contamos la Cantidad de elementos en la fila de resultados (van a ser cero por ser simplex reducido)\r\n        let itemsinCero = matrix[0].length - 1;\r\n        //Obtenemos cuales son las variables que no estan en el set de resultados (van a ser cero)\r\n        let varsEnCero = variablesRealesList.filter( vari => !Object.keys(result.solutionSet).includes(vari.id) )\r\n        //La cantidad de columnas en la fila de resultados - la cantidad de variables nulas, me devuelven la cantidad de slacks\r\n        let slacksEnCero = itemsinCero - varsEnCero.length;\r\n\r\n        //Procesamos INFO\r\n\r\n        //Primer elemento de la Tabla, el Optimo.\r\n        tableResult.push({name:'Optimo',item:'',value:result.evaluation});\r\n        //Procesamos todos los elementos a producir (result Set)\r\n        resultSetArray.forEach( ([key,value]) => tableResult.push({name:'Producir',item:'X'+key, value}) )\r\n        //Procesamos el uso de los recursos, es decir, los elementos extras de la Fila de Resultados(Matriz)\r\n        if (resultSetArray.length < matrix.length-1) {\r\n            console.log('hola');\r\n        }\r\n\r\n        //Procesamos los Costo de Oportunidad y los Valores Marginales\r\n        matrix[0].slice(1)\r\n                .forEach( (col,indCol) => {\r\n                    //Creamos un nuevo item.\r\n                    let item= {name:'',item:'',value:''};\r\n                    //Verificamos si es Slack o Variable Real\r\n                    if (variablesList[indexByCol[indCol+1]].isSlack){\r\n                        item.name = 'Valor Marginal';\r\n                        item.item = 'R'+indexByCol[indCol+1];\r\n                        item.value = Math.abs(col);\r\n                    }else{\r\n                        item.name = 'Costo de Oportunidad';\r\n                        item.item = 'X'+variablesList[indexByCol[indCol+1]].id;\r\n                        item.value = Math.abs(col);\r\n                    }\r\n                    \r\n                    //Empujamos el item a la tabla de resultados\r\n                    tableResult.push(item)})\r\n            \r\n        return tableResult\r\n    }\r\n\r\n    cardsVariablesRender = (variables,result) => variables\r\n                                                    .filter(vari => vari.descripcion !== '')\r\n                                                    .map( vari => \r\n                                                                <Card key={'C-V-'+vari.xi} outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                                                                    <CardHeader><CardTitle>{'Variable: X'+vari.xi}</CardTitle></CardHeader>    \r\n                                                                    <CardBody>\r\n                                                                        <Row><CardText>{\r\n                                                                            result.solutionSet[vari.xi] ? \r\n                                                                            'Se recomienda producir '+result.solutionSet[vari.xi]+' unidades':\r\n                                                                            'No se recomienda la produccion'}\r\n                                                                            {' de '+vari.descripcion}</CardText>\r\n                                                                        </Row>\r\n                                                                        <Row></Row> \r\n                                                            \r\n                                                                    </CardBody>\r\n                                                                    <CardFooter>\r\n                                                                        <CardText>Tabla de Recursos:</CardText>\r\n                                                                        {result.solutionSet[vari.xi] ? \r\n                                                                        this.tablaDeRecursosFoot(result.solutionSet[vari.xi],vari.xi):'Sin Consumo de Recursos'}\r\n                                                                    </CardFooter>\r\n\r\n                                                                </Card>)\r\n\r\n\r\n    render () {\r\n        //Obtenemos el resultado almacenado\r\n        //Obtenemos las Variables desde las props\r\n        let {variables, restricciones,result} = this.props;\r\n        \r\n    \r\n        //Obtenemos  la informacion para la tabla de Analisis\r\n        let itemsTabAnalisis = this.mapperAnalisisTable(result);     \r\n        //Renderizamos el Tablero de analisis\r\n        let elementosTabAnalisis = itemsTabAnalisis.map( (item, index) => <tr key={'T-A-'+index}><td>{item.name}</td><td>{item.item}</td><td>{item.value}</td></tr>);\r\n        // \r\n        let resultAnalisisCard = \r\n                        <Card outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                            <CardHeader><CardTitle><h4>Tablero de Analisis</h4></CardTitle></CardHeader>\r\n                            <CardBody>\r\n                                <Table>\r\n                                    <thead><tr><th></th><th>Elemento</th><th>Valor</th></tr></thead>\r\n                                    <tbody>\r\n                                        {elementosTabAnalisis}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n        let resultDetalleCard = <Card outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                                <CardHeader>\r\n                                    <Row>\r\n                                        <Col className=\"text-left\"><CardTitle><h5>Detalle de Variables Y Recursos:</h5></CardTitle></Col>\r\n                                        <Col><Button outline size='sm'\r\n                                            onClick={() => this.setState({details:!this.state.details})} \r\n                                            color={!this.state.details ? 'success':'danger'}>{!this.state.details ? 'Ver Detalles':'Ocultar Detalles'}</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardHeader>\r\n                                <Collapse isOpen={this.state.details}>\r\n                                    <CardBody>\r\n                                        {this.cardsVariablesRender(variables,result)}\r\n                                    </CardBody>\r\n                                </Collapse>\r\n                            </Card>\r\n        return(\r\n                <CardBody>\r\n                    <Row>{resultAnalisisCard}</Row>\r\n                    <Row><ReferencesList variables={variables} restricciones={restricciones}/></Row>\r\n                    <Row>{resultDetalleCard}</Row>\r\n                </CardBody>)\r\n    }\r\n}\r\n\r\nexport default SimplexPresentation;","import React from 'react';\r\nimport {CardBody, Card, CardHeader,CardFooter,Table,Row} from 'reactstrap';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines,LineSeries, AreaSeries, VerticalGridLines,MarkSeries,DiscreteColorLegend,Hint} from 'react-vis';\r\nimport {Expression, Equation} from 'algebra.js';\r\nvar randomColor = require('randomcolor');\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GraphicPresentation extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        this.state={coefToValueZ:{x:0,y:0},optimMark:[],points:[],lines:[],referencias:[],value:null}\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ( this.props.graph ){\r\n            this.updateState()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if ( prevProps !== this.props ){\r\n            if ( this.props.graph ){\r\n                this.updateState()\r\n            }\r\n        }\r\n    }\r\n\r\n    updateState = () =>{\r\n        let {variables,restricciones,result} = this.props\r\n        //Filtramos las restricciones y variables que no fueron filtradas antes.\r\n        restricciones = restricciones.filter(elem => elem.descripcion!=='');\r\n        variables = variables.filter(elem => elem.descripcion!=='');\r\n        //Obtenemos la paleta de colores.\r\n        let referencias = this.getColorList(restricciones);\r\n        //Obtenemos las Lineas y las Expresiones\r\n        let {lines,expresiones} = this.getLinesAndExpressions(restricciones);\r\n        //Obtenemos los Puntos de marca general\r\n        let points = this.getPoints(variables,restricciones,expresiones,result)\r\n        //Obtenemos el Punto Optimo\r\n        let optimMark = []\r\n        if( Object.entries(result).length ){ optimMark = [this.getOptimPoint(result)]}\r\n        //Almacenamos el Estado.\r\n        this.setState({referencias,lines,points,optimMark});\r\n    } \r\n\r\n\r\n    getLinesAndExpressions = restricciones => {\r\n        let expresiones = [];\r\n        let arrayDeRestriccionesConLosDosCoef =  restricciones.filter(el=> ( el.coeficientes[0] > 0 && el.coeficientes[1] > 0) )\r\n        let highestValueY = Math.max.apply(Math,arrayDeRestriccionesConLosDosCoef.map( restri => (restri.derecha / restri.coeficientes[1])));\r\n        let highestValueX = Math.max.apply(Math,arrayDeRestriccionesConLosDosCoef.map( restri => (restri.derecha / restri.coeficientes[0])));\r\n        \r\n        let lines = restricciones.map( restri => {\r\n            if (restri.coeficientes[0] !== 0  && restri.coeficientes[1] !== 0) {\r\n                console.log(restri.coeficientes);\r\n                let x = new Expression('x').multiply(restri.coeficientes[0]);\r\n                let y = new Expression('y').multiply(restri.coeficientes[1]);\r\n                let expressRestri = new Expression().add(x).add(y);  \r\n                let restriEquation = new Equation(expressRestri,restri.derecha)\r\n                expresiones.push({restriEquation,tipo:2})\r\n                let yEqu = (new Equation(restriEquation.solveFor('x'),0)).solveFor('y');\r\n                let xEqu = (new Equation(restriEquation.solveFor('y'),0)).solveFor('x');\r\n                if (xEqu > -1 && yEqu > -1) {\r\n                    return([{x:0,y:yEqu},{x:xEqu,y:0}])\r\n                }else{\r\n                    if(yEqu > -1){\r\n                        return([{x:0,y:yEqu},{x:Math.abs(xEqu),y:yEqu+(Math.abs(xEqu)*yEqu)}])\r\n                    }else{\r\n                        return([{x:xEqu,y:0},{x:xEqu+(Math.abs(yEqu)*xEqu),y:(Math.abs(yEqu))}])\r\n                    }\r\n                }\r\n            }else {\r\n                if (restri.coeficientes[0] !== 0) {                  \r\n                    let x = new Expression('x').multiply(restri.coeficientes[0]);\r\n                    let restriEquation = new Equation(x,restri.derecha)\r\n                    expresiones.push({restriEquation,tipo:0})\r\n                    let xEqu = restriEquation.solveFor('x');\r\n                    if (xEqu > -1 ){return([{x:xEqu,y:0},{x:xEqu,y:highestValueY}])}\r\n                }else {\r\n                    let y = new Expression('y').multiply(restri.coeficientes[1]);\r\n                    let restriEquation = new Equation(y,restri.derecha)\r\n                    expresiones.push({restriEquation,tipo:1})\r\n                    let yEqu = restriEquation.solveFor('y')\r\n                    if ( yEqu > -1) {return([{x:0,y:yEqu},{x:highestValueX,y:yEqu}])}               \r\n                } \r\n            }\r\n        })\r\n        return { lines,expresiones }\r\n    }\r\n\r\n    \r\n    getColorList = restricciones => restricciones.map( restri => Object({title: 'R'+restri.ri+' Tipo:'+restri.eq, color: randomColor()}))\r\n\r\n    getOptimPoint = (solSet) => {\r\n        console.log('Generating Optim Point');\r\n        //Analizamos el Punto Optimo.\r\n        if ( solSet['0'] && solSet['1'] ) {return{x:Number(solSet['0']).toFixed(4),y:Number(solSet['1']).toFixed(4),P:'0 - OPTIMO'}\r\n        }else if ( solSet['0'] ) {return{x:Number(solSet['0']).toFixed(4),y:0,P:'0 - OPTIMO'}\r\n        }else { return{x:0,y:Number(solSet['1']).toFixed(4),P:'0 - OPTIMO'}}\r\n    }\r\n\r\n    getPoints = (variables,restricciones,expresiones,solSet) => {\r\n        console.log('Getting Points');\r\n        console.log(solSet);\r\n        \r\n\r\n        //Definimos las Funciones necesarias para el buen funcionamiento de esta Funcion.\r\n\r\n        //Funcion que se encarga de realizar las verificaciones correspondientes para agregar un punto o no.\r\n        const verifyPoint = (point, restricciones, points) => {\r\n            if ( !verifyPointInPoints(point,points) ) {\r\n                if ( verifyPointInRestrictions(point,restricciones) ) { return true } else return false\r\n            }else return false\r\n        }\r\n\r\n        //Funcion que se encarga de Verificar si un punto ya se encuentra en la lista de puntos (o ya fue verificado antes).\r\n        const verifyPointInPoints = (point,points) => points.some( pointL => (pointL.x === point.x && pointL.y === point.y) )\r\n        \r\n        //Funcion que se encarga de verificar que un punto cumpla con todas las Restricciones.\r\n        const verifyPointInRestrictions = (point,restricciones) => restricciones.every( restri => {\r\n                    let calIzq = (restri.coeficientes[0]*point.x + restri.coeficientes[1]*point.y).toFixed(4);\r\n                    if( restri.eq === '>=' ) {\r\n                        console.log('P:('+point.x +','+point.y+') :'+calIzq+' >='+ restri.derecha );                        \r\n                        return ( calIzq >= restri.derecha ) \r\n                    }else { \r\n                        console.log('P:('+point.x +','+point.y+') :'+calIzq+' <='+ restri.derecha );                        \r\n                        return ( calIzq <= restri.derecha )} \r\n                })\r\n        // Funcion que devuelve un punto verificado y que corta en un Eje.\r\n        const getPointAxFromExpCenX = ( exp ) => {       \r\n            //Obtenemos el Corte sobre el Eje-Y\r\n            let expResultX = Number((new Equation(exp.solveFor('y'),0)).solveFor('x')).toFixed(4);\r\n            if ( expResultX > -1 ) {\r\n                //Generamos el Punto en X\r\n                let pointInAxX = {x:expResultX,y:0,P:points.length}\r\n                //Verificamos el punto en X con las Restricciones.\r\n                if (verifyPoint(pointInAxX,restricciones,points)){return pointInAxX} \r\n            }\r\n        };\r\n        // Funcion que devuelve un punto verificado y que corta en un Eje.\r\n        const getPointAxFromExpCenY = ( exp ) => {       \r\n            //Obtenemos el Corte sobre el Eje-Y\r\n            let expResultY = Number((new Equation(exp.solveFor('x'),0)).solveFor('y')).toFixed(4);\r\n            if ( expResultY > -1 ) {\r\n                //Generamos el Punto en Y\r\n                let pointInAxY = {x:0,y:expResultY,P:points.length}\r\n                //Verificamos el punto en Y con las Restricciones.\r\n                if (verifyPoint(pointInAxY,restricciones,points)){return pointInAxY}\r\n            }   \r\n        };\r\n        const getPointAxFromExpY = ( expY ) => {\r\n            //Obtenemos el Corte sobre el Eje-Y\r\n            let expResultY = Number(expY.solveFor('y')).toFixed(4);\r\n            if ( expResultY > -1 ) {\r\n                //Generamos el Punto en Y\r\n                let pointInAxY = {x:0,y:expResultY,P:points.length}\r\n                //Verificamos el punto en Y con las Restricciones.\r\n                if (verifyPoint(pointInAxY,restricciones,points)){return pointInAxY}\r\n            }\r\n            \r\n        };\r\n        const getPointAxFromExpX = (expX) => {\r\n            //Obtenemos Cortes sobre el Eje-X\r\n            let expResultX = Number(expX.solveFor('x')).toFixed(4);\r\n            if ( expResultX > -1 ) {\r\n                //Generamos el Punto en X\r\n                let pointInAxX = {x:expResultX,y:0,P:points.length}\r\n                //Verificamos el punto en X con las Restricciones.\r\n                if (verifyPoint(pointInAxX,restricciones,points)){return pointInAxX} \r\n            } \r\n        }\r\n        //Funcion que devuelve un punto verificado con una Expresion en X y otra en Y\r\n        const getPointFromExpXExpY = ( expX,expY ) => {\r\n            let xRes = Number(expX.solveFor('x')).toFixed(4);\r\n            let yRes = Number(expY.solveFor('y')).toFixed(4);\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( xRes > -1  && yRes > -1 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:xRes,y:yRes,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){return point}     \r\n                }\r\n        };\r\n        //Funcion que devuelve un punto verificado con una Expresion Completa y otra en Y\r\n        const getPointFromExpCExpY = ( expC,expY ) => {\r\n            console.log('EXP C y Recta Y');\r\n            let expResultY = Number(expY.solveFor('y')).toFixed(4);\r\n            let expResultX = Number((new Equation(expC.solveFor('y'),expY.solveFor('y'))).solveFor('x')).toFixed(4);\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( expResultX > -1  && expResultY > -1 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:expResultX,y:expResultY,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){return point}}\r\n        };\r\n        //Funcion que devuelve un punto verificado con una Expresion Completa y otra en X\r\n        const getPointFromExpCExpX = ( expC,expX ) => {\r\n            console.log('EXP C y Recta X');\r\n            let expResultX = Number(expX.solveFor('x')).toFixed(4);\r\n            let expResultY = Number((new Equation(expC.solveFor('x'),expX.solveFor('x'))).solveFor('y')).toFixed(4);\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( expResultX > -1  && expResultY > -1 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:expResultX,y:expResultY,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){return point}}\r\n        };\r\n        //Funcion que devuelve un punto verificado con dos Expresion Completas.\r\n        const getPointFromTwoExpC = (exp1,exp2) =>{\r\n            let expResultX = Number((new Equation(exp1.restriEquation.solveFor('y'),exp2.restriEquation.solveFor('y'))).solveFor('x')).toFixed(4);\r\n            let expResultY = Number((new Equation(exp1.restriEquation.solveFor('x'),exp2.restriEquation.solveFor('x'))).solveFor('y')).toFixed(4);\r\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\r\n            if ( expResultX > -1  && expResultY > -1 ) {\r\n                //Generamos el Punto.\r\n                let point = {x:expResultX,y:expResultY,P:points.length}\r\n                //Verificamos el Punto.\r\n                if (verifyPoint(point,restricciones,points)){return point}}\r\n        };\r\n        //Funcion que devuelve Un punto de Dos Expresiones\r\n        const getPointFromTwoExp = (exp1,exp2) => {\r\n            //Verificamos los Tipos\r\n            if ( exp1.tipo === 2 && exp2.tipo === 2 ) {\r\n                //Caso de que son dos rectas Completas\r\n                return getPointFromTwoExpC(exp1,exp2)  \r\n            }else if( exp1.tipo === 2){\r\n                //La primera es Recta completa y la otra o solo de X o solo de Y\r\n                if( exp2.tipo === 0) { return getPointFromExpCExpX(exp1.restriEquation,exp2.restriEquation) \r\n                }else return getPointFromExpCExpY(exp1.restriEquation,exp2.restriEquation)\r\n            }else if( exp2.tipo === 2 ){\r\n                //La seguna es la Recta completa entonces la otra es o solo de X o solo de Y\r\n                if( exp1.tipo === 0) { return getPointFromExpCExpX(exp2.restriEquation,exp1.restriEquation)\r\n                }else return getPointFromExpCExpY(exp2.restriEquation,exp1.restriEquation)\r\n            }else if (exp1.tipo === 0){\r\n                //Si la primera es una recta Solo de X y la otra puede ser de Y\r\n                if( exp2.tipo === 1) { return getPointFromExpXExpY(exp1.restriEquation,exp2.restriEquation) }\r\n            }else{\r\n                //Si la Primera es una recta solo de Y y la otra puede ser de X\r\n                if( exp2.tipo === 0) { return getPointFromExpXExpY(exp2.restriEquation,exp1.restriEquation) }\r\n            }\r\n        };\r\n\r\n        //Limpiamos nuestro array de Puntos\r\n        let points = [];\r\n        \r\n        //El primer punto que obtenemos es el Optimo, ya que deseamos que no se repita.\r\n        if ( Object.entries(solSet).length ){ points.push(this.getOptimPoint(solSet)) }\r\n        \r\n\r\n        //Analizamos las Rectas que cortan en los Ejes o Rectas sin pendiente.\r\n        expresiones.forEach( exp => {\r\n            if (exp.tipo === 2) {\r\n                //Si es Completa Corta en los dos Ejes\r\n                let pointX = getPointAxFromExpCenX(exp.restriEquation);\r\n                if (pointX) { points.push(pointX) }\r\n                let pointY = getPointAxFromExpCenY(exp.restriEquation)\r\n                if (pointY) { points.push(pointY) }\r\n            }else if(exp.tipo === 0){\r\n                //Solo Corta en X\r\n                let point = getPointAxFromExpX(exp.restriEquation);\r\n                if (point) { points.push(point) }\r\n\r\n            }else{\r\n                //Solo corta en Y\r\n                let point = getPointAxFromExpY(exp.restriEquation);\r\n                if (point) { points.push(point) }\r\n            }\r\n        })\r\n\r\n        //Analizamos los cortes de las Rectas de Restricciones.\r\n        expresiones.forEach( exp1 => {\r\n            //Validamos cada unas de las Rectas con las demas.\r\n            expresiones.forEach( exp2 => {\r\n                //Verificamos que no sea la misma recta.\r\n                if( exp1 !== exp2 ) {\r\n                    let point = getPointFromTwoExp(exp1,exp2);\r\n                    if (point) {points.push(point)}\r\n                } \r\n            })\r\n        });\r\n\r\n        //Debemos eliminar el punto optimo para que no se imprima en las marcas simples.\r\n        if( Object.entries(solSet).length ){ points.shift() }\r\n        return points\r\n    }\r\n\r\n  \r\n    \r\n    //Funcion que se encarga de devolverme la tabla.\r\n    getTableResult = (points,coeficientes) =>\r\n        <Table>\r\n            <thead><tr><th>Punto</th><th>Resultado</th><th>X0</th><th>X1</th></tr></thead>\r\n            <tbody>{points.map(point => <tr key={'T-P-'+point.P}><td>P:{point.P}</td><td>{coeficientes.x*point.x + coeficientes.y*point.y}</td><td>{point.x}</td><td>{point.y}</td></tr>)}</tbody>\r\n        </Table>\r\n     \r\n    //Funcion que encarga de ocultar la descripcion del punto.  \r\n    hidePoint = () => this.setState({value: null})\r\n\r\n    //Funcion que se encarga de mostrar la descripcion del punto.\r\n    showPoint = value => this.setState({ value })\r\n\r\n\r\n    mapperLinesSeries = (lines,referencias) => \r\n        lines.map((data,index) => <LineSeries key={'L-S-A'+index} color={referencias.length > 0 ?referencias[index].color:'red'} data={data}/>)\r\n    \r\n\r\n    render () {\r\n        let {referencias,lines,value,points,optimMark,coefToValueZ} = this.state;\r\n        return( \r\n        <CardBody>\r\n            <Card>\r\n                <CardHeader>Grafico</CardHeader>\r\n                <CardBody>\r\n                    <Row className='mx-auto'>\r\n                        <XYPlot\r\n                            onMouseLeave={() => this.setState({pointer: null})}\r\n                            width={500}\r\n                            height={400}>\r\n                                <HorizontalGridLines/>\r\n                                <VerticalGridLines/>\r\n                                <XAxis title='Variable X0' />\r\n                                <YAxis  title='Variable X1'/>\r\n                                \r\n                                {this.mapperLinesSeries(lines,referencias)}\r\n                            \r\n                                <MarkSeries\r\n                                    onValueMouseOver={this.showPoint}\r\n                                    onValueMouseOut={this.hidePoint}\r\n                                    color={'blue'}\r\n                                    opacity={0.7}\r\n                                    data={points}\r\n                                    />\r\n                                <MarkSeries\r\n                                    onValueMouseOver={this.showPoint}\r\n                                    onValueMouseOut={this.hidePoint}\r\n                                    color={'green'}\r\n                                    data={optimMark}\r\n                                    />\r\n                                {value && <Hint value={value} />} \r\n                        </XYPlot>\r\n                    </Row>\r\n                    <Row className='mx-auto'><DiscreteColorLegend orientation=\"horizontal\" items={referencias}/></Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {this.getTableResult(optimMark.concat(points),coefToValueZ)}\r\n                </CardFooter>\r\n            </Card>\r\n        </CardBody> )\r\n    }\r\n}\r\n\r\nexport default GraphicPresentation;","import React from \"react\";\r\nimport { Card, CardTitle, CardHeader } from \"reactstrap\";\r\nimport solver from \"javascript-lp-solver\";\r\nimport SimplexPresentation from \"./elements/SimplexPresentation\";\r\nimport GraphicPresentation from \"./elements/GraphicPresentation\";\r\n\r\nlet convertAppToModelForSolverPrimal = datosApp => {\r\n  //Obtenemos los Datos de la aplicacion\r\n  let { restricciones, variables, objective, integer } = datosApp;\r\n  variables = variables.filter(item => item.descripcion !== \"\");\r\n  restricciones = restricciones.filter(item => item.descripcion !== \"\");\r\n  //Precargamos el Modelo\r\n  let model = { optimize: \"coeficiente\", opType: \"\", constraints: {}, variables: {}, ints: {} };\r\n\r\n  //Tratamos el objetivo\r\n  model.opType = objective;\r\n\r\n  //Verificamos si se desea PL Entera\r\n  if (integer) {\r\n    variables.forEach(vari => (model.ints[vari.xi] = 1));\r\n  }\r\n  //Tratamos las Variables\r\n  variables.forEach(vari => {\r\n    //Generamos una nueva Variable\r\n    let newVari = {};\r\n    newVari.coeficiente = vari.coeficiente;\r\n    restricciones.forEach(restri => (newVari[\"r\" + restri.ri] = restri.coeficientes[vari.xi]));\r\n    console.log(newVari);\r\n    model.variables[vari.xi] = newVari;\r\n  });\r\n  //Tratamos las Restricciones\r\n  restricciones.forEach(restri => {\r\n    if (restri.eq === \">=\") {\r\n      let res = {};\r\n      res.min = restri.derecha;\r\n      model.constraints[\"r\" + restri.ri] = res;\r\n    } else {\r\n      let res = {};\r\n      res.max = restri.derecha;\r\n      model.constraints[\"r\" + restri.ri] = res;\r\n    }\r\n  });\r\n\r\n  return model;\r\n};\r\n\r\nclass Presentation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { result: false, details: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.status.result) {\r\n      this.calculateResults();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      if (this.props.status.result) {\r\n        this.calculateResults();\r\n      }\r\n    }\r\n  }\r\n\r\n  //Funcion de Calculo del modelo.\r\n  calculateResults = () => {\r\n    //Convertimos la App en Modelo para Solver.js\r\n    let model = convertAppToModelForSolverPrimal(this.props.status);\r\n    console.log(model);\r\n\r\n    //solver.js soluciona y nos devuelve\r\n    let result = solver.Solve(model, false, true);\r\n    console.log(result);\r\n\r\n    this.setState({ result });\r\n  };\r\n\r\n  render() {\r\n    //Obtenemos el resultado almacenado\r\n    let { result } = this.state;\r\n    let printResults;\r\n    if (result.feasible) {\r\n      //Obtenemos las Variables desde las props\r\n      let { variables, restricciones, method } = this.props.status;\r\n      if (method === \"simplex\") {\r\n        if (result.bounded) {\r\n            printResults = <SimplexPresentation variables={variables} restricciones={restricciones} result={result} />\r\n          } \r\n      }else{\r\n            printResults = <GraphicPresentation\r\n                variables={variables}\r\n                restricciones={restricciones}\r\n                graph={this.props.status.result}\r\n                result={ result.bounded ? result.solutionSet : {} }\r\n              />\r\n        }\r\n      }\r\n      \r\n    return (\r\n      <>\r\n        <Card outline color=\"info\" className=\"w-100 mt-3 mx-auto\">\r\n          <CardHeader>\r\n            <CardTitle>\r\n              <h3>\r\n                {result.feasible\r\n                  ? result.bounded ? \"El resultado óptimo de la función objetivo es: \" + result.evaluation\r\n                    : \"Solucion no Acotada\"\r\n                  : \"Solución no Factible\" }\r\n              </h3>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          {result.feasible && printResults}\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Presentation;\r\n","import React from \"react\";\r\nimport { Container, Col, Row, Progress } from \"reactstrap\";\r\nimport ReactWizard from \"react-bootstrap-wizard\";\r\nimport Configuration from \"./Configuration\";\r\nimport Processing from \"./Processing\";\r\nimport Presentation from \"./Presentation\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass LinealProg extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      variables: [{ xi: 0, descripcion: \"\", coeficiente: \"\" }, { xi: 1, descripcion: \"\", coeficiente: \"\" }],\r\n      restricciones: [{ ri: 0, descripcion: \"\", coeficientes: [], eq: \">=\", derecha: \"\" }],\r\n      method: \"graph\",\r\n      objective: \"max\",\r\n      integer: false,\r\n      result: false,\r\n      barProg: 33\r\n    };\r\n  }\r\n  //Esta función maneja el cambio en las restricciones\r\n  handleRestricciones = restricciones => {\r\n    this.setState({ restricciones, result: false });\r\n  };\r\n  //Esta función maneja el cambio en las variables\r\n  handleVariables = variables => {\r\n    this.setState({ variables, result: false });\r\n  };\r\n  //Esta función maneja el cambio del metodo\r\n  handleMethod = method => {\r\n    this.setState({ method, result: false });\r\n  };\r\n  //Esta función maneja el cambio del objetivo de optimización\r\n  handleObjective = objective => {\r\n    this.setState({ objective, result: false });\r\n  };\r\n  toggleInteger = () => this.setState({ integer: !this.state.integer });\r\n  //Esta función guarda el resultado (inutilizada por el momento)\r\n  handleResult = result => {\r\n    this.setState({ result });\r\n  };\r\n  //Esta función habilita el cálculo en el último paso\r\n  lastStep = step => {\r\n    if (step === 2) {\r\n      this.setState({ result: true, barProg: 100 });\r\n    } else {\r\n      this.setState({ result: false, barProg: 66 });\r\n    }\r\n  };\r\n\r\n  finishButtonClick = result => {\r\n    console.log(\"En algún momento va a imprimir resultados\");\r\n  };\r\n\r\n  loadExampleModel = () => {\r\n    let variables = [\r\n      { xi: 0, descripcion: \"Pantalones (u/día)\", coeficiente: 3 },\r\n      { xi: 1, descripcion: \"Camisas (u/día)\", coeficiente: 1 }\r\n    ];\r\n    let restricciones = [\r\n      { ri: 0, descripcion: \"Mano de obra (hs/día)\", coeficientes: [2, 1], eq: \"<=\", derecha: 8 },\r\n      { ri: 1, descripcion: \"Tela (m2)\", coeficientes: [3, 1], eq: \"<=\", derecha: 30 }\r\n    ];\r\n    this.setState({ variables, restricciones, integer: false, method: \"graph\", objective: \"max\" });\r\n  };\r\n\r\n  render() {\r\n    var steps = [\r\n      // this step hasn't got a isValidated() function, so it will be considered to be true\r\n      {\r\n        stepName: \"Configuración del Modelo\",\r\n        component: Configuration,\r\n        stepProps: {\r\n          status: this.state,\r\n          loadExampleModel: this.loadExampleModel,\r\n          handleMethod: this.handleMethod,\r\n          handleVariables: this.handleVariables,\r\n          handleRestricciones: this.handleRestricciones,\r\n          lastStep: this.lastStep,\r\n          toggleInteger: this.toggleInteger,\r\n          handleObjective: this.handleObjective\r\n        }\r\n      },\r\n      {\r\n        stepName: \"Detalles del Modelo\",\r\n        component: Processing,\r\n        stepProps: {\r\n          status: this.state,\r\n          handleVariables: this.handleVariables,\r\n          lastStep: this.lastStep,\r\n          handleRestricciones: this.handleRestricciones\r\n        }\r\n      },\r\n      {\r\n        stepName: \"Presentación de los Resultados\",\r\n        component: Presentation,\r\n        stepProps: {\r\n          status: this.state,\r\n          handleResult: this.handleResult,\r\n          lastStep: this.lastStep\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <Container fluid className=\"App\">\r\n        <Row className=\"\">\r\n          <Col xs={12} md={6} className=\"mx-auto\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\r\n            <Progress animated color=\"blue\" value={this.state.barProg} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6} className=\"my-4 mx-auto\">\r\n            <ReactWizard\r\n              steps={steps}\r\n              title=\"Programación Lineal\"\r\n              progressbar\r\n              headerTextCenter\r\n              validate\r\n              color=\"blue\"\r\n              previousButtonText=\"Volver\"\r\n              nextButtonText=\"Siguiente\"\r\n              nextButtonClasses=\"bg-primary\"\r\n              finishButtonText=\"Imprimir Resultados\"\r\n              finishButtonClick={this.finishButtonClick}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LinealProg;\r\n","import React from \"react\";\r\nimport { Button, Jumbotron, Container, Row, Col, ButtonGroup } from \"reactstrap\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport LinealProg from \"./components/LinealProg\";\r\n\r\nconst LinealProgramacion = () => <LinealProg />;\r\n\r\nconst NoLinealProgramacion = () => (\r\n  <Container fluid className=\"App\">\r\n    <Row className=\"\">\r\n      <Col xs={12} md={6} className=\"mx-auto my-5\">\r\n        <Jumbotron className=\"\">\r\n          <Row>\r\n            <h2>La Programación No-Lineal aún no está disponible.</h2>\r\n          </Row>\r\n          <Row>\r\n            <Link to={\"/\"}>\r\n              <Button className=\"fluid-left\">Volver</Button>\r\n            </Link>\r\n          </Row>\r\n        </Jumbotron>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nconst Index = () => (\r\n  <Container fluid className=\"App\">\r\n    <Row className=\"\">\r\n      <Col xs={12} md={6} className=\"mx-auto my-5\">\r\n        <Jumbotron>\r\n          <Row>\r\n            <h2 className=\"mx-auto\">¡Bienvenido! Seleccione una opción.</h2>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <Link to={\"/linealProg\"}>\r\n                <Button color=\"success\">Programación Lineal </Button>\r\n              </Link>\r\n            </Col>\r\n            <Col>\r\n              <Link to={\"/noLinealProg\"}>\r\n                <Button color=\"success\">Programación No Lineal </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-5\">\r\n            <h5>Colaboradores:</h5>\r\n          </Row>\r\n          <Row>\r\n            <ButtonGroup className=\"mx-auto\">\r\n              <Button outline tag=\"a\" href=\"https://github.com/EdgarCardozo\">\r\n                CE\r\n              </Button>\r\n              <Button outline tag=\"a\" href=\"https://github.com/juliandiazok\">\r\n                DJ\r\n              </Button>\r\n              <Button outline tag=\"a\" href=\"https://github.com/santisolis97\">\r\n                SS\r\n              </Button>\r\n              <Button outline tag=\"a\" href=\"https://github.com/ianv97\">\r\n                VI\r\n              </Button>\r\n              <Button outline tag=\"a\" href=\"https://github.com/santinozaracho\">\r\n                ZS\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Row>\r\n        </Jumbotron>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Route exact path=\"/\" component={Index} />\r\n      <Route path=\"/linealProg\" component={LinealProgramacion} />\r\n      <Route path=\"/noLinealProg/\" component={NoLinealProgramacion} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport './index.css';\r\nimport 'react-vis/dist/style.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}