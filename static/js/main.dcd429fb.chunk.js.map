{"version":3,"sources":["logo.svg","components/Configuration.js","components/elements/Restriccion.js","components/elements/Variable.js","components/Processing.js","components/Presentation.js","components/LinealProg.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Configuration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handlerInputRes","bind","assertThisInitialized","handlerInputVar","handleNewsRes","event","_event$target","target","value","name","variables","status","descripcion","handleVariables","handleNewsVar","method","_event$target2","restricciones","handleRestricciones","filter","element","length","coeficientes","forEach","push","ri","eq","derecha","xi","coeficiente","rest","splice","_this2","variablesToDesc","map","variable","index","react_default","a","createElement","InputGroup","key","InputGroupAddon","addonType","InputGroupText","id","Input","placeholder","aria-label","aria-describedby","onChange","restriccionesToDesc","restriccion","Fragment","Container","Row","Card","className","ButtonGroup","Button","onClick","handleMethod","active","handleObjective","objective","React","Component","Restriccion","handleChangeRestriccion","setState","console","log","thisEq","inputsRestriccions","indx","color","disabled","Variable","handleInputCoeficiente","e","_e$target","getCoeficiente","width","Processing","handleCoeficientefromV","indVariable","elements_Variable","restriccionesInput","elements_Restriccion","Presentation","params","Alert","LinealProg","steps","stepName","component","components_Configuration","components_Processing","components_Presentation","fluid","Col","xs","md","src","logo","alt","height","Progress","animated","dist_default","progressbar","title","headerTextCenter","validate","previousButtonText","nextButtonText","finishButtonClick","App","components_LinealProg","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcd429fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {ButtonGroup, Button, Jumbotron, Container, Row, Col, Card, InputGroup,InputGroupAddon,InputGroupText, Input} from 'reactstrap';\n\n\n\nclass Configuration extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={};\n        this.handlerInputRes=this.handlerInputRes.bind(this);\n        this.handlerInputVar=this.handlerInputVar.bind(this);\n        this.handleNewsRes();\n\n    }\n\n    handlerInputVar (event) {\n        let {value, name} = event.target;\n        let {variables} = this.props.status;\n        variables[name].descripcion = value;\n        this.props.handleVariables(variables);\n        this.handleNewsVar(this.props.status.method)\n    }\n\n    handlerInputRes (event) {\n        let {value, name} = event.target;\n        let {restricciones} = this.props.status;\n        restricciones[name].descripcion = value;\n        this.props.handleRestricciones(restricciones);\n        this.handleNewsRes()\n    }\n\n    handleNewsRes () {\n        let {restricciones} = this.props.status;\n        let counterWitheRes = restricciones.filter( element => element.descripcion.length === 0).length;\n        if (counterWitheRes === 0 ) {\n            let {variables} = this.props.status\n            let coeficientes = [];\n            variables.forEach(variables => coeficientes.push(0))\n            restricciones.push({ri:restricciones.length+1,descripcion:'',coeficientes:coeficientes,eq:'>=',derecha:0})\n            this.props.handleRestricciones(restricciones);\n        }\n    }\n    handleNewsVar (method) { \n        let {restricciones} = this.props.status;\n        let {variables} = this.props.status;\n\n        if (method === 'simplex') {\n            let counterWitheVar = variables.filter( element => element.descripcion.length === 0).length;\n            if (counterWitheVar === 0 ) {  \n                variables.push({xi:variables.length+1,descripcion:'',coeficiente:0})\n                this.props.handleVariables(variables);\n                restricciones.forEach(rest => {\n                    rest.coeficientes.push(0);\n                })\n                this.props.handleRestricciones(restricciones)      \n            }\n        }else{\n            if(variables.length > 2) {     \n                variables.splice(2)\n                this.props.handleVariables(variables);\n\n                restricciones.forEach(rest => {\n                    rest.coeficientes.splice(2);\n                })\n                this.props.handleRestricciones(restricciones)    \n            }\n        }\n        \n\n    }\n    \n    render () {\n        let {variables} = this.props.status;\n        let {restricciones} = this.props.status;\n        let variablesToDesc = variables.map( (variable,index) => {       \n            return(<InputGroup key={index}>\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+variable.xi}</InputGroupText>\n                </InputGroupAddon>\n                    <Input\n                        name={index}\n                        placeholder=\"Descripcion de la Variable\"\n                        aria-label=\"Descripcion\"\n                        aria-describedby=\"variable\"\n                        onChange={this.handlerInputVar}\n                        value={variable.descripcion}\n                        />\n            </InputGroup>)\n        });\n        let restriccionesToDesc = restricciones.map( (restriccion,index) => {\n            return(<InputGroup key={index}>\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\"+restriccion.ri}</InputGroupText>\n                </InputGroupAddon>\n                    <Input\n                        name={index}\n                        placeholder=\"Descripcion de la Restriccion\"\n                        aria-label=\"Descripcion\"\n                        aria-describedby=\"restriccion\"\n                        onChange={this.handlerInputRes}\n                        value={restriccion.descripcion}\n                        />\n                 \n            </InputGroup>)\n        });\n        return(\n            <>\n                <h3>Comenzamos Configurando nuestro Modelo:</h3>\n                <Container>\n                    <Row>         \n                            <Card className=\"mx-auto\">\n                                <p>Metodo a Utilizar:</p>\n                                <ButtonGroup>\n                                    <Button onClick={() => {this.props.handleMethod('graph');this.handleNewsVar('graph')}} active={this.props.status.method === 'graph'}>\n                                        GRAFICO\n                                    </Button>\n                                    <Button onClick={() => {this.props.handleMethod('simplex');this.handleNewsVar('simplex')}} active={this.props.status.method === 'simplex'}>\n                                        SIMPLEX\n                                    </Button>\n                                </ButtonGroup>\n                            \n                            </Card>              \n                            <Card className=\"mx-auto\">\n                                <p>Tipo de Optimizacion:</p>\n                                <ButtonGroup>\n                                    <Button onClick={() => this.props.handleObjective('max')} active={this.props.status.objective === 'max'}>\n                                        Maximizacion\n                                    </Button>\n                                    <Button onClick={() => this.props.handleObjective('min')} active={this.props.status.objective === 'min'}>\n                                        Minimizacion\n                                    </Button>\n                                </ButtonGroup>\n                            </Card>\n                    </Row>\n                    <Row>\n                        <Card className=\"w-100 mt-3\">       \n                            <h5>Variables:</h5>\n                            {variablesToDesc}\n                        </Card>\n                    </Row>\n                    <Row>\n                        <Card className=\"w-100 mt-3\">\n                            <h5>Restricciones:</h5>\n                            {restriccionesToDesc}\n                        </Card>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default Configuration;","import React from 'react';\nimport {Button,InputGroupText, InputGroup, Input,InputGroupAddon, ButtonGroup} from 'reactstrap';\n\n\n\nclass Restriccion extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={coeficientes:[0,0]};\n        this.handleChangeRestriccion=this.handleChangeRestriccion.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({coeficientes:this.props.restriccion.coeficientes,\n            derecha:this.props.restriccion.derecha,\n            eq:this.props.restriccion.eq,\n            descripcion:this.props.restriccion.descripcion})\n\n    }\n\n    handleChangeRestriccion(){\n        console.log(\"change\");\n        \n    }\n\n\n    render () {\n        let {coeficientes} = this.state\n        console.log(coeficientes);\n        let thisEq = this.props.restriccion.eq;\n        \n        let inputsRestriccions = coeficientes.map((coeficiente,indx) => {\n            return(<>\n                <Input key={'C'+indx}\n                    name={indx}\n                    placeholder=\"Coefiente\"\n                    onChange={this.handleChangeRestriccion}\n                    value={coeficiente}\n                    />\n                {indx === coeficientes.length-1 ? (\n                    <ButtonGroup key={'Eq0'}name=\"Inecuation\">\n                        <Button color={thisEq === '<=' ? \"primary\":\"secondary\" }>{'<='}</Button>\n                        <Button disabled color={thisEq === '=' ? \"primary\":\"secondary\" }>{'='}</Button>\n                        <Button color={thisEq === '>=' ? \"primary\":\"secondary\" }>{'>='}</Button>\n                  </ButtonGroup>\n                ):(\n                    <InputGroupText key={'+'+indx}>+</InputGroupText>\n                )}\n                </>\n                )\n        })\n        return(\n            <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText key='Rindx'>{\"R\"+this.props.restriccion.ri}</InputGroupText>\n                        <InputGroupText key='Rdesc'>{\"R\"+this.props.restriccion.descripcion}</InputGroupText>\n                    </InputGroupAddon>\n                    {inputsRestriccions}\n                    <Input key={'C'+coeficientes.length}\n                            className='InputCoe'\n                            name={'Derecha'}\n                            placeholder=\"Coe\"\n                            aria-label=\"Coe\"\n                            aria-describedby=\"restriccion\"\n                            onChange={this.handleChangeRestriccion}\n                            value={this.props.restriccion.derecha}\n                            />\n            </InputGroup>\n            )\n        }\n}\n\nexport default Restriccion;","import React from 'react';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap'\n\n\nclass Variable extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={};\n        this.handleInputCoeficiente=this.handleInputCoeficiente.bind(this)\n    }\n    handleInputCoeficiente (e) {\n        let {name,value} = e.target;\n        this.props.getCoeficiente(name,value)\n    }\n\n    render () {\n        return(\n            <InputGroup key={this.props.variable.xi}>\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+this.props.variable.xi}</InputGroupText>\n                    <InputGroupText name=\"description\" id=\"variable\">{this.props.variable.descripcion}</InputGroupText>\n                </InputGroupAddon>\n                \n                <Input width='10px'\n                            name={this.props.variable.xi}\n                            className='InputCoe'\n                            placeholder=\"Coef\"\n                            aria-label=\"Coeficiente\"\n                            aria-describedby=\"coe\"\n                            onChange={this.handleInputCoeficiente}\n                            value={this.props.variable.coeficiente}\n                            />\n                        \n            </InputGroup>\n        )\n    }\n}\n\nexport default Variable;","import React from 'react';\nimport {Button, Jumbotron, Container, Row, Col, Card} from 'reactstrap';\nimport Restriccion from './elements/Restriccion';\nimport Variable from './elements/Variable';\n\n\n\nclass Processing extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={};\n        this.handleCoeficientefromV=this.handleCoeficientefromV.bind(this);\n        this.handlerInputRes=this.handlerInputRes.bind(this);\n        this.handlerInputVar=this.handlerInputVar.bind(this);\n\n    }\n\n\n    handlerInputVar (event) {\n        let {value, name} = event.target;\n        \n    }\n\n    handlerInputRes (event) {\n        let {value, name} = event.target;\n        let {restricciones} = this.props.status;\n        restricciones[name] = value;\n        this.props.handleRestricciones(restricciones);\n    }\n    //En el Siguiente Handler, Se toma del input de una variable en particular el coeficiente.\n    handleCoeficientefromV(indVariable,coeficiente) {\n        let {variables} = this.props.status;\n        variables[indVariable-1].coeficiente = coeficiente;\n        this.props.handleVariables(variables);\n    }\n\n    render() {\n        //Obtenemos las propiedades del Super\n        let {variables} = this.props.status;        \n        let {restricciones} = this.props.status;\n        console.log(restricciones);\n\n        //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n        let variablesToDesc = variables.map( (variable,index) => {       \n            return(<Variable key={'V'+index} getCoeficiente={this.handleCoeficientefromV} variable={variable}/>)\n        });\n\n        let restriccionesInput = restricciones.map((restriccion,index) => {\n            return(<Restriccion key={'R'+index} restriccion={restriccion} />)\n        });\n        \n        return(\n            <>\n            <h3>Cargamos los datos de nuestro Modelo:</h3>\n            <Container>\n                <Row>\n                    <Card className=\"w-100 mt-3\">       \n                        <h5>Variables:</h5>\n                        {variablesToDesc}\n                    </Card>\n                </Row>\n                <Row>\n                    <Card className=\"w-100 mt-3\">\n                        <h5>Restricciones:</h5>\n                        {restriccionesInput}                        \n                    </Card>\n                </Row>\n            </Container>\n            </>\n        )\n    }\n}\n\nexport default Processing;","import React from 'react';\nimport {Alert} from 'reactstrap';\n\nclass Presentation extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={\n            params:\"\"\n        }\n\n    }\n    render () {\n        return(\n            <Alert color=\"warning\">HELLO PRESENETATIOANON</Alert>\n\n        )\n    }\n}\n\nexport default Presentation;","import React from 'react';\nimport { Container,Col,Row,Progress,Jumbotron,Button } from \"reactstrap\";\nimport ReactWizard from 'react-bootstrap-wizard';\nimport  Configuration  from \"./Configuration\";\nimport  Processing  from \"./Processing\";\nimport  Presentation  from \"./Presentation\";\nimport logo from '../logo.svg';\nimport StepWizard from 'react-step-wizard';\n\n\n\nclass LinealProg extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={\n            variables:[{xi:1, descripcion:'',coeficiente:0},{xi:2,descripcion:'',coeficiente:0}],\n            restricciones:[],\n            method:\"graph\",\n            objective:\"max\"\n        };\n        this.handleRestricciones=this.handleRestricciones.bind(this)\n        this.handleVariables=this.handleVariables.bind(this)\n        this.handleObjective=this.handleObjective.bind(this)\n        this.handleMethod=this.handleMethod.bind(this)\n    }\n\n    handleRestricciones (restricciones) {\n        console.log(restricciones);\n        this.setState({restricciones}); \n    }\n\n    handleVariables (variables) {\n        this.setState({variables}); \n    }\n    \n    handleMethod (method) {\n        this.setState({method}); \n    }\n\n    handleObjective (objective) {\n        this.setState({objective})\n    }\n  \n    render () {\n        var steps = [\n            // this step hasn't got a isValidated() function, so it will be considered to be true\n            { stepName: \"Configuracion del Modelo\", \n            component:<Configuration status={this.state} \n            handleMethod={this.handleMethod}\n            handleVariables={this.handleVariables}\n            handleRestricciones={this.handleRestricciones}\n            handleObjective={this.handleObjective} />},\n            // this step will be validated to false\n            { stepName: \"Detalles del Modelo\",\n            component:<Processing status={this.state} \n            handleMethod={this.handleMethod}\n            handleVariables={this.handleVariables}\n            handleRestricciones={this.handleRestricciones}\n            handleObjective={this.handleObjective} />\n        },\n            // this step will never be reachable because of the seconds isValidated() steps function that will always return false\n            { stepName: \"Presentacion de los Resultados\",\n            component:<Presentation status={this.state} \n            handleMethod={this.handleMethod}\n            handleVariables={this.handleVariables}\n            handleRestricciones={this.handleRestricciones}\n            handleObjective={this.handleObjective} />\n        }\n          ];        \n        return(\n            <Container fluid className=\"App\">\n                <Row className=\"\">\n                    <Col xs={12} md={6}  className=\"mx-auto\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n                        <Progress  animated color=\"success\" value=\"25\" />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} md={6}  className=\"mt-3 mx-auto\">\n                        <ReactWizard\n                            progressbar\n                            steps={steps}\n                            title=\"Programacion Lineal\"\n                            headerTextCenter\n                            validate\n                            color=\"blue\"\n                            previousButtonText=\"Volver\"\n                            nextButtonText=\"Siguiente\"\n                            finishButtonClick={this.finishButtonClick}\n                            />\n                     \n                    </Col>                        \n                </Row>\n\n            </Container>\n\n        )\n    }\n}\n\nexport default LinealProg;","import React from 'react';\nimport  LinealProg  from \"./components/LinealProg\";\n\nfunction App() {\n  return (\n    <LinealProg></LinealProg>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}