{"version":3,"sources":["components/Configuration.js","components/elements/Restriccion.js","components/elements/FuncionObj.js","components/Processing.js","components/Presentation.js","components/LinealProg.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Configuration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerInputVar","event","_event$target","target","value","name","variables","status","xi","descripcion","splice","handleVariables","handleNewsVar","method","handlerInputRes","_event$target2","restricciones","ri","handleRestricciones","handleNewsRes","filter","element","length","push","coeficientes","eq","derecha","coeficiente","state","faltaDescrip","prevProps","_this$props$status","variablesDescriptionsMin","va","restriccionesDescriptionsMin","re","lastStep","setState","_this2","variablesARenderizar","map","variable","index","react_default","a","createElement","InputGroup","className","id","key","InputGroupAddon","addonType","InputGroupText","Input","placeholder","aria-label","aria-describedby","onChange","UncontrolledTooltip","trigger","placement","restriccionesARenderizar","restriccion","buttonsMethods","ButtonGroup","Button","outline","onClick","handleMethod","active","color","buttonsOptType","handleObjective","objective","Fragment","Container","Row","Col","Card","CardHeader","CardBody","integer","toggleInteger","loadExampleModel","UncontrolledPopover","PopoverBody","CardTitle","Alert","React","Component","Restriccion","cantVariables","diferencia","thisEq","botoneraMaxMin","e","handleCoefRes","disabled","inputsRestriccions","indx","type","FuncionObj","variablesToFunction","vari","handleCoefVar","toUpperCase","Processing","parseInt","console","log","listDescriptionsVarItems","array","item","ListGroupItem","Badge","listDescriptionsResItems","faltaCoe","references","every","varsOperativas","restriccionesInput","elements_Restriccion","size","Collapse","isOpen","ListGroup","elements_FuncionObj","convertAppToModelForSolverPrimal","datosApp","model","optimize","opType","constraints","ints","forEach","newVari","restri","res","min","max","Presentation","calculateResults","result","solver","Solve","tablaDeRecursos","cantUsoVar","resultDual","impresionDeResultados","feasible","CardText","solutionSet","CardFooter","evaluation","LinealProg","handleResult","step","barProg","finishButtonClick","steps","stepName","component","stepProps","fluid","xs","md","src","logo","alt","height","Progress","animated","dist_default","title","progressbar","headerTextCenter","validate","previousButtonText","nextButtonText","finishButtonText","LinealProgramacion","components_LinealProg","NoLinealProgramacion","Jumbotron","react_router_dom","to","Index","tag","href","App","basename","process","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9ae160e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {ButtonGroup, Button, Container, Row,Col, Card,CardBody,CardHeader,CardTitle,Alert,InputGroup,InputGroupAddon,InputGroupText, Input,UncontrolledTooltip,UncontrolledPopover,PopoverBody,PopoverHeader} from 'reactstrap';\r\n\r\n\r\n\r\nclass Configuration extends React.Component{\r\n    constructor (props){\r\n        super(props);\r\n        this.state={faltaDescrip:''};\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleNewsRes()\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps!==this.props) {\r\n            this.handleNewsRes()\r\n        }\r\n    }\r\n    //Funcion que permite validar si se ingresaron todos los cambios correspondientes en la etapa\r\n    isValidated(){\r\n        let {variables,restricciones} = this.props.status;\r\n        let variablesDescriptionsMin = variables.filter( va => va.descripcion !== '');\r\n        let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !=='')\r\n        if (variablesDescriptionsMin.length > 1 &  restriccionesDescriptionsMin.length > 0 ) { \r\n            this.props.lastStep(1)\r\n            this.setState({faltaDescrip:''});\r\n            return true\r\n        }else {\r\n\r\n            if (variablesDescriptionsMin < 2 ){\r\n                this.setState({faltaDescrip:'Dale no seas Guampa poneme como minimo 2 variables'});\r\n                \r\n            }else{\r\n                this.setState({faltaDescrip:'Poneme Alguna Restri pue '});\r\n            }\r\n           \r\n            return false\r\n        }\r\n    }\r\n    //Funcion que se encarga de manejar las modificaciones en las variables.\r\n    handlerInputVar = event => {\r\n        let {value, name} = event.target;\r\n        let {variables} = this.props.status;\r\n        //Asignamos Valor y reasignamos el indice\r\n        variables[name].xi = name; \r\n        variables[name].descripcion = value;\r\n        if (name>1 && value ==='') {\r\n            //Si la desc esta vacia eliminamos la variable\r\n            variables.splice(name,1)\r\n        }\r\n        //Pasasamos al Padre los cambios realizados en la variable\r\n        this.props.handleVariables(variables);\r\n        //llamamos a la funcion que se encarga de generar nuevas variables.\r\n        this.handleNewsVar(this.props.status.method)      \r\n    }\r\n    //Funcion que se encarga de manejar las modificaciones de restricciones.\r\n    handlerInputRes = event => {\r\n        let {value, name} = event.target;\r\n        let {restricciones} = this.props.status;\r\n        //Asignamos el nuevo cambio \r\n        restricciones[name].ri = name \r\n        restricciones[name].descripcion = value;\r\n        if (value === '') {\r\n            //si el cambio es dejarla vacia entonces eliminamos la restriccion\r\n            restricciones.splice(name,1);     \r\n        }\r\n        //pedimos al padre que almacene los cambios\r\n        this.props.handleRestricciones(restricciones);\r\n        //Llamamos a generar si corresponde nueva restriccion\r\n        this.handleNewsRes()\r\n    }\r\n    //Funcion que se encarga de Añadir una restriccion si es necesario.\r\n    handleNewsRes = () => {\r\n        let {restricciones} = this.props.status;\r\n        //Contador de Rescciones sin descripciones.\r\n        let counterWitheRes = restricciones.filter( element => element.descripcion.length === 0).length;\r\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\r\n        if (counterWitheRes === 0 ) {\r\n            restricciones.push({ri:restricciones.length,descripcion:'',coeficientes:[],eq:'>=',derecha:''})\r\n            this.props.handleRestricciones(restricciones);\r\n        }\r\n    }\r\n    //Funcion que se encarga de Añadir una Variable si es necesario.\r\n    handleNewsVar = method => {\r\n        let {variables} = this.props.status;\r\n        if (method === 'simplex') {\r\n            //Si el metodo es Simplex, se permite agregar mas de dos variables.\r\n            let counterWitheVar = variables.filter( element => element.descripcion.length === 0).length;\r\n            //Si la cantidad de Variables Libres es igual a 0 se agrega una mas.\r\n            if (counterWitheVar === 0 ) {  \r\n                variables.push({xi:variables.length,descripcion:'',coeficiente:''})\r\n                this.props.handleVariables(variables);    \r\n            }\r\n        }else{\r\n            //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que este de mas.\r\n            if(variables.length > 2) {     \r\n                variables.splice(2)\r\n                this.props.handleVariables(variables);\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n    render () {\r\n        //Obtenemos de las props, las varaibles y restricciones.\r\n        let {variables} = this.props.status;\r\n        let {restricciones} = this.props.status;\r\n        // Generamos los inputs para las Variables\r\n        let variablesARenderizar = variables\r\n        .map( (variable,index) => \r\n                <InputGroup className=\"mt-1\"  id={'XTT'+index} key={'VTD'+index}>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+index}</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input  \r\n                        name={index}\r\n                        placeholder=\"Descripcion de la Variable\"\r\n                        aria-label=\"Descripcion\"\r\n                        aria-describedby=\"variable\"\r\n                        onChange={this.handlerInputVar}\r\n                        value={variable.descripcion}/>\r\n                    <UncontrolledTooltip trigger='focus hover click' placement=\"auto\" target={'XTT'+index}>\r\n                        Aqui debes ingresar el significado de la Variable.\r\n                    </UncontrolledTooltip>\r\n                </InputGroup>);\r\n        //Generamos los imputs para las restricciones\r\n        let restriccionesARenderizar = restricciones\r\n        .map( (restriccion,index) => \r\n                <InputGroup className=\"mt-1\" id={\"TTR\"+index} key={'RTD'+index}>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\"+index}</InputGroupText>\r\n                    </InputGroupAddon>\r\n                        <Input\r\n                            name={index}\r\n                            placeholder=\"Descripcion de la Restriccion\"\r\n                            aria-label=\"Descripcion\"\r\n                            aria-describedby=\"restriccion\"\r\n                            onChange={this.handlerInputRes}\r\n                            value={restriccion.descripcion}/>\r\n                    <UncontrolledTooltip trigger='hover' placement=\"auto\" target={'TTR'+index}>\r\n                        Aqui, debes ingresar el significado de la restriccion.\r\n                    </UncontrolledTooltip>      \r\n                </InputGroup>);\r\n        let buttonsMethods = (<ButtonGroup id='ButtUtil'> \r\n                                <Button outline onClick={() => {this.props.handleMethod('graph');this.handleNewsVar('graph')}} \r\n                                        active={this.props.status.method === 'graph'}\r\n                                        color='primary'>\r\n                                    GRAFICO\r\n                                </Button>\r\n                                <Button outline onClick={() => {this.props.handleMethod('simplex');this.handleNewsVar('simplex')}} \r\n                                        active={this.props.status.method === 'simplex'}\r\n                                        color='primary'>\r\n                                    SIMPLEX\r\n                                </Button>\r\n                            </ButtonGroup>)\r\n        let buttonsOptType = (<ButtonGroup>\r\n                                <Button outline \r\n                                        onClick={() => this.props.handleObjective('max')} \r\n                                        active={this.props.status.objective === 'max'}\r\n                                        color='primary'>\r\n                                    Maximizacion\r\n                                </Button>\r\n                                <Button outline \r\n                                        onClick={() => this.props.handleObjective('min')} \r\n                                        active={this.props.status.objective === 'min'}\r\n                                        color='primary'>\r\n                                    Minimizacion\r\n                                </Button>\r\n                            </ButtonGroup>)\r\n       \r\n       return(\r\n            <>\r\n                <h3>Comenzamos configurando nuestro Modelo:</h3>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card outline color='secondary' id='CardUtil' className=\"mt-2 mx-auto\">\r\n                                <CardHeader>Programacion Entera:</CardHeader>\r\n                                <CardBody><Button outline color={this.props.status.integer ? 'success':'danger'}\r\n                                            onClick={() => this.props.toggleInteger()}>\r\n                                    {this.props.status.integer ? 'Activado':'Desactivado'}</Button>\r\n                                </CardBody>            \r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card outline color='secondary' id='CardModel' className=\"mt-2 mx-auto\">\r\n                                <CardHeader>Modelo de Ejemplo:</CardHeader>\r\n                                <CardBody><Button color='warning' \r\n                                            outline \r\n                                            onClick={this.props.loadExampleModel}>Cargar Modelo de Ejemplo</Button>\r\n                                </CardBody>            \r\n                            </Card>\r\n                        </Col>  \r\n                         \r\n                        \r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <UncontrolledPopover placement=\"top\" target='CardUtil'>\r\n                                    <PopoverBody>Aqui debes seleccionar el metodo de Calculo y Visualizacion de los Resultados</PopoverBody>\r\n                            </UncontrolledPopover>       \r\n                            <Card outline color='secondary' id='CardUtil' className=\"mt-3 mx-auto\">\r\n                                \r\n                                <CardHeader>Metodo a Utilizar:</CardHeader>\r\n                                <CardBody>{buttonsMethods}</CardBody>            \r\n                            </Card>  \r\n                        </Col>     \r\n                       \r\n                        <Col>\r\n                            <UncontrolledPopover placement=\"top\" target='CardOpt'>\r\n                                    <PopoverBody>Y aqui, el tipo de Optimizacion que deseas realizar, si deseas Maximizar tu funcion o Minimizarla</PopoverBody>\r\n                            </UncontrolledPopover> \r\n                            <Card outline color='secondary' id='CardOpt' className=\"mt-3 mx-auto\">\r\n                                \r\n                                <CardHeader>Tipo de Optimizacion:</CardHeader>\r\n                                <CardBody>{buttonsOptType}</CardBody>  \r\n                            </Card>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                        <Card outline color='secondary' id='CardVariables' className=\"w-100 mt-3 mx-auto\">\r\n                            <CardHeader><CardTitle className=\"text-left\" ><h4>Variables:</h4></CardTitle></CardHeader>       \r\n                            <CardBody>\r\n                                {variablesARenderizar}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                        <Card outline color='secondary' id='CardRestri' className=\"w-100 mt-3 mx-auto\">\r\n                            <CardHeader><CardTitle className=\"text-left\" ><h4>Restricciones:</h4></CardTitle></CardHeader>       \r\n                            <CardBody>\r\n                                {restriccionesARenderizar}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Row>\r\n                    {this.state.faltaDescrip !== '' && \r\n                        <Row className=\"mt-3\">\r\n                            <Alert className=\"mx-auto\" color=\"danger\">{this.state.faltaDescrip}</Alert>\r\n                        </Row>}\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration;","import React from 'react';\r\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup,UncontrolledTooltip} from 'reactstrap';\r\n\r\nconst Restriccion = props => {\r\n    let {coeficientes} = props.restriccion;\r\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\r\n    if (coeficientes.length !== props.cantVariables) {\r\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \r\n        let diferencia = props.cantVariables - coeficientes.length;\r\n        if ( diferencia > 0 ) {\r\n            for (let index = 0; index < diferencia; index++) {\r\n                coeficientes.push('')       \r\n            }\r\n        }else {\r\n            coeficientes.splice(props.cantVariables)\r\n        }\r\n    }\r\n\r\n    let thisEq = props.restriccion.eq;\r\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\r\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \r\n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \r\n                                        value='<='>{'<='}</Button>\r\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \r\n                                        disabled \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \r\n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \r\n                                        value='='>{'='}</Button>\r\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \r\n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \r\n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \r\n                                        value='>='>{'>='}</Button>\r\n                                </ButtonGroup>);\r\n    let inputsRestriccions = coeficientes\r\n    .map((coeficiente,indx) => \r\n        <>\r\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\r\n                type=\"number\"\r\n                name={indx}\r\n                placeholder=\"Coefiente\"\r\n                className=\"InputCoeficiente\"\r\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\r\n                value={coeficiente}\r\n                />\r\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\r\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\r\n            </InputGroupAddon>\r\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\r\n        </>\r\n            \r\n    )\r\n\r\n    return(\r\n        <Card key={'CR'+props.restriccion.ri} id={'CR'+props.restriccion.ri}>\r\n            <UncontrolledTooltip key={'TTCR'+props.restriccion.ri} placement='auto' target={'CR'+props.restriccion.ri}>\r\n            {'Aqui debes ingresar los coeficiente de '+props.restriccion.descripcion}\r\n            </UncontrolledTooltip>\r\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\r\n            <CardBody className=\"p-0 my-1 mx-auto\">\r\n                <InputGroup key={'RT'+props.restriccion.ri}>\r\n                    {inputsRestriccions}\r\n                    {botoneraMaxMin}\r\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\r\n                            type=\"number\"\r\n                            name={'derecha'}\r\n                            placeholder=\"Coe\"\r\n                            className=\"InputCoeficiente\"\r\n                            aria-label=\"Coe\"\r\n                            aria-describedby=\"restriccion\"\r\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\r\n                            value={props.restriccion.derecha}/>\r\n                </InputGroup>\r\n            </CardBody>\r\n        </Card>)\r\n    \r\n}\r\n\r\nexport default Restriccion;","import React from 'react';\r\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, UncontrolledTooltip } from 'reactstrap'\r\n\r\n\r\nconst FuncionObj = props => {\r\n    let {variables} = props\r\n    let variablesToFunction = variables\r\n    .filter(vari => vari.descripcion !== '')\r\n    .map( (vari,index) => \r\n\r\n        <>\r\n            <UncontrolledTooltip key={'TTV'+index} placement='auto' target={'IF'+index}>\r\n            {'Aqui debes ingresar el coeficiente de '+vari.descripcion}\r\n            </UncontrolledTooltip>\r\n            <Input key={'IF'+index}\r\n                    id={'IF'+index}\r\n                        type='number'\r\n                        name={vari.xi}\r\n                        placeholder=\"Coef\"\r\n                        className=\"InputCoeficiente\"\r\n                        aria-label=\"Coeficiente\"\r\n                        aria-describedby=\"coe\"\r\n                        onChange={ e => props.handleCoefVar(e)}\r\n                        value={vari.coeficiente}\r\n                        />\r\n            <InputGroupAddon key={'ADDIF'+index} addonType=\"append\">\r\n                <InputGroupText key={'IFD'+index}>{\"X\"+vari.xi}</InputGroupText>\r\n            </InputGroupAddon>\r\n            {index < variables.filter(vari => vari.descripcion !== '').length-1 && <InputGroupText key={'+IF'+index}>+</InputGroupText>}\r\n        </>) \r\n\r\n    return(\r\n            <InputGroup key={'INPUTFUNCIONAL'}>\r\n                {variablesToFunction}\r\n                <InputGroupText className='mx-1' key='IFOPT'>{' => '+props.objective.toUpperCase()}</InputGroupText>\r\n            </InputGroup>\r\n    \r\n    ) \r\n}\r\n\r\nexport default FuncionObj;","import React from 'react';\r\nimport {Container, Row, Card,CardBody,CardHeader,CardTitle,Alert,Button,Col,Collapse,ListGroup,ListGroupItem,Badge} from 'reactstrap';\r\nimport Restriccion from './elements/Restriccion';\r\nimport FuncionObj from './elements/FuncionObj';\r\n\r\n\r\n\r\nclass Processing extends React.Component{\r\n    constructor (props){\r\n        super(props);\r\n        this.state={faltaCoe:'',references:false};\r\n\r\n    }\r\n\r\n    isValidated() {\r\n        //Verificando si los coeficientes de las variables no son nulos\r\n        let verifQty = this.props.status.variables\r\n        .filter(va => va.descripcion !== '')\r\n        .every( va => va.coeficiente !== '')\r\n        if (verifQty) {\r\n            this.props.lastStep(2);\r\n            this.setState({faltaCoe:''})\r\n            return true\r\n        }else{\r\n            this.setState({faltaCoe:'Rellename pue todos los Coeficientes no seas Guampa'})\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    //En el Siguiente Handler, Se toma del input de una variable en particular el coeficiente.\r\n    handleCoefVar = event => {        \r\n        let {value, name} = event.target;\r\n        if (value) {\r\n            let {variables} = this.props.status;\r\n            variables[name].coeficiente = parseInt(value);\r\n            this.props.handleVariables(variables);\r\n            console.log(this.props.status.variables);\r\n        }\r\n    }\r\n\r\n    handleCoefRes = (event,ri) => {\r\n        let {name,value } = event.target\r\n        let {restricciones} = this.props.status;\r\n        console.log('En la Res:'+ri+', en el campo:'+name+',con el valor:'+value);\r\n        \r\n        switch (name) {\r\n            case 'derecha':\r\n                    restricciones[ri].derecha = parseInt(value)\r\n                break;\r\n            case 'eq':\r\n                    restricciones[ri].eq = value\r\n                break;\r\n            default:\r\n                    restricciones[ri].coeficientes[name]= parseInt(value)\r\n                break;\r\n        }\r\n        console.log(restricciones);\r\n        this.props.handleRestricciones(restricciones);\r\n    }\r\n\r\n    listDescriptionsVarItems = array => array.filter(item => item.descripcion !== '')\r\n        .map(item => <ListGroupItem key={'DLGIV'+item.xi} className=\"justify-content-between\"><Badge>{'X'+item.xi}</Badge>{' '+item.descripcion}</ListGroupItem>)\r\n    \r\n    listDescriptionsResItems = array => array.filter(item => item.descripcion !== '')\r\n        .map(item => <ListGroupItem key={'DLGIR'+item.ri} className=\"justify-content-between\"><Badge>{'R'+item.ri}</Badge>{' '+item.descripcion}</ListGroupItem>)\r\n    \r\n\r\n\r\n    render() {\r\n        //Obtenemos las propiedades del Super\r\n        let {variables} = this.props.status;        \r\n        let {restricciones} = this.props.status;\r\n        let varsOperativas = variables.filter(va => va.descripcion !== '').length;\r\n\r\n        //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\r\n\r\n        let restriccionesInput = restricciones\r\n        .filter(item => item.descripcion !== '')\r\n        .map( (restriccion,index) =>\r\n                <Restriccion className=\"mt-1\" \r\n                key={'R'+index} \r\n                handleCoefRes={this.handleCoefRes} \r\n                cantVariables={varsOperativas} \r\n                restriccion={restriccion}/>);\r\n        \r\n        return(\r\n            <>\r\n            <h3>Cargamos los datos de nuestro Modelo:</h3>\r\n            <Container>\r\n                <Row>\r\n                    <Card outline color='secondary' className=\"w-100 mt-3\">\r\n                            <CardHeader>\r\n                                <Row>\r\n                                    <Col className=\"text-left\"><CardTitle><h4>Referencias:</h4></CardTitle></Col>\r\n                                    <Col><Button outline size='sm'\r\n                                        onClick={() => this.setState({references:!this.state.references})} \r\n                                        color={!this.state.references ? 'success':'danger'}>{!this.state.references ? 'Ver Referencias':'Ocultar Referencias'}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardHeader>\r\n                            <Collapse isOpen={this.state.references}>\r\n                                <CardBody>\r\n                                    <h5 className='text-left'>Variables:</h5>\r\n                                    <ListGroup>\r\n                                        {this.listDescriptionsVarItems(variables)}\r\n                                    </ListGroup>\r\n                                    <h5 className='text-left'>Restricciones:</h5>\r\n                                    <ListGroup>\r\n                                        {this.listDescriptionsResItems(restricciones)}\r\n                                    </ListGroup>\r\n                                                                    \r\n                                </CardBody>\r\n                            </Collapse>                       \r\n                    </Card>\r\n                </Row>\r\n                <Row>\r\n                    <Card outline color='secondary' className=\"w-100 mt-3\">\r\n                        <CardHeader><CardTitle className=\"text-left\"><h4>Funcion Objetivo:</h4></CardTitle></CardHeader>       \r\n                        <CardBody className=\"mx-auto\">\r\n                            <FuncionObj variables={variables} handleCoefVar={this.handleCoefVar} objective={this.props.status.objective}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Row>\r\n                <Row>\r\n                    <Card outline color='secondary' className=\"w-100 mt-3\">\r\n                        <CardHeader><CardTitle className=\"text-left\"><h4>Restricciones:</h4></CardTitle></CardHeader>       \r\n                        <CardBody>\r\n                            {restriccionesInput}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Row>\r\n                {this.state.faltaCoe !== '' && \r\n                        <Row className=\"mt-3\">\r\n                            <Alert className=\"mx-auto\" color=\"danger\">{this.state.faltaCoe}</Alert>\r\n                        </Row>}\r\n            </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Processing;","import React from 'react';\r\nimport {Card,CardTitle,CardBody,CardText,CardHeader,Table,CardFooter,Row} from 'reactstrap';\r\nimport solver from 'javascript-lp-solver';\r\n\r\nlet convertAppToModelForSolverPrimal = datosApp => {\r\n    //Obtenemos los Datos de la aplicacion\r\n    let {restricciones,variables,objective,integer} = datosApp;\r\n    variables = variables.filter(item => item.descripcion !== '');\r\n    restricciones = restricciones.filter(item => item.descripcion !== '');\r\n    //Precargamos el Modelo\r\n    let model = {optimize:'coeficiente',opType:'',constraints:{},variables:{},ints:{}};\r\n    \r\n    //Tratamos el objetivo\r\n    model.opType = objective;\r\n\r\n    //Verificamos si se desea PL Entera\r\n    if (integer) {\r\n        variables.forEach(vari => model.ints[vari.xi]=1)\r\n    }    \r\n    //Tratamos las Variables\r\n    variables.forEach( vari => {  \r\n            //Generamos una nueva Variable\r\n            let newVari = {};\r\n            newVari.coeficiente = vari.coeficiente;\r\n            restricciones.forEach(restri =>\r\n                    newVari['r'+restri.ri] = restri.coeficientes[vari.xi]);\r\n            console.log(newVari);\r\n            model.variables[vari.xi] = newVari;\r\n        });\r\n    //Tratamos las Restricciones\r\n    restricciones.forEach(restri => {\r\n            if(restri.eq === '>='){ \r\n                let res = {};\r\n                res.min = restri.derecha     \r\n                model.constraints['r'+restri.ri] = res;\r\n            }else{\r\n                let res = {};\r\n                res.max = restri.derecha\r\n                model.constraints['r'+restri.ri] = res;\r\n            }});\r\n    \r\n    return model\r\n}\r\n        \r\n\r\n\r\nclass Presentation extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        this.state={result:false,resultDual:false}\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.status.result){\r\n            this.calculateResults()\r\n            console.log(this.state.result);\r\n            console.log(this.state.resultDual);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps){\r\n            if (this.props.status.result){\r\n                this.calculateResults()\r\n            }  \r\n        }\r\n    }\r\n\r\n    //Funcion de Calculo del modelo.\r\n    calculateResults = () => {\r\n        //Convertimos la App en Modelo para Solver.js\r\n        let model = convertAppToModelForSolverPrimal(this.props.status);\r\n        console.log(model);\r\n        \r\n        //solver.js soluciona y nos devuelve \r\n        let result = solver.Solve(model,false,true);\r\n        console.log(result);\r\n        \r\n        this.setState({result})\r\n    }\r\n\r\n\r\n    tablaDeRecursos = (cantUsoVar,variable,restricciones) => {\r\n\r\n    }\r\n\r\n    render () {\r\n        let {result} = this.state\r\n        let {variables} = this.props.status;\r\n        let impresionDeResultados = <p>.</p>;\r\n        if (result.feasible) { impresionDeResultados = variables\r\n            .filter(vari => vari.descripcion !== '')\r\n            .map( vari => \r\n                        <Card key={'Card'+vari.xi} outline color='secondary' className=\"w-100 mt-3 mx-auto\">\r\n                            <CardHeader><CardTitle>{'Variable: X'+vari.xi}</CardTitle></CardHeader>    \r\n                            <CardBody>\r\n                                <Row><CardText>{\r\n                                    result.solutionSet[vari.xi] ? \r\n                                    'Se recomienda producir '+result.solutionSet[vari.xi]+' unidades':\r\n                                    'No se recomienda la produccion'}\r\n                                    {' de '+vari.descripcion}</CardText>\r\n                                </Row>\r\n                                <Row></Row>\r\n                    \r\n                            </CardBody>\r\n                            <CardFooter>\r\n                                <CardText>Tabla de Recursos:</CardText>\r\n                               \r\n                            </CardFooter>\r\n            \r\n                        </Card>) \r\n\r\n        }\r\n    \r\n       \r\n       return(\r\n            <> \r\n                <Card outline color='info' className=\"w-100 mt-3 mx-auto\">\r\n                    <CardHeader><CardTitle><h3>{result.feasible ? 'El resultado optimo es: '+result.evaluation:'Solucion No Factible'}</h3></CardTitle></CardHeader>\r\n                    <CardBody>\r\n                        {impresionDeResultados}\r\n                    </CardBody>\r\n                </Card>  \r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Presentation;","import React from 'react';\r\nimport { Container,Col,Row,Progress } from \"reactstrap\";\r\nimport ReactWizard from 'react-bootstrap-wizard';\r\nimport  Configuration  from \"./Configuration\";\r\nimport  Processing  from \"./Processing\";\r\nimport  Presentation  from \"./Presentation\";\r\nimport logo from '../logo.svg';\r\n\r\n\r\n\r\nclass LinealProg extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        this.state={\r\n            variables:[{xi:0, descripcion:'',coeficiente:''},{xi:1,descripcion:'',coeficiente:''}],\r\n            restricciones:[{ri:0,descripcion:'',coeficientes:[],eq:'>=',derecha:''}],\r\n            method:\"graph\",\r\n            objective:\"max\",\r\n            integer:false,\r\n            result:false,\r\n            barProg:33\r\n        };\r\n    }\r\n    //Esta funcion maneja el cambio en las restricciones\r\n    handleRestricciones = restricciones => {\r\n        this.setState({restricciones}); \r\n    }\r\n    //Esta funcion maneja el cambio en las variables\r\n    handleVariables = variables => {\r\n        this.setState({variables}); \r\n    }\r\n    //Esta funcion maneja el cambio del metodo\r\n    handleMethod = method => {\r\n        this.setState({method}); \r\n    }\r\n    //Esta funcion maneja el cambio del objetivo de optimizacion\r\n    handleObjective = objective => {\r\n        this.setState({objective})\r\n    }\r\n    toggleInteger = () => this.setState({integer:!this.state.integer});\r\n    //Esta funcion guarda el resultado (inutilizada por el momento)\r\n    handleResult = result => {\r\n        this.setState({result})\r\n    }\r\n    //Esta funcion habilita el calculo en el ultimo paso\r\n    lastStep = step => {\r\n        if (step === 2) {\r\n            this.setState({result:true,barProg:100})\r\n        }else{\r\n            this.setState({result:false,barProg:66})\r\n        }\r\n        \r\n    }\r\n\r\n    finishButtonClick = result => {\r\n        console.log('En algun momento va a imprimir resultados');\r\n    }\r\n\r\n    loadExampleModel = () =>{\r\n        let variables = [{xi:0, descripcion:'Pantalones (U/dia)',coeficiente:3},{xi:1, descripcion:'Camisas (U/Dia)',coeficiente:1}]\r\n        let restricciones = [{ri:0,descripcion:'Mano de Obra (hs/Dia)',coeficientes:[2,1],eq:'<=',derecha:8},{ri:1,descripcion:'Tela (m2)',coeficientes:[3,1],eq:'<=',derecha:30}]\r\n        this.toggleInteger();\r\n        this.setState({variables,restricciones,objective:\"max\"})\r\n    }\r\n  \r\n    render () {\r\n        var steps = [\r\n            // this step hasn't got a isValidated() function, so it will be considered to be true\r\n            { stepName: \"Configuracion del Modelo\", \r\n            component:Configuration,\r\n            stepProps:{\r\n                status:this.state,\r\n                loadExampleModel:this.loadExampleModel,\r\n                handleMethod:this.handleMethod,\r\n                handleVariables:this.handleVariables,\r\n                handleRestricciones:this.handleRestricciones,\r\n                lastStep:this.lastStep,\r\n                toggleInteger:this.toggleInteger,\r\n                handleObjective:this.handleObjective\r\n            }\r\n        },\r\n            // this step will be validated to false\r\n            { stepName: \"Detalles del Modelo\",\r\n            component:Processing, \r\n            stepProps:{\r\n                status:this.state,\r\n                handleVariables:this.handleVariables,\r\n                lastStep:this.lastStep,\r\n                handleRestricciones:this.handleRestricciones,\r\n            }\r\n        },\r\n            // this step will never be reachable because of the seconds isValidated() steps function that will always return false\r\n            { stepName: \"Presentacion de los Resultados\",\r\n            component:Presentation,\r\n            stepProps:{\r\n                status:this.state,        \r\n                handleResult:this.handleResult,\r\n                lastStep:this.lastStep\r\n            }\r\n        }\r\n          ];        \r\n        return(\r\n            <Container fluid className=\"App\">\r\n                <Row className=\"\">\r\n                    <Col xs={12} md={6}  className=\"mx-auto\">\r\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\r\n                        <Progress  animated color=\"blue\" value={this.state.barProg} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6} className=\"my-4 mx-auto\">\r\n                        <ReactWizard\r\n                            steps={steps}\r\n                            title=\"Programacion Lineal\"\r\n                            progressbar\r\n                            headerTextCenter\r\n                            validate\r\n                            color=\"blue\"\r\n                            previousButtonText=\"Volver\"\r\n                            nextButtonText=\"Siguiente\"\r\n                            finishButtonText='Imprimir Resultados'\r\n                            finishButtonClick={this.finishButtonClick}\r\n                            />\r\n                     \r\n                    </Col>                        \r\n                </Row>\r\n\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LinealProg;","import React from 'react';\r\nimport { Button,Jumbotron,Container,Row,Col,ButtonGroup} from \"reactstrap\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport  LinealProg  from \"./components/LinealProg\";\r\n\r\n\r\nconst LinealProgramacion = () => <LinealProg></LinealProg>;\r\n\r\nconst NoLinealProgramacion = () =>  <Container fluid className=\"App\">\r\n                                      <Row className=\"\">\r\n                                          <Col xs={12} md={6}  className=\"mx-auto my-5\">\r\n                                            <Jumbotron className=''>\r\n                                              <Row><h2>La PL No-Lineal recien estara disponible en el 2020.</h2></Row>\r\n                                              <Row><Link to={'/'}><Button className='fluid-left'>Volver</Button></Link></Row>\r\n                                            </Jumbotron>       \r\n                                          </Col>                    \r\n                                      </Row>\r\n                                    </Container>;\r\n\r\nconst Index = () => \r\n                  <Container fluid className=\"App\">\r\n                    <Row className=\"\">\r\n                        <Col xs={12} md={6}  className=\"mx-auto my-5\">\r\n                          <Jumbotron>\r\n                            <Row><h2 className='mx-auto'>Bienvenido!!!! Seleccione una opcion.</h2></Row>\r\n                            <Row className='mt-2'>\r\n                              <Col><Link to={'/linealProg'}><Button color='success'>Programacion Lineal </Button></Link></Col>\r\n                              <Col><Link to={'/noLinealProg'}><Button disabled color='success'>Programacion No Lineal </Button></Link></Col>\r\n                            </Row>\r\n                            <Row className='mt-3'>\r\n                              <h5>Colaboradores:</h5>\r\n                            </Row>\r\n                            <Row >\r\n                              <ButtonGroup  className='mx-auto'>\r\n                                <Button  outline tag='a' href='https://github.com/EdgarCardozo'>CE</Button>\r\n                                <Button  outline tag='a' href='https://github.com/juliandiazok'>DJ</Button>\r\n                                <Button  outline tag='a' href='https://github.com/santisolis97'>SS</Button>\r\n                                <Button  outline tag='a' href='https://github.com/ianv97'>VI</Button>\r\n                                <Button  outline tag='a' href='https://github.com/santinozaracho'>ZS</Button>\r\n                              </ButtonGroup>\r\n                            </Row>\r\n                          </Jumbotron>       \r\n                        </Col>                    \r\n                    </Row>\r\n                  </Container>;\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <Route exact path=\"/\" component={Index} />\r\n        <Route path=\"/linealProg\" component={LinealProgramacion} />\r\n        <Route path=\"/noLinealProg/\" component={NoLinealProgramacion} />\r\n        \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}