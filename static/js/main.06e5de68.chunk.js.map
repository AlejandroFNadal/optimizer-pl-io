{"version":3,"sources":["components/Configuration.js","components/elements/Restriccion.js","components/elements/FuncionObj.js","components/Processing.js","components/Presentation.js","components/LinealProg.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Configuration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerInputVar","event","_event$target","target","value","name","variables","status","xi","descripcion","splice","handleVariables","handleNewsVar","method","handlerInputRes","_event$target2","restricciones","ri","handleRestricciones","handleNewsRes","filter","element","length","push","coeficientes","eq","derecha","coeficiente","state","faltaDescrip","_this$props$status","variablesDescriptionsMin","va","restriccionesDescriptionsMin","re","lastStep","setState","_this2","variablesARenderizar","map","variable","index","react_default","a","createElement","InputGroup","className","id","key","InputGroupAddon","addonType","InputGroupText","Input","placeholder","aria-label","aria-describedby","onChange","UncontrolledTooltip","trigger","placement","restriccionesARenderizar","restriccion","buttonsMethods","ButtonGroup","Button","onClick","handleMethod","active","color","buttonsOptType","handleObjective","objective","Fragment","Container","Row","outline","loadExampleModel","UncontrolledPopover","PopoverBody","Card","CardHeader","CardBody","CardTitle","Alert","React","Component","Restriccion","cantVariables","diferencia","thisEq","botoneraMaxMin","e","handleCoefRes","disabled","inputsRestriccions","indx","type","FuncionObj","variablesToFunction","vari","handleCoefVar","toUpperCase","Processing","parseInt","console","log","listDescriptionsVarItems","array","item","ListGroupItem","Badge","listDescriptionsResItems","faltaCoe","references","every","varsOperativas","restriccionesInput","elements_Restriccion","Col","size","Collapse","isOpen","ListGroup","elements_FuncionObj","convertAppToModelForSolverPrimal","datosApp","integer","model","optimize","opType","constraints","ints","forEach","newVari","restri","res","min","max","Presentation","calculateResults","result","solver","Solve","tablaDeRecursos","cantUsoVar","resultDual","prevProps","impresionDeResultados","feasible","CardText","solutionSet","CardFooter","evaluation","LinealProg","handleResult","step","barProg","finishButtonClick","steps","stepName","component","stepProps","fluid","xs","md","src","logo","alt","height","Progress","animated","dist_default","title","progressbar","headerTextCenter","validate","previousButtonText","nextButtonText","finishButtonText","LinealProgramacion","components_LinealProg","NoLinealProgramacion","Jumbotron","react_router_dom","to","Index","tag","href","App","basename","process","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.06e5de68.chunk.js","sourcesContent":["import React from 'react';\nimport {ButtonGroup, Button, Container, Row, Card,CardBody,CardHeader,CardTitle,Alert,InputGroup,InputGroupAddon,InputGroupText, Input,UncontrolledTooltip,UncontrolledPopover,PopoverBody,PopoverHeader} from 'reactstrap';\n\n\n\nclass Configuration extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={faltaDescrip:''};\n    }\n    //Funcion que permite validar si se ingresaron todos los cambios correspondientes en la etapa\n    isValidated(){\n        let {variables,restricciones} = this.props.status;\n        let variablesDescriptionsMin = variables.filter( va => va.descripcion !== '');\n        let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !=='')\n        if (variablesDescriptionsMin.length > 1 &  restriccionesDescriptionsMin.length > 0 ) { \n            this.props.lastStep(1)\n            this.setState({faltaDescrip:''});\n            return true\n        }else {\n\n            if (variablesDescriptionsMin < 2 ){\n                this.setState({faltaDescrip:'Dale no seas Guampa poneme como minimo 2 variables'});\n                \n            }else{\n                this.setState({faltaDescrip:'Poneme Alguna Restri pue '});\n            }\n           \n            return false\n        }\n    }\n    //Funcion que se encarga de manejar las modificaciones en las variables.\n    handlerInputVar = event => {\n        let {value, name} = event.target;\n        let {variables} = this.props.status;\n        //Asignamos Valor y reasignamos el indice\n        variables[name].xi = name; \n        variables[name].descripcion = value;\n        if (name>1 && value ==='') {\n            //Si la desc esta vacia eliminamos la variable\n            variables.splice(name,1)\n        }\n        //Pasasamos al Padre los cambios realizados en la variable\n        this.props.handleVariables(variables);\n        //llamamos a la funcion que se encarga de generar nuevas variables.\n        this.handleNewsVar(this.props.status.method)      \n    }\n    //Funcion que se encarga de manejar las modificaciones de restricciones.\n    handlerInputRes = event => {\n        let {value, name} = event.target;\n        let {restricciones} = this.props.status;\n        //Asignamos el nuevo cambio \n        restricciones[name].ri = name \n        restricciones[name].descripcion = value;\n        if (value === '') {\n            //si el cambio es dejarla vacia entonces eliminamos la restriccion\n            restricciones.splice(name,1);     \n        }\n        //pedimos al padre que almacene los cambios\n        this.props.handleRestricciones(restricciones);\n        //Llamamos a generar si corresponde nueva restriccion\n        this.handleNewsRes()\n    }\n    //Funcion que se encarga de Añadir una restriccion si es necesario.\n    handleNewsRes = () => {\n        let {restricciones} = this.props.status;\n        //Contador de Rescciones sin descripciones.\n        let counterWitheRes = restricciones.filter( element => element.descripcion.length === 0).length;\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\n        if (counterWitheRes === 0 ) {\n            restricciones.push({ri:restricciones.length,descripcion:'',coeficientes:[],eq:'>=',derecha:''})\n            this.props.handleRestricciones(restricciones);\n        }\n    }\n    //Funcion que se encarga de Añadir una Variable si es necesario.\n    handleNewsVar = method => {\n        let {variables} = this.props.status;\n        if (method === 'simplex') {\n            //Si el metodo es Simplex, se permite agregar mas de dos variables.\n            let counterWitheVar = variables.filter( element => element.descripcion.length === 0).length;\n            //Si la cantidad de Variables Libres es igual a 0 se agrega una mas.\n            if (counterWitheVar === 0 ) {  \n                variables.push({xi:variables.length,descripcion:'',coeficiente:''})\n                this.props.handleVariables(variables);    \n            }\n        }else{\n            //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que este de mas.\n            if(variables.length > 2) {     \n                variables.splice(2)\n                this.props.handleVariables(variables);\n            }\n        }\n        \n\n    }\n    \n    render () {\n        //Obtenemos de las props, las varaibles y restricciones.\n        let {variables} = this.props.status;\n        let {restricciones} = this.props.status;\n        // Generamos los inputs para las Variables\n        let variablesARenderizar = variables\n        .map( (variable,index) => \n                <InputGroup className=\"mt-1\"  id={'XTT'+index} key={'VTD'+index}>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+index}</InputGroupText>\n                    </InputGroupAddon>\n                    <Input     \n                        name={index}\n                        placeholder=\"Descripcion de la Variable\"\n                        aria-label=\"Descripcion\"\n                        aria-describedby=\"variable\"\n                        onChange={this.handlerInputVar}\n                        value={variable.descripcion}/>\n                    <UncontrolledTooltip trigger='focus hover click' placement=\"auto\" target={'XTT'+index}>\n                        Aqui debes ingresar el significado de la Variable.\n                    </UncontrolledTooltip>\n                </InputGroup>);\n        //Generamos los imputs para las restricciones\n        let restriccionesARenderizar = restricciones\n        .map( (restriccion,index) => \n                <InputGroup className=\"mt-1\" id={\"TTR\"+index} key={'RTD'+index}>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\"+index}</InputGroupText>\n                    </InputGroupAddon>\n                        <Input\n                            name={index}\n                            placeholder=\"Descripcion de la Restriccion\"\n                            aria-label=\"Descripcion\"\n                            aria-describedby=\"restriccion\"\n                            onChange={this.handlerInputRes}\n                            value={restriccion.descripcion}/>\n                    <UncontrolledTooltip trigger='focus hover click' placement=\"auto\" target={'TTR'+index}>\n                        Aqui, debes ingresar el significado de la restriccion.\n                    </UncontrolledTooltip>      \n                </InputGroup>);\n        let buttonsMethods = (<ButtonGroup id='ButtUtil'> \n                                <Button onClick={() => {this.props.handleMethod('graph');this.handleNewsVar('graph')}} \n                                        active={this.props.status.method === 'graph'}\n                                        color='primary'>\n                                    GRAFICO\n                                </Button>\n                                <Button onClick={() => {this.props.handleMethod('simplex');this.handleNewsVar('simplex')}} \n                                        active={this.props.status.method === 'simplex'}\n                                        color='primary'>\n                                    SIMPLEX\n                                </Button>\n                            </ButtonGroup>)\n        let buttonsOptType = (<ButtonGroup>\n                                <Button onClick={() => this.props.handleObjective('max')} \n                                        active={this.props.status.objective === 'max'}\n                                        color='primary'>\n                                    Maximizacion\n                                </Button>\n                                <Button onClick={() => this.props.handleObjective('min')} \n                                        active={this.props.status.objective === 'min'}\n                                        color='primary'>\n                                    Minimizacion\n                                </Button>\n                            </ButtonGroup>)\n        return(\n            <>\n                <h3>Comenzamos configurando nuestro Modelo:</h3>\n                <Container>\n                    <Row><Button color='warning' outline className='float-rigth' onClick={this.props.loadExampleModel}>Cargar Modelo de Ejemplo</Button></Row>\n                    <Row>     \n                        <UncontrolledPopover placement=\"top\" target='CardUtil'>\n                                <PopoverBody>Aqui debes seleccionar el metodo de Calculo y Visualizacion de los Resultados</PopoverBody>\n                        </UncontrolledPopover>       \n                        <Card outline color='secondary' id='CardUtil' className=\"mt-2 mx-auto\">\n                            \n                            <CardHeader>Metodo a Utilizar:</CardHeader>\n                            <CardBody>{buttonsMethods}</CardBody>            \n                        </Card>  \n                        <UncontrolledPopover placement=\"top\" target='CardOpt'>\n                                <PopoverBody>Y aqui, el tipo de Optimizacion que deseas realizar, si deseas Maximizar tu funcion o Minimizarla</PopoverBody>\n                        </UncontrolledPopover> \n                        <Card outline color='secondary' id='CardOpt' className=\"mt-2 mx-auto\">\n                            \n                            <CardHeader>Tipo de Optimizacion:</CardHeader>\n                            <CardBody>{buttonsOptType}</CardBody>  \n                        </Card>\n                    </Row>\n                    <Row>\n                        \n                        <Card outline color='secondary' id='CardVariables' className=\"w-100 mt-3 mx-auto\">\n                            <CardHeader><CardTitle className=\"text-left\" ><h4>Variables:</h4></CardTitle></CardHeader>       \n                            <CardBody>\n                                {variablesARenderizar}\n                            </CardBody>\n                        </Card>\n                    </Row>\n                    <Row>\n                        \n                        <Card outline color='secondary' id='CardRestri' className=\"w-100 mt-3 mx-auto\">\n                            <CardHeader><CardTitle className=\"text-left\" ><h4>Restricciones:</h4></CardTitle></CardHeader>       \n                            <CardBody>\n                                {restriccionesARenderizar}\n                            </CardBody>\n                        </Card>\n                    </Row>\n                    {this.state.faltaDescrip !== '' && \n                        <Row className=\"mt-3\">\n                            <Alert className=\"mx-auto\" color=\"danger\">{this.state.faltaDescrip}</Alert>\n                        </Row>}\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default Configuration;","import React from 'react';\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup,UncontrolledTooltip} from 'reactstrap';\n\nconst Restriccion = props => {\n    let {coeficientes} = props.restriccion;\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\n    if (coeficientes.length !== props.cantVariables) {\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \n        let diferencia = props.cantVariables - coeficientes.length;\n        if ( diferencia > 0 ) {\n            for (let index = 0; index < diferencia; index++) {\n                coeficientes.push('')       \n            }\n        }else {\n            coeficientes.splice(props.cantVariables)\n        }\n    }\n\n    let thisEq = props.restriccion.eq;\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \n                                        value='<='>{'<='}</Button>\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \n                                        disabled \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \n                                        value='='>{'='}</Button>\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \n                                        value='>='>{'>='}</Button>\n                                </ButtonGroup>);\n    let inputsRestriccions = coeficientes\n    .map((coeficiente,indx) => \n        <>\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\n                type=\"number\"\n                name={indx}\n                placeholder=\"Coefiente\"\n                className=\"InputCoeficiente\"\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                value={coeficiente}\n                />\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\n            </InputGroupAddon>\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\n        </>\n            \n    )\n\n    return(\n        <Card key={'CR'+props.restriccion.ri} id={'CR'+props.restriccion.ri}>\n            <UncontrolledTooltip key={'TTCR'+props.restriccion.ri} placement='auto' target={'CR'+props.restriccion.ri}>\n            {'Aqui debes ingresar los coeficiente de '+props.restriccion.descripcion}\n            </UncontrolledTooltip>\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\n            <CardBody className=\"p-0 my-1 mx-auto\">\n                <InputGroup key={'RT'+props.restriccion.ri}>\n                    {inputsRestriccions}\n                    {botoneraMaxMin}\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\n                            type=\"number\"\n                            name={'derecha'}\n                            placeholder=\"Coe\"\n                            className=\"InputCoeficiente\"\n                            aria-label=\"Coe\"\n                            aria-describedby=\"restriccion\"\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                            value={props.restriccion.derecha}/>\n                </InputGroup>\n            </CardBody>\n        </Card>)\n    \n}\n\nexport default Restriccion;","import React from 'react';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, UncontrolledTooltip } from 'reactstrap'\n\n\nconst FuncionObj = props => {\n    let {variables} = props\n    let variablesToFunction = variables\n    .filter(vari => vari.descripcion !== '')\n    .map( (vari,index) => \n\n        <>\n            <UncontrolledTooltip key={'TTV'+index} placement='auto' target={'IF'+index}>\n            {'Aqui debes ingresar el coeficiente de '+vari.descripcion}\n            </UncontrolledTooltip>\n            <Input key={'IF'+index}\n                    id={'IF'+index}\n                        type='number'\n                        name={vari.xi}\n                        placeholder=\"Coef\"\n                        className=\"InputCoeficiente\"\n                        aria-label=\"Coeficiente\"\n                        aria-describedby=\"coe\"\n                        onChange={ e => props.handleCoefVar(e)}\n                        value={vari.coeficiente}\n                        />\n            <InputGroupAddon key={'ADDIF'+index} addonType=\"append\">\n                <InputGroupText key={'IFD'+index}>{\"X\"+vari.xi}</InputGroupText>\n            </InputGroupAddon>\n            {index < variables.filter(vari => vari.descripcion !== '').length-1 && <InputGroupText key={'+IF'+index}>+</InputGroupText>}\n        </>) \n\n    return(\n            <InputGroup key={'INPUTFUNCIONAL'}>\n                {variablesToFunction}\n                <InputGroupText className='mx-1' key='IFOPT'>{' => '+props.objective.toUpperCase()}</InputGroupText>\n            </InputGroup>\n    \n    ) \n}\n\nexport default FuncionObj;","import React from 'react';\nimport {Container, Row, Card,CardBody,CardHeader,CardTitle,Alert,Button,Col,Collapse,ListGroup,ListGroupItem,Badge} from 'reactstrap';\nimport Restriccion from './elements/Restriccion';\nimport FuncionObj from './elements/FuncionObj';\n\n\n\nclass Processing extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={faltaCoe:'',references:false};\n\n    }\n\n    isValidated() {\n        //Verificando si los coeficientes de las variables no son nulos\n        let verifQty = this.props.status.variables\n        .filter(va => va.descripcion !== '')\n        .every( va => va.coeficiente !== '')\n        if (verifQty) {\n            this.props.lastStep(2);\n            this.setState({faltaCoe:''})\n            return true\n        }else{\n            this.setState({faltaCoe:'Rellename pue todos los Coeficientes no seas Guampa'})\n            return false\n        }\n\n    }\n\n    //En el Siguiente Handler, Se toma del input de una variable en particular el coeficiente.\n    handleCoefVar = event => {        \n        let {value, name} = event.target;\n        if (value) {\n            let {variables} = this.props.status;\n            variables[name].coeficiente = parseInt(value);\n            this.props.handleVariables(variables);\n            console.log(this.props.status.variables);\n        }\n    }\n\n    handleCoefRes = (event,ri) => {\n        let {name,value } = event.target\n        let {restricciones} = this.props.status;\n        console.log('En la Res:'+ri+', en el campo:'+name+',con el valor:'+value);\n        \n        switch (name) {\n            case 'derecha':\n                    restricciones[ri].derecha = parseInt(value)\n                break;\n            case 'eq':\n                    restricciones[ri].eq = value\n                break;\n            default:\n                    restricciones[ri].coeficientes[name]= parseInt(value)\n                break;\n        }\n        console.log(restricciones);\n        this.props.handleRestricciones(restricciones);\n    }\n\n    listDescriptionsVarItems = array => array.filter(item => item.descripcion !== '')\n        .map(item => <ListGroupItem key={'DLGIV'+item.xi} className=\"justify-content-between\"><Badge>{'X'+item.xi}</Badge>{' '+item.descripcion}</ListGroupItem>)\n    \n    listDescriptionsResItems = array => array.filter(item => item.descripcion !== '')\n        .map(item => <ListGroupItem key={'DLGIR'+item.ri} className=\"justify-content-between\"><Badge>{'R'+item.ri}</Badge>{' '+item.descripcion}</ListGroupItem>)\n    \n\n\n    render() {\n        //Obtenemos las propiedades del Super\n        let {variables} = this.props.status;        \n        let {restricciones} = this.props.status;\n        let varsOperativas = variables.filter(va => va.descripcion !== '').length;\n\n        //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n\n        let restriccionesInput = restricciones\n        .filter(item => item.descripcion !== '')\n        .map( (restriccion,index) =>\n                <Restriccion className=\"mt-1\" \n                key={'R'+index} \n                handleCoefRes={this.handleCoefRes} \n                cantVariables={varsOperativas} \n                restriccion={restriccion}/>);\n        \n        return(\n            <>\n            <h3>Cargamos los datos de nuestro Modelo:</h3>\n            <Container>\n                <Row>\n                    <Card outline color='secondary' className=\"w-100 mt-3\">\n                            <CardHeader>\n                                <Row>\n                                    <Col className=\"text-left\"><CardTitle><h4>Referencias:</h4></CardTitle></Col>\n                                    <Col><Button outline size='sm'\n                                        onClick={() => this.setState({references:!this.state.references})} \n                                        color={!this.state.references ? 'success':'danger'}>{!this.state.references ? 'Ver Referencias':'Ocultar Referencias'}</Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <Collapse isOpen={this.state.references}>\n                                <CardBody>\n                                    <h5 className='text-left'>Variables:</h5>\n                                    <ListGroup>\n                                        {this.listDescriptionsVarItems(variables)}\n                                    </ListGroup>\n                                    <h5 className='text-left'>Restricciones:</h5>\n                                    <ListGroup>\n                                        {this.listDescriptionsResItems(restricciones)}\n                                    </ListGroup>\n                                                                    \n                                </CardBody>\n                            </Collapse>                       \n                    </Card>\n                </Row>\n                <Row>\n                    <Card outline color='secondary' className=\"w-100 mt-3\">\n                        <CardHeader><CardTitle className=\"text-left\"><h4>Funcion Objetivo:</h4></CardTitle></CardHeader>       \n                        <CardBody className=\"mx-auto\">\n                            <FuncionObj variables={variables} handleCoefVar={this.handleCoefVar} objective={this.props.status.objective}/>\n                        </CardBody>\n                    </Card>\n                </Row>\n                <Row>\n                    <Card outline color='secondary' className=\"w-100 mt-3\">\n                        <CardHeader><CardTitle className=\"text-left\"><h4>Restricciones:</h4></CardTitle></CardHeader>       \n                        <CardBody>\n                            {restriccionesInput}\n                        </CardBody>\n                    </Card>\n                </Row>\n                {this.state.faltaCoe !== '' && \n                        <Row className=\"mt-3\">\n                            <Alert className=\"mx-auto\" color=\"danger\">{this.state.faltaCoe}</Alert>\n                        </Row>}\n            </Container>\n            </>\n        )\n    }\n}\n\nexport default Processing;","import React from 'react';\nimport {Card,CardTitle,CardBody,CardText,CardHeader,Table,CardFooter,Row} from 'reactstrap';\nimport solver from 'javascript-lp-solver';\n\nlet convertAppToModelForSolverPrimal = datosApp => {\n    //Obtenemos los Datos de la aplicacion\n    let {restricciones,variables,objective,integer} = datosApp;\n    variables = variables.filter(item => item.descripcion !== '');\n    restricciones = restricciones.filter(item => item.descripcion !== '');\n    //Precargamos el Modelo\n    let model = {optimize:'coeficiente',opType:'',constraints:{},variables:{},ints:{}};\n    \n    //Tratamos el objetivo\n    model.opType = objective;\n\n    //Verificamos si se desea PL Entera\n    if (integer) {\n        variables.forEach(vari => model.ints[vari.xi]=1)\n    }    \n    //Tratamos las Variables\n    variables.forEach( vari => {  \n            //Generamos una nueva Variable\n            let newVari = {};\n            newVari.coeficiente = vari.coeficiente;\n            restricciones.forEach(restri =>\n                    newVari['r'+restri.ri] = restri.coeficientes[vari.xi]);\n            console.log(newVari);\n            model.variables[vari.xi] = newVari;\n        });\n    //Tratamos las Restricciones\n    restricciones.forEach(restri => {\n            if(restri.eq === '>='){ \n                let res = {};\n                res.min = restri.derecha     \n                model.constraints['r'+restri.ri] = res;\n            }else{\n                let res = {};\n                res.max = restri.derecha\n                model.constraints['r'+restri.ri] = res;\n            }});\n    \n    return model\n}\n        \n\n\nclass Presentation extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={result:false,resultDual:false}\n    }\n\n    componentDidMount() {\n        if (this.props.status.result){\n            this.calculateResults()\n            console.log(this.state.result);\n            console.log(this.state.resultDual);\n        }\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps){\n            if (this.props.status.result){\n                this.calculateResults()\n            }  \n        }\n    }\n\n    //Funcion de Calculo del modelo.\n    calculateResults = () => {\n        //Convertimos la App en Modelo para Solver.js\n        let model = convertAppToModelForSolverPrimal(this.props.status);\n        console.log(model);\n        \n        //solver.js soluciona y nos devuelve \n        let result = solver.Solve(model,true,true);\n        console.log(result);\n        \n        this.setState({result})\n    }\n\n\n    tablaDeRecursos = (cantUsoVar,variable,restricciones) => {\n\n    }\n\n    render () {\n        let {result} = this.state\n        let {variables} = this.props.status;\n        let impresionDeResultados = <p>.</p>;\n        if (result.feasible) { impresionDeResultados = variables\n            .filter(vari => vari.descripcion !== '')\n            .map( vari => \n                        <Card key={'Card'+vari.xi} outline color='secondary' className=\"w-100 mt-3 mx-auto\">\n                            <CardHeader><CardTitle>{'Variable: X'+vari.xi}</CardTitle></CardHeader>    \n                            <CardBody>\n                                <Row><CardText>{\n                                    result.solutionSet[vari.xi] ? \n                                    'Se recomienda producir '+result.solutionSet[vari.xi]+' unidades':\n                                    'No se recomienda la produccion'}\n                                    {' de '+vari.descripcion}</CardText>\n                                </Row>\n                                <Row></Row>\n                    \n                            </CardBody>\n                            <CardFooter>\n                                <CardText>Tabla de Recursos:</CardText>\n                               \n                            </CardFooter>\n            \n                        </Card>) \n\n        }\n    \n       \n       return(\n            <> \n                <Card outline color='info' className=\"w-100 mt-3 mx-auto\">\n                    <CardHeader><CardTitle><h3>{result.feasible ? 'El resultado optimo es: '+result.evaluation:'Solucion No Factible'}</h3></CardTitle></CardHeader>\n                    <CardBody>\n                        {impresionDeResultados}\n                    </CardBody>\n                </Card>  \n            </>\n\n        )\n    }\n}\n\nexport default Presentation;","import React from 'react';\nimport { Container,Col,Row,Progress } from \"reactstrap\";\nimport ReactWizard from 'react-bootstrap-wizard';\nimport  Configuration  from \"./Configuration\";\nimport  Processing  from \"./Processing\";\nimport  Presentation  from \"./Presentation\";\nimport logo from '../logo.svg';\n\n\n\nclass LinealProg extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={\n            variables:[{xi:0, descripcion:'',coeficiente:''},{xi:1,descripcion:'',coeficiente:''}],\n            restricciones:[{ri:0,descripcion:'',coeficientes:[],eq:'>=',derecha:''}],\n            method:\"graph\",\n            objective:\"max\",\n            integer:false,\n            result:false,\n            barProg:33\n        };\n    }\n    //Esta funcion maneja el cambio en las restricciones\n    handleRestricciones = restricciones => {\n        this.setState({restricciones}); \n    }\n    //Esta funcion maneja el cambio en las variables\n    handleVariables = variables => {\n        this.setState({variables}); \n    }\n    //Esta funcion maneja el cambio del metodo\n    handleMethod = method => {\n        this.setState({method}); \n    }\n    //Esta funcion maneja el cambio del objetivo de optimizacion\n    handleObjective = objective => {\n        this.setState({objective})\n    }\n    //Esta funcion guarda el resultado (inutilizada por el momento)\n    handleResult = result => {\n        this.setState({result})\n    }\n    //Esta funcion habilita el calculo en el ultimo paso\n    lastStep = step => {\n        if (step === 2) {\n            this.setState({result:true,barProg:100})\n        }else{\n            this.setState({result:false,barProg:66})\n        }\n        \n    }\n\n    finishButtonClick = result => {\n        console.log('En algun momento va a imprimir resultados');\n    }\n\n    loadExampleModel = () =>{\n        let variables = [{xi:0, descripcion:'Pantalones (U/dia)',coeficiente:3},{xi:1, descripcion:'Camisas (U/Dia)',coeficiente:1}]\n        let restricciones = [{ri:0,descripcion:'Mano de Obra (hs/Dia)',coeficientes:[2,1],eq:'<=',derecha:8},{ri:1,descripcion:'Tela (m2)',coeficientes:[3,1],eq:'<=',derecha:30}]\n        this.setState({variables,restricciones,objective:\"max\",integer:true})\n    }\n  \n    render () {\n        var steps = [\n            // this step hasn't got a isValidated() function, so it will be considered to be true\n            { stepName: \"Configuracion del Modelo\", \n            component:Configuration,\n            stepProps:{\n                status:this.state,\n                loadExampleModel:this.loadExampleModel,\n                handleMethod:this.handleMethod,\n                handleVariables:this.handleVariables,\n                handleRestricciones:this.handleRestricciones,\n                lastStep:this.lastStep,\n                handleObjective:this.handleObjective\n            }\n        },\n            // this step will be validated to false\n            { stepName: \"Detalles del Modelo\",\n            component:Processing, \n            stepProps:{\n                status:this.state,\n                handleVariables:this.handleVariables,\n                lastStep:this.lastStep,\n                handleRestricciones:this.handleRestricciones,\n            }\n        },\n            // this step will never be reachable because of the seconds isValidated() steps function that will always return false\n            { stepName: \"Presentacion de los Resultados\",\n            component:Presentation,\n            stepProps:{\n                status:this.state,        \n                handleResult:this.handleResult,\n                lastStep:this.lastStep\n            }\n        }\n          ];        \n        return(\n            <Container fluid className=\"App\">\n                <Row className=\"\">\n                    <Col xs={12} md={6}  className=\"mx-auto\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n                        <Progress  animated color=\"blue\" value={this.state.barProg} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} md={6} className=\"my-4 mx-auto\">\n                        <ReactWizard\n                            steps={steps}\n                            title=\"Programacion Lineal\"\n                            progressbar\n                            headerTextCenter\n                            validate\n                            color=\"blue\"\n                            previousButtonText=\"Volver\"\n                            nextButtonText=\"Siguiente\"\n                            finishButtonText='Imprimir Resultados'\n                            finishButtonClick={this.finishButtonClick}\n                            />\n                     \n                    </Col>                        \n                </Row>\n\n            </Container>\n\n        )\n    }\n}\n\nexport default LinealProg;","import React from 'react';\nimport { Button,Jumbotron,Container,Row,Col,ButtonGroup} from \"reactstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport  LinealProg  from \"./components/LinealProg\";\n\n\nconst LinealProgramacion = () => <LinealProg></LinealProg>;\n\nconst NoLinealProgramacion = () =>  <Container fluid className=\"App\">\n                                      <Row className=\"\">\n                                          <Col xs={12} md={6}  className=\"mx-auto my-5\">\n                                            <Jumbotron className=''>\n                                              <Row><h2>La PL No-Lineal recien estara disponible en el 2020.</h2></Row>\n                                              <Row><Link to={'/'}><Button className='fluid-left'>Volver</Button></Link></Row>\n                                            </Jumbotron>       \n                                          </Col>                    \n                                      </Row>\n                                    </Container>;\n\nconst Index = () => \n                  <Container fluid className=\"App\">\n                    <Row className=\"\">\n                        <Col xs={12} md={6}  className=\"mx-auto my-5\">\n                          <Jumbotron>\n                            <Row><h2 className='mx-auto'>Bienvenido!!!! Seleccione una opcion.</h2></Row>\n                            <Row className='mt-2'>\n                              <Col><Link to={'/linealProg'}><Button color='success'>Programacion Lineal </Button></Link></Col>\n                              <Col><Link to={'/noLinealProg'}><Button disabled color='success'>Programacion No Lineal </Button></Link></Col>\n                            </Row>\n                            <Row className='mt-3'>\n                              <h5>Colaboradores:</h5>\n                            </Row>\n                            <Row >\n                              <ButtonGroup  className='mx-auto'>\n                                <Button  outline tag='a' href='https://github.com/EdgarCardozo'>CE</Button>\n                                <Button  outline tag='a' href='https://github.com/juliandiazok'>DJ</Button>\n                                <Button  outline tag='a' href='https://github.com/santisolis97'>SS</Button>\n                                <Button  outline tag='a' href='https://github.com/ianv97'>VI</Button>\n                                <Button  outline tag='a' href='https://github.com/santinozaracho'>ZS</Button>\n                              </ButtonGroup>\n                            </Row>\n                          </Jumbotron>       \n                        </Col>                    \n                    </Row>\n                  </Container>;\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={Index} />\n        <Route path=\"/linealProg\" component={LinealProgramacion} />\n        <Route path=\"/noLinealProg/\" component={NoLinealProgramacion} />\n        \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}