{"version":3,"sources":["logo.svg","components/Configuration.js","components/elements/Restriccion.js","components/elements/FuncionObj.js","components/Processing.js","components/Presentation.js","components/LinealProg.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Configuration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerInputVar","event","_event$target","target","value","name","variables","status","xi","descripcion","splice","handleVariables","handleNewsVar","method","handlerInputRes","_event$target2","restricciones","ri","handleRestricciones","handleNewsRes","filter","element","length","push","coeficientes","eq","derecha","coeficiente","state","faltaDescrip","_this$props$status","variablesDescriptionsMin","va","restriccionesDescriptionsMin","re","lastStep","setState","_this2","variablesARenderizar","map","variable","index","react_default","a","createElement","InputGroup","className","key","InputGroupAddon","addonType","InputGroupText","id","Input","placeholder","aria-label","aria-describedby","onChange","restriccionesARenderizar","restriccion","buttonsMethods","ButtonGroup","Button","onClick","handleMethod","active","color","buttonsOptType","handleObjective","objective","Fragment","Container","Row","Card","CardHeader","CardBody","CardTitle","Alert","React","Component","Restriccion","cantVariables","diferencia","thisEq","botoneraMaxMin","e","handleCoefRes","disabled","inputsRestriccions","indx","type","FuncionObj","variablesToFunction","vari","UncontrolledTooltip","handleCoefVar","toUpperCase","Processing","parseInt","console","log","faltaCoe","every","varsOperativas","restriccionesInput","item","elements_Restriccion","elements_FuncionObj","convertAppToModelForSolverPrimal","datosApp","model","optimize","opType","constraints","forEach","newVari","restri","res","min","max","Presentation","calculatePrimal","solver","Solve","result","impresionDeResultados","CardText","LinealProg","handleResult","step","barProg","finishButtonClick","steps","stepName","component","stepProps","fluid","Col","xs","md","src","logo","alt","height","Progress","animated","dist_default","title","progressbar","headerTextCenter","validate","previousButtonText","nextButtonText","finishButtonText","App","components_LinealProg","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef941504.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {ButtonGroup, Button, Container, Row, Card,CardBody,CardHeader,CardTitle,Alert,InputGroup,InputGroupAddon,InputGroupText, Input} from 'reactstrap';\n\n\n\nclass Configuration extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={faltaDescrip:''};\n    }\n    //Funcion que permite validar si se ingresaron todos los cambios correspondientes en la etapa\n    isValidated(){\n        let {variables,restricciones} = this.props.status;\n        let variablesDescriptionsMin = variables.filter( va => va.descripcion !== '');\n        let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !=='')\n        if (variablesDescriptionsMin.length > 1 &  restriccionesDescriptionsMin.length > 0 ) { \n            this.props.lastStep(1)\n            return true\n        }else {\n\n            if (variablesDescriptionsMin < 2 ){\n                this.setState({faltaDescrip:'Dale no seas Guampa poneme como minimo 2 variables'});\n                \n            }else{\n                this.setState({faltaDescrip:'Poneme Alguna Restri pue '});\n            }\n           \n            return false\n        }\n    }\n    //Funcion que se encarga de manejar las modificaciones en las variables.\n    handlerInputVar = event => {\n        let {value, name} = event.target;\n        let {variables} = this.props.status;\n        //Asignamos Valor y reasignamos el indice\n        variables[name].xi = name; \n        variables[name].descripcion = value;\n        if (name>1 && value ==='') {\n            //Si la desc esta vacia eliminamos la variable\n            variables.splice(name,1)\n        }\n        //Pasasamos al Padre los cambios realizados en la variable\n        this.props.handleVariables(variables);\n        //llamamos a la funcion que se encarga de generar nuevas variables.\n        this.handleNewsVar(this.props.status.method)      \n    }\n    //Funcion que se encarga de manejar las modificaciones de restricciones.\n    handlerInputRes = event => {\n        let {value, name} = event.target;\n        let {restricciones} = this.props.status;\n        //Asignamos el nuevo cambio \n        restricciones[name].ri = name \n        restricciones[name].descripcion = value;\n        if (value === '') {\n            //si el cambio es dejarla vacia entonces eliminamos la restriccion\n            restricciones.splice(name,1);     \n        }\n        //pedimos al padre que almacene los cambios\n        this.props.handleRestricciones(restricciones);\n        //Llamamos a generar si corresponde nueva restriccion\n        this.handleNewsRes()\n    }\n    //Funcion que se encarga de Añadir una restriccion si es necesario.\n    handleNewsRes = () => {\n        let {restricciones} = this.props.status;\n        //Contador de Rescciones sin descripciones.\n        let counterWitheRes = restricciones.filter( element => element.descripcion.length === 0).length;\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\n        if (counterWitheRes === 0 ) {\n            restricciones.push({ri:restricciones.length,descripcion:'',coeficientes:[],eq:'>=',derecha:''})\n            this.props.handleRestricciones(restricciones);\n        }\n    }\n    //Funcion que se encarga de Añadir una Variable si es necesario.\n    handleNewsVar = method => {\n        let {variables} = this.props.status;\n        if (method === 'simplex') {\n            //Si el metodo es Simplex, se permite agregar mas de dos variables.\n            let counterWitheVar = variables.filter( element => element.descripcion.length === 0).length;\n            //Si la cantidad de Variables Libres es igual a 0 se agrega una mas.\n            if (counterWitheVar === 0 ) {  \n                variables.push({xi:variables.length,descripcion:'',coeficiente:''})\n                this.props.handleVariables(variables);    \n            }\n        }else{\n            //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que este de mas.\n            if(variables.length > 2) {     \n                variables.splice(2)\n                this.props.handleVariables(variables);\n            }\n        }\n        \n\n    }\n    \n    render () {\n        //Obtenemos de las props, las varaibles y restricciones.\n        let {variables} = this.props.status;\n        let {restricciones} = this.props.status;\n        // Generamos los inputs para las Variables\n        let variablesARenderizar = variables\n        .map( (variable,index) => \n                <InputGroup className=\"mt-1\" key={'VTD'+index}>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+index}</InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                        name={index}\n                        placeholder=\"Descripcion de la Variable\"\n                        aria-label=\"Descripcion\"\n                        aria-describedby=\"variable\"\n                        onChange={this.handlerInputVar}\n                        value={variable.descripcion}/>\n                </InputGroup>);\n        //Generamos los imputs para las restricciones\n        let restriccionesARenderizar = restricciones\n        .map( (restriccion,index) => \n                <InputGroup className=\"mt-1\" key={'RTD'+index}>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\"+index}</InputGroupText>\n                    </InputGroupAddon>\n                        <Input\n                            name={index}\n                            placeholder=\"Descripcion de la Restriccion\"\n                            aria-label=\"Descripcion\"\n                            aria-describedby=\"restriccion\"\n                            onChange={this.handlerInputRes}\n                            value={restriccion.descripcion}/>        \n                </InputGroup>);\n        let buttonsMethods = (<ButtonGroup>\n                                <Button onClick={() => {this.props.handleMethod('graph');this.handleNewsVar('graph')}} \n                                        active={this.props.status.method === 'graph'}\n                                        color='primary'>\n                                    GRAFICO\n                                </Button>\n                                <Button onClick={() => {this.props.handleMethod('simplex');this.handleNewsVar('simplex')}} \n                                        active={this.props.status.method === 'simplex'}\n                                        color='primary'>\n                                    SIMPLEX\n                                </Button>\n                            </ButtonGroup>)\n        let buttonsOptType = (<ButtonGroup>\n                                <Button onClick={() => this.props.handleObjective('max')} \n                                        active={this.props.status.objective === 'max'}\n                                        color='primary'>\n                                    Maximizacion\n                                </Button>\n                                <Button onClick={() => this.props.handleObjective('min')} \n                                        active={this.props.status.objective === 'min'}\n                                        color='primary'>\n                                    Minimizacion\n                                </Button>\n                            </ButtonGroup>)\n        return(\n            <>\n                <h3>Comenzamos Configurando nuestro Modelo:</h3>\n                <Container>\n                    <Row>         \n                            <Card className=\"mx-auto\">\n                                <CardHeader>Metodo a Utilizar:</CardHeader>\n                                <CardBody>{buttonsMethods}</CardBody>            \n                            </Card>  \n\n                            <Card className=\"mx-auto\">\n                                <CardHeader>Tipo de Optimizacion:</CardHeader>\n                                <CardBody>{buttonsOptType}</CardBody>  \n                            </Card>\n                    </Row>\n                    <Row>\n                        <Card className=\"w-100 mt-3\">\n                            <CardHeader><CardTitle className=\"text-left\" ><h4>Variables:</h4></CardTitle></CardHeader>       \n                            <CardBody>\n                                {variablesARenderizar}\n                            </CardBody>\n                        </Card>\n                    </Row>\n                    <Row>\n                        <Card className=\"w-100 mt-3\">\n                            <CardHeader><CardTitle className=\"text-left\" ><h4>Restricciones:</h4></CardTitle></CardHeader>       \n                            <CardBody>\n                                {restriccionesARenderizar}\n                            </CardBody>\n                        </Card>\n                    </Row>\n                    {this.state.faltaDescrip !== '' && \n                        <Row className=\"mt-3\">\n                            <Alert className=\"mx-auto\" color=\"danger\">{this.state.faltaDescrip}</Alert>\n                        </Row>}\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default Configuration;","import React from 'react';\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup} from 'reactstrap';\n\nconst Restriccion = props => {\n    let {coeficientes} = props.restriccion;\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\n    if (coeficientes.length !== props.cantVariables) {\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \n        let diferencia = props.cantVariables - coeficientes.length;\n        if ( diferencia > 0 ) {\n            for (let index = 0; index < diferencia; index++) {\n                coeficientes.push('')       \n            }\n        }else {\n            coeficientes.splice(props.cantVariables)\n        }\n    }\n\n    let thisEq = props.restriccion.eq;\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \n                                        value='<='>{'<='}</Button>\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \n                                        disabled \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \n                                        value='='>{'='}</Button>\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \n                                        value='>='>{'>='}</Button>\n                                </ButtonGroup>);\n    let inputsRestriccions = coeficientes\n    .map((coeficiente,indx) => \n        <>\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\n                type=\"number\"\n                name={indx}\n                placeholder=\"Coefiente\"\n                className=\"InputCoeficiente\"\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                value={coeficiente}\n                />\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\n            </InputGroupAddon>\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\n        </>\n            \n    )\n\n    return(\n        <Card key={'RRR'+props.restriccion.ri}>\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\n            <CardBody className=\"p-0 my-1 mx-auto\">\n                <InputGroup key={'RT'+props.restriccion.ri}>\n                    {inputsRestriccions}\n                    {botoneraMaxMin}\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\n                            type=\"number\"\n                            name={'derecha'}\n                            placeholder=\"Coe\"\n                            className=\"InputCoeficiente\"\n                            aria-label=\"Coe\"\n                            aria-describedby=\"restriccion\"\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                            value={props.restriccion.derecha}/>\n                </InputGroup>\n            </CardBody>\n        </Card>)\n    \n}\n\nexport default Restriccion;","import React from 'react';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, UncontrolledTooltip } from 'reactstrap'\n\n\nconst FuncionObj = props => {\n    let {variables} = props\n    let variablesToFunction = variables\n    .filter(vari => vari.descripcion !== '')\n    .map( (vari,index) => \n\n        <>\n            <UncontrolledTooltip key={'TTV'+index} target={'IF'+index}>\n            {'Debes ingresar el coeficiente de '+vari.descripcion}\n            </UncontrolledTooltip>\n            <Input key={'IF'+index}\n                    id={'IF'+index}\n                        type='number'\n                        name={vari.xi}\n                        placeholder=\"Coef\"\n                        className=\"InputCoeficiente\"\n                        aria-label=\"Coeficiente\"\n                        aria-describedby=\"coe\"\n                        onChange={ e => props.handleCoefVar(e)}\n                        value={vari.coeficiente}\n                        />\n            <InputGroupAddon key={'ADDIF'+index} addonType=\"append\">\n                <InputGroupText key={'IFD'+index}>{\"X\"+vari.xi}</InputGroupText>\n            </InputGroupAddon>\n            {index < variables.filter(vari => vari.descripcion !== '').length-1 && <InputGroupText key={'+IF'+index}>+</InputGroupText>}\n        </>) \n\n    return(\n            <InputGroup key={'INPUTFUNCIONAL'}>\n                {variablesToFunction}\n                <InputGroupText className='mx-1' key='IFOPT'>{' => '+props.objective.toUpperCase()}</InputGroupText>\n            </InputGroup>\n    \n    ) \n}\n\nexport default FuncionObj;","import React from 'react';\nimport {Container, Row, Card,CardBody,CardHeader,CardTitle,Alert} from 'reactstrap';\nimport Restriccion from './elements/Restriccion';\nimport FuncionObj from './elements/FuncionObj';\n\n\n\nclass Processing extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={faltaCoe:''};\n\n    }\n\n    isValidated() {\n        //Verificando si los coeficientes de las variables no son nulos\n        let verifQty = this.props.status.variables\n        .filter(va => va.descripcion !== '')\n        .every( va => va.coeficiente !== '')\n        if (verifQty) {\n            this.props.lastStep(2);\n            this.setState({faltaCoe:''})\n            return true\n        }else{\n            this.setState({faltaCoe:'Rellename pue todos los Coeficientes no seas Guampa'})\n            return false\n        }\n\n    }\n\n    //En el Siguiente Handler, Se toma del input de una variable en particular el coeficiente.\n    handleCoefVar = event => {        \n        let {value, name} = event.target;\n        if (value) {\n            let {variables} = this.props.status;\n            variables[name].coeficiente = parseInt(value);\n            this.props.handleVariables(variables);\n            console.log(this.props.status.variables);\n        }\n    }\n\n    handleCoefRes = (event,ri) => {\n        let {name,value } = event.target\n        let {restricciones} = this.props.status;\n        console.log('En la Res:'+ri+', en el campo:'+name+',con el valor:'+value);\n        \n        switch (name) {\n            case 'derecha':\n                    restricciones[ri].derecha = parseInt(value)\n                break;\n            case 'eq':\n                    restricciones[ri].eq = value\n                break;\n            default:\n                    restricciones[ri].coeficientes[name]= parseInt(value)\n                break;\n        }\n        console.log(restricciones);\n        this.props.handleRestricciones(restricciones);\n    }\n\n\n    render() {\n        //Obtenemos las propiedades del Super\n        let {variables} = this.props.status;        \n        let {restricciones} = this.props.status;\n        let varsOperativas = variables.filter(va => va.descripcion !== '').length;\n\n        //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n\n        let restriccionesInput = restricciones\n        .filter(item => item.descripcion !== '')\n        .map( (restriccion,index) =>\n                <Restriccion className=\"mt-1\" \n                key={'R'+index} \n                handleCoefRes={this.handleCoefRes} \n                cantVariables={varsOperativas} \n                restriccion={restriccion}/>);\n        \n        return(\n            <>\n            <h3>Cargamos los datos de nuestro Modelo:</h3>\n            <Container>\n                <Row>\n                    <Card className=\"w-100 mt-3\">\n                            <CardHeader><CardTitle className=\"text-left\"><h4>Referencia:</h4></CardTitle></CardHeader>       \n                            <CardBody>\n                                Aqui iran las Referencias\n                            </CardBody>\n                    </Card>\n                </Row>\n                <Row>\n                    <Card className=\"w-100 mt-3\">\n                        <CardHeader><CardTitle className=\"text-left\"><h4>Funcion Objetivo:</h4></CardTitle></CardHeader>       \n                        <CardBody className=\"mx-auto\">\n                            <FuncionObj variables={variables} handleCoefVar={this.handleCoefVar} objective={this.props.status.objective}/>\n                        </CardBody>\n                    </Card>\n                </Row>\n                <Row>\n                    <Card className=\"w-100 mt-3\">\n                        <CardHeader><CardTitle className=\"text-left\"><h4>Restricciones:</h4></CardTitle></CardHeader>       \n                        <CardBody>\n                            {restriccionesInput}\n                        </CardBody>\n                    </Card>\n                </Row>\n                {this.state.faltaCoe !== '' && \n                        <Row className=\"mt-3\">\n                            <Alert className=\"mx-auto\" color=\"danger\">{this.state.faltaCoe}</Alert>\n                        </Row>}\n            </Container>\n            </>\n        )\n    }\n}\n\nexport default Processing;","import React from 'react';\nimport {Card,CardTitle,CardBody,CardText,CardHeader} from 'reactstrap';\nimport solver from 'javascript-lp-solver';\n\nlet convertAppToModelForSolverPrimal = datosApp => {\n    //Obtenemos los Datos de la aplicacion\n    let {restricciones,variables,objective} = datosApp;\n    //Precargamos el Modelo\n    let model = {optimize:'coeficiente',opType:'',constraints:{},variables:{}};\n    \n    //Tratamos el objetivo\n    model.opType = objective;\n        \n    //Tratamos las Variables\n    variables\n    .filter(item => item.descripcion !== '')\n    .forEach( vari => {  \n            //Generamos una nueva Variable\n            let newVari = {};\n            newVari.coeficiente = vari.coeficiente;\n            restricciones.forEach(restri => {\n                if(restri.descripcion !==''){\n                    newVari['r'+restri.ri] = restri.coeficientes[vari.xi];\n                }\n            });\n            console.log(newVari);\n            model.variables[vari.xi] = newVari;\n        });\n    //Tratamos las Restricciones\n    restricciones\n    .filter(item => item.descripcion !== '')\n    .forEach(restri => {\n            if(restri.eq === '>='){ \n                let res = {};\n                res.min = restri.derecha     \n                model.constraints['r'+restri.ri] = res;\n            }else{\n                let res = {};\n                res.max = restri.derecha\n                model.constraints['r'+restri.ri] = res;\n            }});\n\n    return model\n}\n        \n\n\nclass Presentation extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={result:false}\n    }\n\n    //Funcion de Calculo del modelo.\n    calculatePrimal = () => {\n        //Convertimos la App en Modelo para Solver.js\n        let model = convertAppToModelForSolverPrimal(this.props.status)\n        //solver.js soluciona y nos devuelve\n        return solver.Solve(model);      \n    }\n\n    render () {\n        let result = 'No hay resultados todavsia'\n        if (this.props.status.result){\n            result = this.calculatePrimal()\n            console.log(result);\n        }\n        let {variables} =this.props.status;\n        let impresionDeResultados = variables\n        .filter(vari => vari.descripcion !== '')\n        .map( vari => \n                    <Card key={'Card'+vari.xi}>\n                        <CardTitle>\n                            {'Variable: X'+vari.xi}\n                        </CardTitle>\n                        <CardBody>\n                            <CardText>{\n                                result[vari.xi] ? \n                                'Se recomienda producir '+result[vari.xi]+' unidades':\n                                'No se recomienda la produccion'}\n                                {' de '+vari.descripcion}</CardText>\n                        </CardBody>\n        \n                    </Card>) \n        return(\n            <> \n                <Card>\n                    <CardHeader><CardTitle><h3>{'El resultado optimo es: '+result.result}</h3></CardTitle></CardHeader>\n                    <CardBody>\n                        {impresionDeResultados}\n                    </CardBody>\n                </Card>  \n            </>\n\n        )\n    }\n}\n\nexport default Presentation;","import React from 'react';\nimport { Container,Col,Row,Progress } from \"reactstrap\";\nimport ReactWizard from 'react-bootstrap-wizard';\nimport  Configuration  from \"./Configuration\";\nimport  Processing  from \"./Processing\";\nimport  Presentation  from \"./Presentation\";\nimport logo from '../logo.svg';\n\n\n\nclass LinealProg extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={\n            variables:[{xi:0, descripcion:'',coeficiente:''},{xi:1,descripcion:'',coeficiente:''}],\n            restricciones:[{ri:0,descripcion:'',coeficientes:[],eq:'>=',derecha:''}],\n            method:\"graph\",\n            objective:\"max\",\n            result:false,\n            barProg:33\n        };\n    }\n    //Esta funcion maneja el cambio en las restricciones\n    handleRestricciones = restricciones => {\n        this.setState({restricciones}); \n    }\n    //Esta funcion maneja el cambio en las variables\n    handleVariables = variables => {\n        this.setState({variables}); \n    }\n    //Esta funcion maneja el cambio del metodo\n    handleMethod = method => {\n        this.setState({method}); \n    }\n    //Esta funcion maneja el cambio del objetivo de optimizacion\n    handleObjective = objective => {\n        this.setState({objective})\n    }\n    //Esta funcion guarda el resultado (inutilizada por el momento)\n    handleResult = result => {\n        this.setState({result})\n    }\n    //Esta funcion habilita el calculo en el ultimo paso\n    lastStep = step => {\n        if (step === 2) {\n            this.setState({result:true,barProg:100})\n        }else{\n            this.setState({result:false,barProg:66})\n        }\n        \n    }\n\n    finishButtonClick = result => {\n        console.log('En algun momento va a imprimir resultados');\n    }\n  \n    render () {\n        var steps = [\n            // this step hasn't got a isValidated() function, so it will be considered to be true\n            { stepName: \"Configuracion del Modelo\", \n            component:Configuration,\n            stepProps:{\n                status:this.state,\n                handleMethod:this.handleMethod,\n                handleVariables:this.handleVariables,\n                handleRestricciones:this.handleRestricciones,\n                lastStep:this.lastStep,\n                handleObjective:this.handleObjective\n            }\n        },\n            // this step will be validated to false\n            { stepName: \"Detalles del Modelo\",\n            component:Processing, \n            stepProps:{\n                status:this.state,\n                handleVariables:this.handleVariables,\n                lastStep:this.lastStep,\n                handleRestricciones:this.handleRestricciones,\n            }\n        },\n            // this step will never be reachable because of the seconds isValidated() steps function that will always return false\n            { stepName: \"Presentacion de los Resultados\",\n            component:Presentation,\n            stepProps:{\n                status:this.state,        \n                handleResult:this.handleResult,\n                lastStep:this.lastStep\n            }\n        }\n          ];        \n        return(\n            <Container fluid className=\"App\">\n                <Row className=\"\">\n                    <Col xs={12} md={6}  className=\"mx-auto\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n                        <Progress  animated color=\"blue\" value={this.state.barProg} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} md={6} className=\"my-4 mx-auto\">\n                        <ReactWizard\n                            steps={steps}\n                            title=\"Programacion Lineal\"\n                            progressbar\n                            headerTextCenter\n                            validate\n                            color=\"blue\"\n                            previousButtonText=\"Volver\"\n                            nextButtonText=\"Siguiente\"\n                            finishButtonText='Imprimir Resultados'\n                            finishButtonClick={this.finishButtonClick}\n                            />\n                     \n                    </Col>                        \n                </Row>\n\n            </Container>\n\n        )\n    }\n}\n\nexport default LinealProg;","import React from 'react';\nimport  LinealProg  from \"./components/LinealProg\";\n\nfunction App() {\n  return (\n    <LinealProg></LinealProg>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}