{"version":3,"sources":["logo.svg","components/Configuration.js","components/elements/Restriccion.js","components/elements/Variable.js","components/Processing.js","components/Presentation.js","components/LinealProg.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Configuration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerInputVar","event","_event$target","target","value","name","variables","status","xi","descripcion","splice","handleVariables","handleNewsVar","method","handlerInputRes","_event$target2","restricciones","ri","handleRestricciones","handleNewsRes","filter","element","length","push","coeficientes","eq","derecha","coeficiente","state","faltaDescrip","va","setState","_this2","variablesARenderizar","map","variable","index","react_default","a","createElement","InputGroup","key","InputGroupAddon","addonType","InputGroupText","id","Input","placeholder","aria-label","aria-describedby","onChange","restriccionesARenderizar","restriccion","Fragment","Container","Row","Card","className","ButtonGroup","Button","onClick","handleMethod","active","handleObjective","objective","React","Component","Restriccion","cantVariables","diferencia","thisEq","inputsRestriccions","indx","type","e","handleCoefRes","disabled","Variable","handleCoefVar","Processing","parseInt","console","log","every","handleStepResult","varsOperativas","variablesInput","elements_Variable","restriccionesInput","elements_Restriccion","convertAppToModelForSolver","modelo","model","optimize","opType","constraints","forEach","vari","newVari","restri","res","min","max","Presentation","calculate","solver","Solve","result","impresionDeResultados","CardTitle","CardBody","CardText","LinealProg","handleResult","steps","stepName","component","stepProps","fluid","Col","xs","md","src","logo","alt","height","Progress","animated","color","dist_default","title","headerTextCenter","validate","previousButtonText","nextButtonText","finishButtonClick","App","components_LinealProg","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee48c61c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {ButtonGroup, Button, Container, Row, Card, InputGroup,InputGroupAddon,InputGroupText, Input} from 'reactstrap';\n\n\n\nclass Configuration extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={faltaDescrip:false};\n    }\n    //Funcion que permite validar si se ingresaron todos los cambios correspondientes en la etapa\n    isValidated(){\n        let {variables} = this.props.status;\n        let variablesDescriptionsMin = variables.filter( va => va.descripcion !== '');\n        if (variablesDescriptionsMin.length > 1) { \n            return true\n        }else {\n            this.setState({faltaDescrip:true});\n            return true\n        }\n    }\n    //Funcion que se encarga de manejar las modificaciones en las variables.\n    handlerInputVar = event => {\n        let {value, name} = event.target;\n        let {variables} = this.props.status;\n        //Asignamos Valor y reasignamos el indice\n        variables[name].xi = name; \n        variables[name].descripcion = value;\n        if (name>1 && value ==='') {\n            //Si la desc esta vacia eliminamos la variable\n            variables.splice(name,1)\n        }\n        //Pasasamos al Padre los cambios realizados en la variable\n        this.props.handleVariables(variables);\n        //llamamos a la funcion que se encarga de generar nuevas variables.\n        this.handleNewsVar(this.props.status.method)      \n    }\n    //Funcion que se encarga de manejar las modificaciones de restricciones.\n    handlerInputRes = event => {\n        let {value, name} = event.target;\n        let {restricciones} = this.props.status;\n        //Asignamos el nuevo cambio \n        restricciones[name].ri = name \n        restricciones[name].descripcion = value;\n        if (value === '') {\n            //si el cambio es dejarla vacia entonces eliminamos la restriccion\n            restricciones.splice(name,1);     \n        }\n        //pedimos al padre que almacene los cambios\n        this.props.handleRestricciones(restricciones);\n        //Llamamos a generar si corresponde nueva restriccion\n        this.handleNewsRes()\n    }\n    //Funcion que se encarga de Añadir una restriccion si es necesario.\n    handleNewsRes = () => {\n        let {restricciones} = this.props.status;\n        //Contador de Rescciones sin descripciones.\n        let counterWitheRes = restricciones.filter( element => element.descripcion.length === 0).length;\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\n        if (counterWitheRes === 0 ) {\n            restricciones.push({ri:restricciones.length,descripcion:'',coeficientes:[],eq:'>=',derecha:0})\n            this.props.handleRestricciones(restricciones);\n        }\n    }\n    //Funcion que se encarga de Añadir una Variable si es necesario.\n    handleNewsVar = method => {\n        let {variables} = this.props.status;\n        if (method === 'simplex') {\n            //Si el metodo es Simplex, se permite agregar mas de dos variables.\n            let counterWitheVar = variables.filter( element => element.descripcion.length === 0).length;\n            //Si la cantidad de Variables Libres es igual a 0 se agrega una mas.\n            if (counterWitheVar === 0 ) {  \n                variables.push({xi:variables.length,descripcion:'',coeficiente:0})\n                this.props.handleVariables(variables);    \n            }\n        }else{\n            //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que este de mas.\n            if(variables.length > 2) {     \n                variables.splice(2)\n                this.props.handleVariables(variables);\n            }\n        }\n        \n\n    }\n    \n    render () {\n        //Obtenemos de las props, las varaibles y restricciones.\n        let {variables} = this.props.status;\n        let {restricciones} = this.props.status;\n        // Generamos los input para las Variables\n        let variablesARenderizar = variables.map(\n            (variable,index) => {\n                return(<InputGroup key={index}>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+index}</InputGroupText>\n                            </InputGroupAddon>\n                            <Input\n                                name={index}\n                                placeholder=\"Descripcion de la Variable\"\n                                aria-label=\"Descripcion\"\n                                aria-describedby=\"variable\"\n                                onChange={this.handlerInputVar}\n                                value={variable.descripcion}/>\n                        </InputGroup>)});\n        //Generamos los imputs para las restricciones\n        let restriccionesARenderizar = restricciones.map(\n            (restriccion,index) => {\n                return(<InputGroup key={index}>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\"+index}</InputGroupText>\n                            </InputGroupAddon>\n                                <Input\n                                    name={index}\n                                    placeholder=\"Descripcion de la Restriccion\"\n                                    aria-label=\"Descripcion\"\n                                    aria-describedby=\"restriccion\"\n                                    onChange={this.handlerInputRes}\n                                    value={restriccion.descripcion}/>        \n                        </InputGroup>)});\n            \n        return(\n            <>\n                <h3>Comenzamos Configurando nuestro Modelo:</h3>\n                <Container>\n                    <Row>         \n                            <Card className=\"mx-auto\">\n                                <p>Metodo a Utilizar:</p>\n                                <ButtonGroup>\n                                    <Button onClick={() => {this.props.handleMethod('graph');this.handleNewsVar('graph')}} \n                                            active={this.props.status.method === 'graph'}>\n                                        GRAFICO\n                                    </Button>\n                                    <Button onClick={() => {this.props.handleMethod('simplex');this.handleNewsVar('simplex')}} \n                                            active={this.props.status.method === 'simplex'}>\n                                        SIMPLEX\n                                    </Button>\n                                </ButtonGroup>\n                            \n                            </Card>              \n                            <Card className=\"mx-auto\">\n                                <p>Tipo de Optimizacion:</p>\n                                <ButtonGroup>\n                                    <Button onClick={() => this.props.handleObjective('max')} \n                                            active={this.props.status.objective === 'max'}>\n                                        Maximizacion\n                                    </Button>\n                                    <Button onClick={() => this.props.handleObjective('min')} \n                                            active={this.props.status.objective === 'min'}>\n                                        Minimizacion\n                                    </Button>\n                                </ButtonGroup>\n                            </Card>\n                    </Row>\n                    <Row>\n                        <Card className=\"w-100 mt-3\">       \n                            <h5>Variables:</h5>\n                            {variablesARenderizar}\n                        </Card>\n                    </Row>\n                    <Row>\n                        <Card className=\"w-100 mt-3\">\n                            <h5>Restricciones:</h5>\n                            {restriccionesARenderizar}\n                        </Card>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default Configuration;","import React from 'react';\nimport {Button,InputGroupText, InputGroup, Input,InputGroupAddon, ButtonGroup} from 'reactstrap';\n\n\n\nconst Restriccion = props => {\n\n    let {coeficientes} = props.restriccion\n    if (coeficientes.length !== props.cantVariables) {        \n        let diferencia = props.cantVariables - coeficientes.length;\n        if ( diferencia > 0) {\n            for (let index = 0; index < diferencia; index++) {\n                coeficientes.push(0)       \n            }\n        }else {\n            coeficientes.splice(props.cantVariables)\n        }\n    }\n\n    let thisEq = props.restriccion.eq;\n    let inputsRestriccions = coeficientes.map((coeficiente,indx) => {\n        return(<>\n            <Input key={'C'+props.restriccion.ri+'r'+indx}\n                type=\"number\"\n                name={indx}\n                placeholder=\"Coefiente\"\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                value={coeficiente}\n                />\n            {indx === coeficientes.length-1 ? (\n                <ButtonGroup key={'Eq'+props.restriccion.ri}>\n                    <Button name='eq' \n                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \n                        active={thisEq === '<=' ? \"primary\":\"secondary\" } \n                        value='<='>{'<='}</Button>\n                    <Button name='eq' \n                        disabled \n                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \n                        active={thisEq === '=' ? \"primary\":\"secondary\"} \n                        value='='>{'='}</Button>\n                    <Button name='eq' \n                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \n                        active={thisEq === '>=' ? true:false} \n                        value='>='>{'>='}</Button>\n                </ButtonGroup>\n            ):(\n                <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>\n            )}\n            </>\n            )\n    })\n    return(\n        <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText key={'RR'+props.restriccion.ri}>{\"R\"+props.restriccion.ri}</InputGroupText>\n                    <InputGroupText key={'RD'+props.restriccion.ri}>{props.restriccion.descripcion}</InputGroupText>\n                </InputGroupAddon>\n                {inputsRestriccions}\n                <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\n                        type=\"number\"\n                        className='InputCoe'\n                        name={'derecha'}\n                        placeholder=\"Coe\"\n                        aria-label=\"Coe\"\n                        aria-describedby=\"restriccion\"\n                        onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                        value={props.restriccion.derecha}/>\n        </InputGroup>\n        )\n    \n}\n\nexport default Restriccion;","import React from 'react';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap'\n\n\nconst Variable = props=> {\n    return(\n        <InputGroup key={'VI'+props.variable.xi}>\n            <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText name=\"xi\" id=\"variable\">{\"X\"+props.variable.xi}</InputGroupText>\n                <InputGroupText name=\"description\" id=\"variable\">{props.variable.descripcion}</InputGroupText>\n            </InputGroupAddon>\n            \n            <Input      type='number'\n                        name={props.variable.xi}\n                        className='InputCoe'\n                        placeholder=\"Coef\"\n                        aria-label=\"Coeficiente\"\n                        aria-describedby=\"coe\"\n                        onChange={ e => props.handleCoefVar(e)}\n                        value={props.variable.coeficiente}\n                        />\n                    \n        </InputGroup>\n    ) \n}\n\nexport default Variable;","import React from 'react';\nimport {Container, Row, Card} from 'reactstrap';\nimport Restriccion from './elements/Restriccion';\nimport Variable from './elements/Variable';\n\n\n\nclass Processing extends React.Component{\n    constructor (props){\n        super(props);\n        this.state={};\n\n    }\n\n    isValidated() {\n        //Verificando si los coeficientes de las variables no son nulos\n        let verifQty = this.props.status.variables.every( va => va.coeficiente !== 0)\n        if (verifQty) {\n            this.props.handleStepResult(true);\n            return true\n        }else{\n            this.props.handleStepResult(true);\n\n            return true\n        }\n\n    }\n\n    //En el Siguiente Handler, Se toma del input de una variable en particular el coeficiente.\n    handleCoefVar = event => {        \n        let {value, name} = event.target;\n        if (value) {\n            let {variables} = this.props.status;\n            variables[name].coeficiente = parseInt(value);\n            this.props.handleVariables(variables);\n            console.log(this.props.status.variables);\n        }\n    }\n\n    handleCoefRes = (event,ri) => {\n        let {name,value } = event.target\n        let {restricciones} = this.props.status;\n        console.log('En la Res:'+ri+', en el campo:'+name+',con el valor:'+value);\n        \n        switch (name) {\n            case 'derecha':\n                    restricciones[ri].derecha = parseInt(value)\n                break;\n            case 'eq':\n                    restricciones[ri].eq = value\n                break;\n            default:\n                    restricciones[ri].coeficientes[name]= parseInt(value)\n                break;\n        }\n        console.log(restricciones);\n        this.props.handleRestricciones(restricciones);\n    }\n\n\n    render() {\n        //Obtenemos las propiedades del Super\n        let {variables} = this.props.status;        \n        let {restricciones} = this.props.status;\n        let varsOperativas = variables.filter(va => va.descripcion !== '').length;\n\n        //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n        let variablesInput = variables.map(\n            (variable,index) => {\n                if (variable.descripcion !== ''){\n                    return(<Variable key={'V'+index} handleCoefVar={this.handleCoefVar} variable={variable}/>)\n                }\n        });\n\n        let restriccionesInput = restricciones.map(\n            (restriccion,index) => {\n                if (restriccion.descripcion !== '') {\n                    return(<Restriccion key={'R'+index} handleCoefRes={this.handleCoefRes} cantVariables={varsOperativas} restriccion={restriccion}/>)\n                }\n        });\n        \n        return(\n            <>\n            <h3>Cargamos los datos de nuestro Modelo:</h3>\n            <Container>\n                <Row>\n                    <Card className=\"w-100 mt-3\">       \n                        <h5>Variables:</h5>\n                        {variablesInput}\n                    </Card>\n                </Row>\n                <Row>\n                    <Card className=\"w-100 mt-3\">\n                        <h5>Restricciones:</h5>\n                        {restriccionesInput}                        \n                    </Card>\n                </Row>\n            </Container>\n            </>\n        )\n    }\n}\n\nexport default Processing;","import React from 'react';\nimport {Alert,Card,CardTitle,CardBody,CardText} from 'reactstrap';\nimport solver from 'javascript-lp-solver';\n\nlet convertAppToModelForSolver = (modelo) => {\n    let {restricciones,variables,objective} = modelo;\n    let model = {\n        optimize:'coeficiente',\n        opType:'',\n        constraints: {},\n        variables: {}\n    };\n    //Tratamos el objetivo\n    model.opType = objective;\n        \n    //Tratamos las Variables\n    variables.forEach( vari => {  \n        if (vari.descripcion !== '') {\n            //Generamos una nueva Variable\n            let newVari = {};\n            newVari.coeficiente = vari.coeficiente;\n            restricciones.forEach(restri => {\n                if(restri.descripcion !==''){\n                    newVari['r'+restri.ri] = restri.coeficientes[vari.xi];\n                }\n            });\n            console.log(newVari);\n            model.variables[vari.xi] = newVari;\n        }     \n    });\n    //Tratamos las Restricciones\n    restricciones.forEach(restri => {\n        if(restri.descripcion !== ''){\n            if(restri.eq === '>='){ \n                let res = {};\n                res.min = restri.derecha     \n                model.constraints['r'+restri.ri] = res;\n            }else{\n                let res = {};\n                res.max = restri.derecha\n                model.constraints['r'+restri.ri] = res;\n            }\n        }    \n    });\n    console.log(model);\n    return model\n}\n        \n\n\nclass Presentation extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={result:false,model:''}\n    }\n\n    calculate = () => {\n        let model = convertAppToModelForSolver(this.props.status)\n//        return model\n        return solver.Solve(model);      \n    }\n\n\n    render () {\n        let result = 'No hay resultados todavia'\n        if (this.props.status.result){\n            result = this.calculate()\n            console.log(result);\n            \n        }\n        let {variables} =this.props.status;\n        let impresionDeResultados = variables\n        .map( vari => {\n            console.log(result);\n            console.log(result.xi);\n            \n            \n            return(\n            <Card>\n                <CardTitle>\n                    {'Variable: X'+vari.xi}\n                </CardTitle>\n                <CardBody>\n                    <CardText>{'Definicion: '+vari.descripcion}</CardText>\n                    <CardText>{'Se Producira: '+result[vari.xi]+' cantidad del Producto'}</CardText>\n                </CardBody>\n\n            </Card>)\n            }\n\n        ) \n        return(\n            <> \n                <h3>{'Se va a Ganar:$ '+result.result}</h3>\n                {impresionDeResultados}\n            </>\n\n        )\n    }\n}\n\nexport default Presentation;","import React from 'react';\nimport { Container,Col,Row,Progress } from \"reactstrap\";\nimport ReactWizard from 'react-bootstrap-wizard';\nimport  Configuration  from \"./Configuration\";\nimport  Processing  from \"./Processing\";\nimport  Presentation  from \"./Presentation\";\nimport logo from '../logo.svg';\n\n\n\nclass LinealProg extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={\n            variables:[{xi:0, descripcion:'',coeficiente:0},{xi:1,descripcion:'',coeficiente:0}],\n            restricciones:[{ri:0,descripcion:'',coeficientes:[],eq:'>=',derecha:0}],\n            method:\"graph\",\n            objective:\"max\",\n            result:false\n        };\n    }\n\n    handleRestricciones = restricciones => {\n        this.setState({restricciones}); \n    }\n\n    handleVariables = variables => {\n        this.setState({variables}); \n    }\n    \n    handleMethod = method => {\n        this.setState({method}); \n    }\n\n    handleObjective = objective => {\n        this.setState({objective})\n    }\n\n    handleResult = result => {\n        this.setState({result})\n    }\n    handleStepResult = result => {\n        this.setState({result})\n    }\n  \n    render () {\n        var steps = [\n            // this step hasn't got a isValidated() function, so it will be considered to be true\n            { stepName: \"Configuracion del Modelo\", \n            component:Configuration,\n            stepProps:{\n                status:this.state,\n                handleMethod:this.handleMethod,\n                handleVariables:this.handleVariables,\n                handleRestricciones:this.handleRestricciones,\n                handleObjective:this.handleObjective\n            }\n        },\n            // this step will be validated to false\n            { stepName: \"Detalles del Modelo\",\n            component:Processing, \n            stepProps:{\n                status:this.state,\n                handleVariables:this.handleVariables,\n                handleStepResult:this.handleStepResult,\n                handleRestricciones:this.handleRestricciones,\n            }\n        },\n            // this step will never be reachable because of the seconds isValidated() steps function that will always return false\n            { stepName: \"Presentacion de los Resultados\",\n            component:Presentation,\n            stepProps:{\n                status:this.state,        \n                handleResult:this.handleResult,\n            }\n        }\n          ];        \n        return(\n            <Container fluid className=\"App\">\n                <Row className=\"\">\n                    <Col xs={12} md={6}  className=\"mx-auto\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n                        <Progress  animated color=\"blue\" value=\"33\" />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} md={6}  className=\"my-4 mx-auto\">\n                        <ReactWizard\n                            steps={steps}\n                            title=\"Programacion Lineal\"\n                            headerTextCenter\n                            validate\n                            color=\"blue\"\n                            previousButtonText=\"Volver\"\n                            nextButtonText=\"Siguiente\"\n                            finishButtonClick={this.finishButtonClick}\n                            />\n                     \n                    </Col>                        \n                </Row>\n\n            </Container>\n\n        )\n    }\n}\n\nexport default LinealProg;","import React from 'react';\nimport  LinealProg  from \"./components/LinealProg\";\n\nfunction App() {\n  return (\n    <LinealProg></LinealProg>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}